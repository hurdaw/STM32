
GPIO_0903.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000f0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000284  0800028c  0001028c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000284  08000284  0001028c  2**0
                  CONTENTS
  4 .ARM          00000000  08000284  08000284  0001028c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000284  0800028c  0001028c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000284  08000284  00010284  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000288  08000288  00010288  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001028c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800028c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800028c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001028c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000102bc  2**0
                  CONTENTS, READONLY
 13 .debug_line   0000007a  00000000  00000000  000102ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line_str 00000047  00000000  00000000  00010379  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_info   00000023  00000000  00000000  000103c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 00000012  00000000  00000000  000103e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 00000028  00000000  00000000  000103f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00000053  00000000  00000000  00010420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00000019  00000000  00000000  00010473  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000002c  00000000  00000000  0001048c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800026c 	.word	0x0800026c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800026c 	.word	0x0800026c

080001d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001d4:	480c      	ldr	r0, [pc, #48]	; (8000208 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001dc:	480b      	ldr	r0, [pc, #44]	; (800020c <LoopForever+0x6>)
  ldr r1, =_edata
 80001de:	490c      	ldr	r1, [pc, #48]	; (8000210 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001e0:	4a0c      	ldr	r2, [pc, #48]	; (8000214 <LoopForever+0xe>)
  movs r3, #0
 80001e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001e4:	e002      	b.n	80001ec <LoopCopyDataInit>

080001e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ea:	3304      	adds	r3, #4

080001ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001f0:	d3f9      	bcc.n	80001e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001f2:	4a09      	ldr	r2, [pc, #36]	; (8000218 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001f4:	4c09      	ldr	r4, [pc, #36]	; (800021c <LoopForever+0x16>)
  movs r3, #0
 80001f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001f8:	e001      	b.n	80001fe <LoopFillZerobss>

080001fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001fc:	3204      	adds	r2, #4

080001fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000200:	d3fb      	bcc.n	80001fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000202:	f000 f80f 	bl	8000224 <__libc_init_array>

08000206 <LoopForever>:
/* Call the application's entry point.*/

LoopForever:
  b LoopForever
 8000206:	e7fe      	b.n	8000206 <LoopForever>
  ldr   r0, =_estack
 8000208:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800020c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000210:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000214:	0800028c 	.word	0x0800028c
  ldr r2, =_sbss
 8000218:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800021c:	2000001c 	.word	0x2000001c

08000220 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000220:	e7fe      	b.n	8000220 <ADC_IRQHandler>
	...

08000224 <__libc_init_array>:
 8000224:	b570      	push	{r4, r5, r6, lr}
 8000226:	4d0d      	ldr	r5, [pc, #52]	; (800025c <__libc_init_array+0x38>)
 8000228:	4c0d      	ldr	r4, [pc, #52]	; (8000260 <__libc_init_array+0x3c>)
 800022a:	1b64      	subs	r4, r4, r5
 800022c:	10a4      	asrs	r4, r4, #2
 800022e:	2600      	movs	r6, #0
 8000230:	42a6      	cmp	r6, r4
 8000232:	d109      	bne.n	8000248 <__libc_init_array+0x24>
 8000234:	4d0b      	ldr	r5, [pc, #44]	; (8000264 <__libc_init_array+0x40>)
 8000236:	4c0c      	ldr	r4, [pc, #48]	; (8000268 <__libc_init_array+0x44>)
 8000238:	f000 f818 	bl	800026c <_init>
 800023c:	1b64      	subs	r4, r4, r5
 800023e:	10a4      	asrs	r4, r4, #2
 8000240:	2600      	movs	r6, #0
 8000242:	42a6      	cmp	r6, r4
 8000244:	d105      	bne.n	8000252 <__libc_init_array+0x2e>
 8000246:	bd70      	pop	{r4, r5, r6, pc}
 8000248:	f855 3b04 	ldr.w	r3, [r5], #4
 800024c:	4798      	blx	r3
 800024e:	3601      	adds	r6, #1
 8000250:	e7ee      	b.n	8000230 <__libc_init_array+0xc>
 8000252:	f855 3b04 	ldr.w	r3, [r5], #4
 8000256:	4798      	blx	r3
 8000258:	3601      	adds	r6, #1
 800025a:	e7f2      	b.n	8000242 <__libc_init_array+0x1e>
 800025c:	08000284 	.word	0x08000284
 8000260:	08000284 	.word	0x08000284
 8000264:	08000284 	.word	0x08000284
 8000268:	08000288 	.word	0x08000288

0800026c <_init>:
 800026c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800026e:	bf00      	nop
 8000270:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000272:	bc08      	pop	{r3}
 8000274:	469e      	mov	lr, r3
 8000276:	4770      	bx	lr

08000278 <_fini>:
 8000278:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800027a:	bf00      	nop
 800027c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800027e:	bc08      	pop	{r3}
 8000280:	469e      	mov	lr, r3
 8000282:	4770      	bx	lr
