
Giua_ky.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004b40  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000954  08004ce0  08004ce0  00014ce0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005634  08005634  00020078  2**0
                  CONTENTS
  4 .ARM          00000000  08005634  08005634  00020078  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005634  08005634  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005634  08005634  00015634  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005638  08005638  00015638  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  0800563c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000142c  20000078  080056b4  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200014a4  080056b4  000214a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   000382a6  00000000  00000000  00020166  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002e90  00000000  00000000  0005840c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000da0  00000000  00000000  0005b2a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000002a4  00000000  00000000  0005c040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019141  00000000  00000000  0005c2e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000a964  00000000  00000000  00075425  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00055fc7  00000000  00000000  0007fd89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003b14  00000000  00000000  000d5d50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000045  00000000  00000000  000d9864  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000890  00000000  00000000  000d98a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004cc8 	.word	0x08004cc8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	08004cc8 	.word	0x08004cc8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 8000280:	b480      	push	{r7}
 8000282:	b087      	sub	sp, #28
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	6039      	str	r1, [r7, #0]
  uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 800028a:	2300      	movs	r3, #0
 800028c:	617b      	str	r3, [r7, #20]
 800028e:	2300      	movs	r3, #0
 8000290:	613b      	str	r3, [r7, #16]
 8000292:	2300      	movs	r3, #0
 8000294:	60fb      	str	r3, [r7, #12]

  /* ------------------------- Configure the port pins ---------------- */
  /*-- GPIO Mode Configuration --*/
  for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 8000296:	2300      	movs	r3, #0
 8000298:	617b      	str	r3, [r7, #20]
 800029a:	e076      	b.n	800038a <GPIO_Init+0x10a>
  {
    pos = ((uint32_t)0x01) << pinpos;
 800029c:	2201      	movs	r2, #1
 800029e:	697b      	ldr	r3, [r7, #20]
 80002a0:	fa02 f303 	lsl.w	r3, r2, r3
 80002a4:	613b      	str	r3, [r7, #16]
    /* Get the port pins position */
    currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 80002a6:	683b      	ldr	r3, [r7, #0]
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	693a      	ldr	r2, [r7, #16]
 80002ac:	4013      	ands	r3, r2
 80002ae:	60fb      	str	r3, [r7, #12]

    if (currentpin == pos)
 80002b0:	68fa      	ldr	r2, [r7, #12]
 80002b2:	693b      	ldr	r3, [r7, #16]
 80002b4:	429a      	cmp	r2, r3
 80002b6:	d165      	bne.n	8000384 <GPIO_Init+0x104>
    {
      GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	681a      	ldr	r2, [r3, #0]
 80002bc:	697b      	ldr	r3, [r7, #20]
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	2103      	movs	r1, #3
 80002c2:	fa01 f303 	lsl.w	r3, r1, r3
 80002c6:	43db      	mvns	r3, r3
 80002c8:	401a      	ands	r2, r3
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	601a      	str	r2, [r3, #0]
      GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	681a      	ldr	r2, [r3, #0]
 80002d2:	683b      	ldr	r3, [r7, #0]
 80002d4:	791b      	ldrb	r3, [r3, #4]
 80002d6:	4619      	mov	r1, r3
 80002d8:	697b      	ldr	r3, [r7, #20]
 80002da:	005b      	lsls	r3, r3, #1
 80002dc:	fa01 f303 	lsl.w	r3, r1, r3
 80002e0:	431a      	orrs	r2, r3
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	601a      	str	r2, [r3, #0]

      if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
 80002e6:	683b      	ldr	r3, [r7, #0]
 80002e8:	791b      	ldrb	r3, [r3, #4]
 80002ea:	2b01      	cmp	r3, #1
 80002ec:	d003      	beq.n	80002f6 <GPIO_Init+0x76>
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	791b      	ldrb	r3, [r3, #4]
 80002f2:	2b02      	cmp	r3, #2
 80002f4:	d12e      	bne.n	8000354 <GPIO_Init+0xd4>
      {
        /* Speed mode configuration */
        GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	689a      	ldr	r2, [r3, #8]
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	005b      	lsls	r3, r3, #1
 80002fe:	2103      	movs	r1, #3
 8000300:	fa01 f303 	lsl.w	r3, r1, r3
 8000304:	43db      	mvns	r3, r3
 8000306:	401a      	ands	r2, r3
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	609a      	str	r2, [r3, #8]
        GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	689a      	ldr	r2, [r3, #8]
 8000310:	683b      	ldr	r3, [r7, #0]
 8000312:	795b      	ldrb	r3, [r3, #5]
 8000314:	4619      	mov	r1, r3
 8000316:	697b      	ldr	r3, [r7, #20]
 8000318:	005b      	lsls	r3, r3, #1
 800031a:	fa01 f303 	lsl.w	r3, r1, r3
 800031e:	431a      	orrs	r2, r3
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	609a      	str	r2, [r3, #8]

        /* Output mode configuration*/
        GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	685a      	ldr	r2, [r3, #4]
 8000328:	697b      	ldr	r3, [r7, #20]
 800032a:	b29b      	uxth	r3, r3
 800032c:	4619      	mov	r1, r3
 800032e:	2301      	movs	r3, #1
 8000330:	408b      	lsls	r3, r1
 8000332:	43db      	mvns	r3, r3
 8000334:	401a      	ands	r2, r3
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	605a      	str	r2, [r3, #4]
        GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	685b      	ldr	r3, [r3, #4]
 800033e:	683a      	ldr	r2, [r7, #0]
 8000340:	7992      	ldrb	r2, [r2, #6]
 8000342:	4611      	mov	r1, r2
 8000344:	697a      	ldr	r2, [r7, #20]
 8000346:	b292      	uxth	r2, r2
 8000348:	fa01 f202 	lsl.w	r2, r1, r2
 800034c:	b292      	uxth	r2, r2
 800034e:	431a      	orrs	r2, r3
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	605a      	str	r2, [r3, #4]
      }

      /* Pull-up Pull down resistor configuration*/
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	68da      	ldr	r2, [r3, #12]
 8000358:	697b      	ldr	r3, [r7, #20]
 800035a:	b29b      	uxth	r3, r3
 800035c:	005b      	lsls	r3, r3, #1
 800035e:	2103      	movs	r1, #3
 8000360:	fa01 f303 	lsl.w	r3, r1, r3
 8000364:	43db      	mvns	r3, r3
 8000366:	401a      	ands	r2, r3
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	60da      	str	r2, [r3, #12]
      GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	68da      	ldr	r2, [r3, #12]
 8000370:	683b      	ldr	r3, [r7, #0]
 8000372:	79db      	ldrb	r3, [r3, #7]
 8000374:	4619      	mov	r1, r3
 8000376:	697b      	ldr	r3, [r7, #20]
 8000378:	005b      	lsls	r3, r3, #1
 800037a:	fa01 f303 	lsl.w	r3, r1, r3
 800037e:	431a      	orrs	r2, r3
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	60da      	str	r2, [r3, #12]
  for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 8000384:	697b      	ldr	r3, [r7, #20]
 8000386:	3301      	adds	r3, #1
 8000388:	617b      	str	r3, [r7, #20]
 800038a:	697b      	ldr	r3, [r7, #20]
 800038c:	2b0f      	cmp	r3, #15
 800038e:	d985      	bls.n	800029c <GPIO_Init+0x1c>
    }
  }
}
 8000390:	bf00      	nop
 8000392:	bf00      	nop
 8000394:	371c      	adds	r7, #28
 8000396:	46bd      	mov	sp, r7
 8000398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039c:	4770      	bx	lr

0800039e <GPIO_WriteBit>:
  *            @arg Bit_RESET: to clear the port pin
  *            @arg Bit_SET: to set the port pin
  * @retval None
  */
void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
{
 800039e:	b480      	push	{r7}
 80003a0:	b083      	sub	sp, #12
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
 80003a6:	460b      	mov	r3, r1
 80003a8:	807b      	strh	r3, [r7, #2]
 80003aa:	4613      	mov	r3, r2
 80003ac:	707b      	strb	r3, [r7, #1]
  if (BitVal != Bit_RESET)
 80003ae:	787b      	ldrb	r3, [r7, #1]
 80003b0:	2b00      	cmp	r3, #0
 80003b2:	d003      	beq.n	80003bc <GPIO_WriteBit+0x1e>
  {
    GPIOx->BSRRL = GPIO_Pin;
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	887a      	ldrh	r2, [r7, #2]
 80003b8:	831a      	strh	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRRH = GPIO_Pin ;
  }
}
 80003ba:	e002      	b.n	80003c2 <GPIO_WriteBit+0x24>
    GPIOx->BSRRH = GPIO_Pin ;
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	887a      	ldrh	r2, [r7, #2]
 80003c0:	835a      	strh	r2, [r3, #26]
}
 80003c2:	bf00      	nop
 80003c4:	370c      	adds	r7, #12
 80003c6:	46bd      	mov	sp, r7
 80003c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003cc:	4770      	bx	lr

080003ce <GPIO_PinAFConfig>:
  *            @arg GPIO_AF_LTDC: Connect LTDC pins to AF14 for STM32F429xx/439xx devices.
  *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
  * @retval None
  */
void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
{
 80003ce:	b480      	push	{r7}
 80003d0:	b085      	sub	sp, #20
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	6078      	str	r0, [r7, #4]
 80003d6:	460b      	mov	r3, r1
 80003d8:	807b      	strh	r3, [r7, #2]
 80003da:	4613      	mov	r3, r2
 80003dc:	707b      	strb	r3, [r7, #1]
  uint32_t temp = 0x00;
 80003de:	2300      	movs	r3, #0
 80003e0:	60fb      	str	r3, [r7, #12]
  uint32_t temp_2 = 0x00;
 80003e2:	2300      	movs	r3, #0
 80003e4:	60bb      	str	r3, [r7, #8]

  temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 80003e6:	787a      	ldrb	r2, [r7, #1]
 80003e8:	887b      	ldrh	r3, [r7, #2]
 80003ea:	f003 0307 	and.w	r3, r3, #7
 80003ee:	009b      	lsls	r3, r3, #2
 80003f0:	fa02 f303 	lsl.w	r3, r2, r3
 80003f4:	60fb      	str	r3, [r7, #12]
  GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 80003f6:	887b      	ldrh	r3, [r7, #2]
 80003f8:	08db      	lsrs	r3, r3, #3
 80003fa:	b29b      	uxth	r3, r3
 80003fc:	461a      	mov	r2, r3
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	3208      	adds	r2, #8
 8000402:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000406:	887b      	ldrh	r3, [r7, #2]
 8000408:	f003 0307 	and.w	r3, r3, #7
 800040c:	009b      	lsls	r3, r3, #2
 800040e:	210f      	movs	r1, #15
 8000410:	fa01 f303 	lsl.w	r3, r1, r3
 8000414:	43db      	mvns	r3, r3
 8000416:	8879      	ldrh	r1, [r7, #2]
 8000418:	08c9      	lsrs	r1, r1, #3
 800041a:	b289      	uxth	r1, r1
 800041c:	4608      	mov	r0, r1
 800041e:	ea02 0103 	and.w	r1, r2, r3
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	f100 0208 	add.w	r2, r0, #8
 8000428:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 800042c:	887b      	ldrh	r3, [r7, #2]
 800042e:	08db      	lsrs	r3, r3, #3
 8000430:	b29b      	uxth	r3, r3
 8000432:	461a      	mov	r2, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	3208      	adds	r2, #8
 8000438:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800043c:	68fa      	ldr	r2, [r7, #12]
 800043e:	4313      	orrs	r3, r2
 8000440:	60bb      	str	r3, [r7, #8]
  GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 8000442:	887b      	ldrh	r3, [r7, #2]
 8000444:	08db      	lsrs	r3, r3, #3
 8000446:	b29b      	uxth	r3, r3
 8000448:	461a      	mov	r2, r3
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	3208      	adds	r2, #8
 800044e:	68b9      	ldr	r1, [r7, #8]
 8000450:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
 8000454:	bf00      	nop
 8000456:	3714      	adds	r7, #20
 8000458:	46bd      	mov	sp, r7
 800045a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045e:	4770      	bx	lr

08000460 <RCC_GetClocksFreq>:
  *         configuration based on this function will be incorrect.
  *
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 8000460:	b480      	push	{r7}
 8000462:	b089      	sub	sp, #36	; 0x24
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8000468:	2300      	movs	r3, #0
 800046a:	61bb      	str	r3, [r7, #24]
 800046c:	2300      	movs	r3, #0
 800046e:	617b      	str	r3, [r7, #20]
 8000470:	2300      	movs	r3, #0
 8000472:	61fb      	str	r3, [r7, #28]
 8000474:	2302      	movs	r3, #2
 8000476:	613b      	str	r3, [r7, #16]
 8000478:	2300      	movs	r3, #0
 800047a:	60fb      	str	r3, [r7, #12]
 800047c:	2302      	movs	r3, #2
 800047e:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8000480:	4b4a      	ldr	r3, [pc, #296]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	f003 030c 	and.w	r3, r3, #12
 8000488:	61bb      	str	r3, [r7, #24]

  switch (tmp)
 800048a:	69bb      	ldr	r3, [r7, #24]
 800048c:	2b08      	cmp	r3, #8
 800048e:	d011      	beq.n	80004b4 <RCC_GetClocksFreq+0x54>
 8000490:	69bb      	ldr	r3, [r7, #24]
 8000492:	2b08      	cmp	r3, #8
 8000494:	d844      	bhi.n	8000520 <RCC_GetClocksFreq+0xc0>
 8000496:	69bb      	ldr	r3, [r7, #24]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d003      	beq.n	80004a4 <RCC_GetClocksFreq+0x44>
 800049c:	69bb      	ldr	r3, [r7, #24]
 800049e:	2b04      	cmp	r3, #4
 80004a0:	d004      	beq.n	80004ac <RCC_GetClocksFreq+0x4c>
 80004a2:	e03d      	b.n	8000520 <RCC_GetClocksFreq+0xc0>
  {
  case 0x00:  /* HSI used as system clock source */
    RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	4a42      	ldr	r2, [pc, #264]	; (80005b0 <RCC_GetClocksFreq+0x150>)
 80004a8:	601a      	str	r2, [r3, #0]
    break;
 80004aa:	e03d      	b.n	8000528 <RCC_GetClocksFreq+0xc8>
  case 0x04:  /* HSE used as system clock  source */
    RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4a41      	ldr	r2, [pc, #260]	; (80005b4 <RCC_GetClocksFreq+0x154>)
 80004b0:	601a      	str	r2, [r3, #0]
    break;
 80004b2:	e039      	b.n	8000528 <RCC_GetClocksFreq+0xc8>
  case 0x08:  /* PLL P used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLP
    */
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 80004b4:	4b3d      	ldr	r3, [pc, #244]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 80004b6:	685b      	ldr	r3, [r3, #4]
 80004b8:	0d9b      	lsrs	r3, r3, #22
 80004ba:	f003 0301 	and.w	r3, r3, #1
 80004be:	60fb      	str	r3, [r7, #12]
    pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80004c0:	4b3a      	ldr	r3, [pc, #232]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 80004c2:	685b      	ldr	r3, [r3, #4]
 80004c4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80004c8:	60bb      	str	r3, [r7, #8]

    if (pllsource != 0)
 80004ca:	68fb      	ldr	r3, [r7, #12]
 80004cc:	2b00      	cmp	r3, #0
 80004ce:	d00c      	beq.n	80004ea <RCC_GetClocksFreq+0x8a>
    {
      /* HSE used as PLL clock source */
      pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80004d0:	4a38      	ldr	r2, [pc, #224]	; (80005b4 <RCC_GetClocksFreq+0x154>)
 80004d2:	68bb      	ldr	r3, [r7, #8]
 80004d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80004d8:	4a34      	ldr	r2, [pc, #208]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 80004da:	6852      	ldr	r2, [r2, #4]
 80004dc:	0992      	lsrs	r2, r2, #6
 80004de:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80004e2:	fb02 f303 	mul.w	r3, r2, r3
 80004e6:	61fb      	str	r3, [r7, #28]
 80004e8:	e00b      	b.n	8000502 <RCC_GetClocksFreq+0xa2>
    }
    else
    {
      /* HSI used as PLL clock source */
      pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80004ea:	4a31      	ldr	r2, [pc, #196]	; (80005b0 <RCC_GetClocksFreq+0x150>)
 80004ec:	68bb      	ldr	r3, [r7, #8]
 80004ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80004f2:	4a2e      	ldr	r2, [pc, #184]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 80004f4:	6852      	ldr	r2, [r2, #4]
 80004f6:	0992      	lsrs	r2, r2, #6
 80004f8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80004fc:	fb02 f303 	mul.w	r3, r2, r3
 8000500:	61fb      	str	r3, [r7, #28]
    }

    pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8000502:	4b2a      	ldr	r3, [pc, #168]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 8000504:	685b      	ldr	r3, [r3, #4]
 8000506:	0c1b      	lsrs	r3, r3, #16
 8000508:	f003 0303 	and.w	r3, r3, #3
 800050c:	3301      	adds	r3, #1
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	613b      	str	r3, [r7, #16]
    RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 8000512:	69fa      	ldr	r2, [r7, #28]
 8000514:	693b      	ldr	r3, [r7, #16]
 8000516:	fbb2 f2f3 	udiv	r2, r2, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	601a      	str	r2, [r3, #0]
    break;
 800051e:	e003      	b.n	8000528 <RCC_GetClocksFreq+0xc8>
  default:
    RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	4a23      	ldr	r2, [pc, #140]	; (80005b0 <RCC_GetClocksFreq+0x150>)
 8000524:	601a      	str	r2, [r3, #0]
    break;
 8000526:	bf00      	nop
  }
  /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/

  /* Get HCLK prescaler */
  tmp = RCC->CFGR & RCC_CFGR_HPRE;
 8000528:	4b20      	ldr	r3, [pc, #128]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 800052a:	689b      	ldr	r3, [r3, #8]
 800052c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000530:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 4;
 8000532:	69bb      	ldr	r3, [r7, #24]
 8000534:	091b      	lsrs	r3, r3, #4
 8000536:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8000538:	4a1f      	ldr	r2, [pc, #124]	; (80005b8 <RCC_GetClocksFreq+0x158>)
 800053a:	69bb      	ldr	r3, [r7, #24]
 800053c:	4413      	add	r3, r2
 800053e:	781b      	ldrb	r3, [r3, #0]
 8000540:	b2db      	uxtb	r3, r3
 8000542:	617b      	str	r3, [r7, #20]
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681a      	ldr	r2, [r3, #0]
 8000548:	697b      	ldr	r3, [r7, #20]
 800054a:	40da      	lsrs	r2, r3
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	605a      	str	r2, [r3, #4]

  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 8000550:	4b16      	ldr	r3, [pc, #88]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 8000552:	689b      	ldr	r3, [r3, #8]
 8000554:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8000558:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 10;
 800055a:	69bb      	ldr	r3, [r7, #24]
 800055c:	0a9b      	lsrs	r3, r3, #10
 800055e:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8000560:	4a15      	ldr	r2, [pc, #84]	; (80005b8 <RCC_GetClocksFreq+0x158>)
 8000562:	69bb      	ldr	r3, [r7, #24]
 8000564:	4413      	add	r3, r2
 8000566:	781b      	ldrb	r3, [r3, #0]
 8000568:	b2db      	uxtb	r3, r3
 800056a:	617b      	str	r3, [r7, #20]
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	685a      	ldr	r2, [r3, #4]
 8000570:	697b      	ldr	r3, [r7, #20]
 8000572:	40da      	lsrs	r2, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	609a      	str	r2, [r3, #8]

  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 8000578:	4b0c      	ldr	r3, [pc, #48]	; (80005ac <RCC_GetClocksFreq+0x14c>)
 800057a:	689b      	ldr	r3, [r3, #8]
 800057c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000580:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 13;
 8000582:	69bb      	ldr	r3, [r7, #24]
 8000584:	0b5b      	lsrs	r3, r3, #13
 8000586:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8000588:	4a0b      	ldr	r2, [pc, #44]	; (80005b8 <RCC_GetClocksFreq+0x158>)
 800058a:	69bb      	ldr	r3, [r7, #24]
 800058c:	4413      	add	r3, r2
 800058e:	781b      	ldrb	r3, [r3, #0]
 8000590:	b2db      	uxtb	r3, r3
 8000592:	617b      	str	r3, [r7, #20]
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	685a      	ldr	r2, [r3, #4]
 8000598:	697b      	ldr	r3, [r7, #20]
 800059a:	40da      	lsrs	r2, r3
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	60da      	str	r2, [r3, #12]
}
 80005a0:	bf00      	nop
 80005a2:	3724      	adds	r7, #36	; 0x24
 80005a4:	46bd      	mov	sp, r7
 80005a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005aa:	4770      	bx	lr
 80005ac:	40023800 	.word	0x40023800
 80005b0:	00f42400 	.word	0x00f42400
 80005b4:	017d7840 	.word	0x017d7840
 80005b8:	20000000 	.word	0x20000000

080005bc <RCC_AHB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
 80005bc:	b480      	push	{r7}
 80005be:	b083      	sub	sp, #12
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	6078      	str	r0, [r7, #4]
 80005c4:	460b      	mov	r3, r1
 80005c6:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));

  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 80005c8:	78fb      	ldrb	r3, [r7, #3]
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d006      	beq.n	80005dc <RCC_AHB1PeriphClockCmd+0x20>
  {
    RCC->AHB1ENR |= RCC_AHB1Periph;
 80005ce:	4b0a      	ldr	r3, [pc, #40]	; (80005f8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80005d2:	4909      	ldr	r1, [pc, #36]	; (80005f8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	4313      	orrs	r3, r2
 80005d8:	630b      	str	r3, [r1, #48]	; 0x30
  }
  else
  {
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
  }
}
 80005da:	e006      	b.n	80005ea <RCC_AHB1PeriphClockCmd+0x2e>
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
 80005dc:	4b06      	ldr	r3, [pc, #24]	; (80005f8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	43db      	mvns	r3, r3
 80005e4:	4904      	ldr	r1, [pc, #16]	; (80005f8 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005e6:	4013      	ands	r3, r2
 80005e8:	630b      	str	r3, [r1, #48]	; 0x30
}
 80005ea:	bf00      	nop
 80005ec:	370c      	adds	r7, #12
 80005ee:	46bd      	mov	sp, r7
 80005f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f4:	4770      	bx	lr
 80005f6:	bf00      	nop
 80005f8:	40023800 	.word	0x40023800

080005fc <RCC_APB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
 80005fc:	b480      	push	{r7}
 80005fe:	b083      	sub	sp, #12
 8000600:	af00      	add	r7, sp, #0
 8000602:	6078      	str	r0, [r7, #4]
 8000604:	460b      	mov	r3, r1
 8000606:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 8000608:	78fb      	ldrb	r3, [r7, #3]
 800060a:	2b00      	cmp	r3, #0
 800060c:	d006      	beq.n	800061c <RCC_APB1PeriphClockCmd+0x20>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
 800060e:	4b0a      	ldr	r3, [pc, #40]	; (8000638 <RCC_APB1PeriphClockCmd+0x3c>)
 8000610:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000612:	4909      	ldr	r1, [pc, #36]	; (8000638 <RCC_APB1PeriphClockCmd+0x3c>)
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	4313      	orrs	r3, r2
 8000618:	640b      	str	r3, [r1, #64]	; 0x40
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
  }
}
 800061a:	e006      	b.n	800062a <RCC_APB1PeriphClockCmd+0x2e>
    RCC->APB1ENR &= ~RCC_APB1Periph;
 800061c:	4b06      	ldr	r3, [pc, #24]	; (8000638 <RCC_APB1PeriphClockCmd+0x3c>)
 800061e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	43db      	mvns	r3, r3
 8000624:	4904      	ldr	r1, [pc, #16]	; (8000638 <RCC_APB1PeriphClockCmd+0x3c>)
 8000626:	4013      	ands	r3, r2
 8000628:	640b      	str	r3, [r1, #64]	; 0x40
}
 800062a:	bf00      	nop
 800062c:	370c      	adds	r7, #12
 800062e:	46bd      	mov	sp, r7
 8000630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000634:	4770      	bx	lr
 8000636:	bf00      	nop
 8000638:	40023800 	.word	0x40023800

0800063c <Led_Init_red1>:
/* ----------------------------------modified 0604-----------------------------------------------*/
static uint16_t Kanman_light=0;
uint16_t AdcValue=0;
static uint16_t lightLevelAfterFilter = 0;
static void Led_Init_red1(void)
{
 800063c:	b580      	push	{r7, lr}
 800063e:	b082      	sub	sp, #8
 8000640:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(LEDREDA1Control_SetClock, ENABLE);
 8000642:	2101      	movs	r1, #1
 8000644:	2001      	movs	r0, #1
 8000646:	f7ff ffb9 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LEDREDA1_GPIO_PIN;
 800064a:	2302      	movs	r3, #2
 800064c:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800064e:	2301      	movs	r3, #1
 8000650:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000652:	2302      	movs	r3, #2
 8000654:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000656:	2300      	movs	r3, #0
 8000658:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 800065a:	2302      	movs	r3, #2
 800065c:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(LEDREDA1_GPIO_PORT, &GPIO_InitStructure);
 800065e:	463b      	mov	r3, r7
 8000660:	4619      	mov	r1, r3
 8000662:	4803      	ldr	r0, [pc, #12]	; (8000670 <Led_Init_red1+0x34>)
 8000664:	f7ff fe0c 	bl	8000280 <GPIO_Init>
}
 8000668:	bf00      	nop
 800066a:	3708      	adds	r7, #8
 800066c:	46bd      	mov	sp, r7
 800066e:	bd80      	pop	{r7, pc}
 8000670:	40020000 	.word	0x40020000

08000674 <Led_Init_red2>:

static void Led_Init_red2(void)
{
 8000674:	b580      	push	{r7, lr}
 8000676:	b082      	sub	sp, #8
 8000678:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(LEDREDB13Control_SetClock, ENABLE);
 800067a:	2101      	movs	r1, #1
 800067c:	2002      	movs	r0, #2
 800067e:	f7ff ff9d 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LEDREDB13_GPIO_PIN;
 8000682:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000686:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000688:	2301      	movs	r3, #1
 800068a:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800068c:	2302      	movs	r3, #2
 800068e:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000690:	2300      	movs	r3, #0
 8000692:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000694:	2302      	movs	r3, #2
 8000696:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(LEDREDB13_GPIO_PORT, &GPIO_InitStructure);
 8000698:	463b      	mov	r3, r7
 800069a:	4619      	mov	r1, r3
 800069c:	4803      	ldr	r0, [pc, #12]	; (80006ac <Led_Init_red2+0x38>)
 800069e:	f7ff fdef 	bl	8000280 <GPIO_Init>
}
 80006a2:	bf00      	nop
 80006a4:	3708      	adds	r7, #8
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bd80      	pop	{r7, pc}
 80006aa:	bf00      	nop
 80006ac:	40020400 	.word	0x40020400

080006b0 <Led_Init_blue1>:

static void Led_Init_blue1(void)
{
 80006b0:	b580      	push	{r7, lr}
 80006b2:	b082      	sub	sp, #8
 80006b4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(LEDREDA3Control_SetClock, ENABLE);
 80006b6:	2101      	movs	r1, #1
 80006b8:	2001      	movs	r0, #1
 80006ba:	f7ff ff7f 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LEDREDA3_GPIO_PIN;
 80006be:	2308      	movs	r3, #8
 80006c0:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80006c2:	2301      	movs	r3, #1
 80006c4:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80006c6:	2302      	movs	r3, #2
 80006c8:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80006ca:	2300      	movs	r3, #0
 80006cc:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80006ce:	2302      	movs	r3, #2
 80006d0:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(LEDREDA3_GPIO_PORT, &GPIO_InitStructure);
 80006d2:	463b      	mov	r3, r7
 80006d4:	4619      	mov	r1, r3
 80006d6:	4803      	ldr	r0, [pc, #12]	; (80006e4 <Led_Init_blue1+0x34>)
 80006d8:	f7ff fdd2 	bl	8000280 <GPIO_Init>
}
 80006dc:	bf00      	nop
 80006de:	3708      	adds	r7, #8
 80006e0:	46bd      	mov	sp, r7
 80006e2:	bd80      	pop	{r7, pc}
 80006e4:	40020000 	.word	0x40020000

080006e8 <Led_Init_blue2>:

static void Led_Init_blue2(void)
{
 80006e8:	b580      	push	{r7, lr}
 80006ea:	b082      	sub	sp, #8
 80006ec:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(LEDREDA10Control_SetClock, ENABLE);
 80006ee:	2101      	movs	r1, #1
 80006f0:	2001      	movs	r0, #1
 80006f2:	f7ff ff63 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LEDREDA10_GPIO_PIN;
 80006f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80006fa:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80006fc:	2301      	movs	r3, #1
 80006fe:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000700:	2302      	movs	r3, #2
 8000702:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000704:	2300      	movs	r3, #0
 8000706:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000708:	2302      	movs	r3, #2
 800070a:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(LEDREDA10_GPIO_PORT, &GPIO_InitStructure);
 800070c:	463b      	mov	r3, r7
 800070e:	4619      	mov	r1, r3
 8000710:	4803      	ldr	r0, [pc, #12]	; (8000720 <Led_Init_blue2+0x38>)
 8000712:	f7ff fdb5 	bl	8000280 <GPIO_Init>
}
 8000716:	bf00      	nop
 8000718:	3708      	adds	r7, #8
 800071a:	46bd      	mov	sp, r7
 800071c:	bd80      	pop	{r7, pc}
 800071e:	bf00      	nop
 8000720:	40020000 	.word	0x40020000

08000724 <Button_Init>:

static void Button_Init(void)
{
 8000724:	b580      	push	{r7, lr}
 8000726:	b082      	sub	sp, #8
 8000728:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(BUTTONControl_SetClock, ENABLE);
 800072a:	2101      	movs	r1, #1
 800072c:	2002      	movs	r0, #2
 800072e:	f7ff ff45 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 8000732:	2308      	movs	r3, #8
 8000734:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000736:	2300      	movs	r3, #0
 8000738:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800073a:	2302      	movs	r3, #2
 800073c:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800073e:	2301      	movs	r3, #1
 8000740:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(BUTTON_GPIO_PORT, &GPIO_InitStructure);
 8000742:	463b      	mov	r3, r7
 8000744:	4619      	mov	r1, r3
 8000746:	4803      	ldr	r0, [pc, #12]	; (8000754 <Button_Init+0x30>)
 8000748:	f7ff fd9a 	bl	8000280 <GPIO_Init>
}
 800074c:	bf00      	nop
 800074e:	3708      	adds	r7, #8
 8000750:	46bd      	mov	sp, r7
 8000752:	bd80      	pop	{r7, pc}
 8000754:	40020400 	.word	0x40020400

08000758 <Button_Init_b3>:

static void Button_Init_b3(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	b082      	sub	sp, #8
 800075c:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(BUTTONA4Control_SetClock, ENABLE);
 800075e:	2101      	movs	r1, #1
 8000760:	2001      	movs	r0, #1
 8000762:	f7ff ff2b 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUTTONA4_GPIO_PIN;
 8000766:	2310      	movs	r3, #16
 8000768:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800076a:	2300      	movs	r3, #0
 800076c:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800076e:	2302      	movs	r3, #2
 8000770:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000772:	2301      	movs	r3, #1
 8000774:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(BUTTONA4_GPIO_PORT, &GPIO_InitStructure);
 8000776:	463b      	mov	r3, r7
 8000778:	4619      	mov	r1, r3
 800077a:	4803      	ldr	r0, [pc, #12]	; (8000788 <Button_Init_b3+0x30>)
 800077c:	f7ff fd80 	bl	8000280 <GPIO_Init>
}
 8000780:	bf00      	nop
 8000782:	3708      	adds	r7, #8
 8000784:	46bd      	mov	sp, r7
 8000786:	bd80      	pop	{r7, pc}
 8000788:	40020000 	.word	0x40020000

0800078c <Button_Init_b4>:

static void Button_Init_b4(void)
{
 800078c:	b580      	push	{r7, lr}
 800078e:	b082      	sub	sp, #8
 8000790:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(BUTTONB0Control_SetClock, ENABLE);
 8000792:	2101      	movs	r1, #1
 8000794:	2002      	movs	r0, #2
 8000796:	f7ff ff11 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUTTONB0_GPIO_PIN;
 800079a:	2301      	movs	r3, #1
 800079c:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800079e:	2300      	movs	r3, #0
 80007a0:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80007a2:	2302      	movs	r3, #2
 80007a4:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80007a6:	2301      	movs	r3, #1
 80007a8:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(BUTTONB0_GPIO_PORT, &GPIO_InitStructure);
 80007aa:	463b      	mov	r3, r7
 80007ac:	4619      	mov	r1, r3
 80007ae:	4803      	ldr	r0, [pc, #12]	; (80007bc <Button_Init_b4+0x30>)
 80007b0:	f7ff fd66 	bl	8000280 <GPIO_Init>
}
 80007b4:	bf00      	nop
 80007b6:	3708      	adds	r7, #8
 80007b8:	46bd      	mov	sp, r7
 80007ba:	bd80      	pop	{r7, pc}
 80007bc:	40020400 	.word	0x40020400

080007c0 <Buzzer_Init>:

static void Buzzer_Init(void)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	b082      	sub	sp, #8
 80007c4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(BUZZERControl_SetClock, ENABLE);
 80007c6:	2101      	movs	r1, #1
 80007c8:	2004      	movs	r0, #4
 80007ca:	f7ff fef7 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 80007ce:	f44f 7300 	mov.w	r3, #512	; 0x200
 80007d2:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80007d4:	2301      	movs	r3, #1
 80007d6:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80007d8:	2302      	movs	r3, #2
 80007da:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80007dc:	2300      	movs	r3, #0
 80007de:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80007e0:	2302      	movs	r3, #2
 80007e2:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(BUZZER_GPIO_PORT, &GPIO_InitStructure);
 80007e4:	463b      	mov	r3, r7
 80007e6:	4619      	mov	r1, r3
 80007e8:	4803      	ldr	r0, [pc, #12]	; (80007f8 <Buzzer_Init+0x38>)
 80007ea:	f7ff fd49 	bl	8000280 <GPIO_Init>
}
 80007ee:	bf00      	nop
 80007f0:	3708      	adds	r7, #8
 80007f2:	46bd      	mov	sp, r7
 80007f4:	bd80      	pop	{r7, pc}
 80007f6:	bf00      	nop
 80007f8:	40020800 	.word	0x40020800

080007fc <LEDControl_SetStatus>:

static void LEDControl_SetStatus(GPIO_TypeDef* GPIOx, uint8_t GPIO_PIN, uint8_t Status)
{
 80007fc:	b480      	push	{r7}
 80007fe:	b083      	sub	sp, #12
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
 8000804:	460b      	mov	r3, r1
 8000806:	70fb      	strb	r3, [r7, #3]
 8000808:	4613      	mov	r3, r2
 800080a:	70bb      	strb	r3, [r7, #2]
	if (Status == GPIO_PIN_SET)
 800080c:	78bb      	ldrb	r3, [r7, #2]
 800080e:	2b01      	cmp	r3, #1
 8000810:	d10d      	bne.n	800082e <LEDControl_SetStatus+0x32>
	{
		GPIOx->BSRRL |= 1 << GPIO_PIN;
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	8b1b      	ldrh	r3, [r3, #24]
 8000816:	b29b      	uxth	r3, r3
 8000818:	b21a      	sxth	r2, r3
 800081a:	78fb      	ldrb	r3, [r7, #3]
 800081c:	2101      	movs	r1, #1
 800081e:	fa01 f303 	lsl.w	r3, r1, r3
 8000822:	b21b      	sxth	r3, r3
 8000824:	4313      	orrs	r3, r2
 8000826:	b21b      	sxth	r3, r3
 8000828:	b29a      	uxth	r2, r3
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	831a      	strh	r2, [r3, #24]
	}
	if (Status == GPIO_PIN_RESET)
 800082e:	78bb      	ldrb	r3, [r7, #2]
 8000830:	2b00      	cmp	r3, #0
 8000832:	d10d      	bne.n	8000850 <LEDControl_SetStatus+0x54>
	{
		GPIOx->BSRRH |= 1 << GPIO_PIN;
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	8b5b      	ldrh	r3, [r3, #26]
 8000838:	b29b      	uxth	r3, r3
 800083a:	b21a      	sxth	r2, r3
 800083c:	78fb      	ldrb	r3, [r7, #3]
 800083e:	2101      	movs	r1, #1
 8000840:	fa01 f303 	lsl.w	r3, r1, r3
 8000844:	b21b      	sxth	r3, r3
 8000846:	4313      	orrs	r3, r2
 8000848:	b21b      	sxth	r3, r3
 800084a:	b29a      	uxth	r2, r3
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	835a      	strh	r2, [r3, #26]
	}
}
 8000850:	bf00      	nop
 8000852:	370c      	adds	r7, #12
 8000854:	46bd      	mov	sp, r7
 8000856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085a:	4770      	bx	lr

0800085c <ButtonRead_Status>:

static uint8_t ButtonRead_Status(GPIO_TypeDef* GPIOx, uint32_t GPIO_PIN)
{
 800085c:	b480      	push	{r7}
 800085e:	b085      	sub	sp, #20
 8000860:	af00      	add	r7, sp, #0
 8000862:	6078      	str	r0, [r7, #4]
 8000864:	6039      	str	r1, [r7, #0]
	uint32_t Read_Pin;
	Read_Pin = (GPIOx->IDR) >> GPIO_PIN;
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	691a      	ldr	r2, [r3, #16]
 800086a:	683b      	ldr	r3, [r7, #0]
 800086c:	fa22 f303 	lsr.w	r3, r2, r3
 8000870:	60fb      	str	r3, [r7, #12]
	Read_Pin = Read_Pin & 0x01;
 8000872:	68fb      	ldr	r3, [r7, #12]
 8000874:	f003 0301 	and.w	r3, r3, #1
 8000878:	60fb      	str	r3, [r7, #12]

	return Read_Pin;
 800087a:	68fb      	ldr	r3, [r7, #12]
 800087c:	b2db      	uxtb	r3, r3
}
 800087e:	4618      	mov	r0, r3
 8000880:	3714      	adds	r7, #20
 8000882:	46bd      	mov	sp, r7
 8000884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000888:	4770      	bx	lr

0800088a <BuzzerControl_SetStatus>:

static void BuzzerControl_SetStatus(GPIO_TypeDef* GPIOx, uint8_t GPIO_PIN, uint8_t Status)
{
 800088a:	b480      	push	{r7}
 800088c:	b083      	sub	sp, #12
 800088e:	af00      	add	r7, sp, #0
 8000890:	6078      	str	r0, [r7, #4]
 8000892:	460b      	mov	r3, r1
 8000894:	70fb      	strb	r3, [r7, #3]
 8000896:	4613      	mov	r3, r2
 8000898:	70bb      	strb	r3, [r7, #2]
	if (Status == GPIO_PIN_SET)
 800089a:	78bb      	ldrb	r3, [r7, #2]
 800089c:	2b01      	cmp	r3, #1
 800089e:	d10d      	bne.n	80008bc <BuzzerControl_SetStatus+0x32>
	{
		GPIOx->BSRRL |= 1 << GPIO_PIN;
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	8b1b      	ldrh	r3, [r3, #24]
 80008a4:	b29b      	uxth	r3, r3
 80008a6:	b21a      	sxth	r2, r3
 80008a8:	78fb      	ldrb	r3, [r7, #3]
 80008aa:	2101      	movs	r1, #1
 80008ac:	fa01 f303 	lsl.w	r3, r1, r3
 80008b0:	b21b      	sxth	r3, r3
 80008b2:	4313      	orrs	r3, r2
 80008b4:	b21b      	sxth	r3, r3
 80008b6:	b29a      	uxth	r2, r3
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	831a      	strh	r2, [r3, #24]
	}
	if (Status == GPIO_PIN_RESET)
 80008bc:	78bb      	ldrb	r3, [r7, #2]
 80008be:	2b00      	cmp	r3, #0
 80008c0:	d10d      	bne.n	80008de <BuzzerControl_SetStatus+0x54>
	{
		GPIOx->BSRRH |= 1 << GPIO_PIN;
 80008c2:	687b      	ldr	r3, [r7, #4]
 80008c4:	8b5b      	ldrh	r3, [r3, #26]
 80008c6:	b29b      	uxth	r3, r3
 80008c8:	b21a      	sxth	r2, r3
 80008ca:	78fb      	ldrb	r3, [r7, #3]
 80008cc:	2101      	movs	r1, #1
 80008ce:	fa01 f303 	lsl.w	r3, r1, r3
 80008d2:	b21b      	sxth	r3, r3
 80008d4:	4313      	orrs	r3, r2
 80008d6:	b21b      	sxth	r3, r3
 80008d8:	b29a      	uxth	r2, r3
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	835a      	strh	r2, [r3, #26]
	}
}
 80008de:	bf00      	nop
 80008e0:	370c      	adds	r7, #12
 80008e2:	46bd      	mov	sp, r7
 80008e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e8:	4770      	bx	lr
	...

080008ec <main>:


int main(void)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	b084      	sub	sp, #16
 80008f0:	af00      	add	r7, sp, #0
	AppCommon();
 80008f2:	f000 f8bb 	bl	8000a6c <AppCommon>
	Led_Init_red1();
 80008f6:	f7ff fea1 	bl	800063c <Led_Init_red1>
	Led_Init_red2();
 80008fa:	f7ff febb 	bl	8000674 <Led_Init_red2>
	Led_Init_blue1();
 80008fe:	f7ff fed7 	bl	80006b0 <Led_Init_blue1>
	Led_Init_blue2();
 8000902:	f7ff fef1 	bl	80006e8 <Led_Init_blue2>
	Buzzer_Init();
 8000906:	f7ff ff5b 	bl	80007c0 <Buzzer_Init>
	Button_Init();
 800090a:	f7ff ff0b 	bl	8000724 <Button_Init>
	Button_Init_b3();
 800090e:	f7ff ff23 	bl	8000758 <Button_Init_b3>
	Button_Init_b4();
 8000912:	f7ff ff3b 	bl	800078c <Button_Init_b4>

	while(1)
	{
		processGetValueSensor();
 8000916:	f000 fac7 	bl	8000ea8 <processGetValueSensor>
		processTimerScheduler();
 800091a:	f001 f871 	bl	8001a00 <processTimerScheduler>
//		BuzzerControl_SetStatus(BUZZER_GPIO_PORT, BUZZER_PIN9, 0);
//		LEDControl_SetStatus(LEDREDA1_GPIO_PORT, LEDREDA1_PIN, 0);
//		LEDControl_SetStatus(LEDREDB13_GPIO_PORT, LEDREDB13_PIN, 0);

		// yeu cau 2
		if (ButtonRead_Status(BUTTON_GPIO_PORT, BUTTON_PIN3) == 0) {
 800091e:	2103      	movs	r1, #3
 8000920:	4836      	ldr	r0, [pc, #216]	; (80009fc <main+0x110>)
 8000922:	f7ff ff9b 	bl	800085c <ButtonRead_Status>
 8000926:	4603      	mov	r3, r0
 8000928:	2b00      	cmp	r3, #0
 800092a:	d149      	bne.n	80009c0 <main+0xd4>
			for (int i = 0; i < 2; i++) {
 800092c:	2300      	movs	r3, #0
 800092e:	60fb      	str	r3, [r7, #12]
 8000930:	e028      	b.n	8000984 <main+0x98>
				BuzzerControl_SetStatus(BUZZER_GPIO_PORT, BUZZER_PIN9, 1);
 8000932:	2201      	movs	r2, #1
 8000934:	2109      	movs	r1, #9
 8000936:	4832      	ldr	r0, [pc, #200]	; (8000a00 <main+0x114>)
 8000938:	f7ff ffa7 	bl	800088a <BuzzerControl_SetStatus>
				LEDControl_SetStatus(LEDREDA1_GPIO_PORT, LEDREDA1_PIN, 1);
 800093c:	2201      	movs	r2, #1
 800093e:	2101      	movs	r1, #1
 8000940:	4830      	ldr	r0, [pc, #192]	; (8000a04 <main+0x118>)
 8000942:	f7ff ff5b 	bl	80007fc <LEDControl_SetStatus>
				LEDControl_SetStatus(LEDREDB13_GPIO_PORT, LEDREDB13_PIN, 1);
 8000946:	2201      	movs	r2, #1
 8000948:	210d      	movs	r1, #13
 800094a:	482c      	ldr	r0, [pc, #176]	; (80009fc <main+0x110>)
 800094c:	f7ff ff56 	bl	80007fc <LEDControl_SetStatus>
				delay_ms(500);
 8000950:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000954:	f000 f858 	bl	8000a08 <delay_ms>
				BuzzerControl_SetStatus(BUZZER_GPIO_PORT, BUZZER_PIN9, 0);
 8000958:	2200      	movs	r2, #0
 800095a:	2109      	movs	r1, #9
 800095c:	4828      	ldr	r0, [pc, #160]	; (8000a00 <main+0x114>)
 800095e:	f7ff ff94 	bl	800088a <BuzzerControl_SetStatus>
				LEDControl_SetStatus(LEDREDA1_GPIO_PORT, LEDREDA1_PIN, 0);
 8000962:	2200      	movs	r2, #0
 8000964:	2101      	movs	r1, #1
 8000966:	4827      	ldr	r0, [pc, #156]	; (8000a04 <main+0x118>)
 8000968:	f7ff ff48 	bl	80007fc <LEDControl_SetStatus>
				LEDControl_SetStatus(LEDREDB13_GPIO_PORT, LEDREDB13_PIN, 0);
 800096c:	2200      	movs	r2, #0
 800096e:	210d      	movs	r1, #13
 8000970:	4822      	ldr	r0, [pc, #136]	; (80009fc <main+0x110>)
 8000972:	f7ff ff43 	bl	80007fc <LEDControl_SetStatus>
				delay_ms(500);
 8000976:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800097a:	f000 f845 	bl	8000a08 <delay_ms>
			for (int i = 0; i < 2; i++) {
 800097e:	68fb      	ldr	r3, [r7, #12]
 8000980:	3301      	adds	r3, #1
 8000982:	60fb      	str	r3, [r7, #12]
 8000984:	68fb      	ldr	r3, [r7, #12]
 8000986:	2b01      	cmp	r3, #1
 8000988:	ddd3      	ble.n	8000932 <main+0x46>
//		if (ButtonRead_Status(BUTTONA4_GPIO_PORT, BUTTONA4_PIN) == 0) {
//			LEDControl_SetStatus(LEDREDA3_GPIO_PORT, LEDREDA3_PIN, 1);
//			LEDControl_SetStatus(LEDREDA10_GPIO_PORT, LEDREDA10_PIN, 1);
//			delay_ms(4000);
//		}
		while(ButtonRead_Status(BUTTONA4_GPIO_PORT, BUTTONA4_PIN) == 0){
 800098a:	e019      	b.n	80009c0 <main+0xd4>
			int time=GetMilSecTick(), timeCurrent=0;
 800098c:	f001 f82c 	bl	80019e8 <GetMilSecTick>
 8000990:	4603      	mov	r3, r0
 8000992:	60bb      	str	r3, [r7, #8]
 8000994:	2300      	movs	r3, #0
 8000996:	607b      	str	r3, [r7, #4]
			if(time-timeCurrent>=4000){
 8000998:	68ba      	ldr	r2, [r7, #8]
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	1ad3      	subs	r3, r2, r3
 800099e:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 80009a2:	db0d      	blt.n	80009c0 <main+0xd4>
				timeCurrent=GetMilSecTick();
 80009a4:	f001 f820 	bl	80019e8 <GetMilSecTick>
 80009a8:	4603      	mov	r3, r0
 80009aa:	607b      	str	r3, [r7, #4]
				LEDControl_SetStatus(LEDREDA3_GPIO_PORT, LEDREDA3_PIN, 1);
 80009ac:	2201      	movs	r2, #1
 80009ae:	2103      	movs	r1, #3
 80009b0:	4814      	ldr	r0, [pc, #80]	; (8000a04 <main+0x118>)
 80009b2:	f7ff ff23 	bl	80007fc <LEDControl_SetStatus>
				LEDControl_SetStatus(LEDREDA10_GPIO_PORT, LEDREDA10_PIN, 1);
 80009b6:	2201      	movs	r2, #1
 80009b8:	210a      	movs	r1, #10
 80009ba:	4812      	ldr	r0, [pc, #72]	; (8000a04 <main+0x118>)
 80009bc:	f7ff ff1e 	bl	80007fc <LEDControl_SetStatus>
		while(ButtonRead_Status(BUTTONA4_GPIO_PORT, BUTTONA4_PIN) == 0){
 80009c0:	2104      	movs	r1, #4
 80009c2:	4810      	ldr	r0, [pc, #64]	; (8000a04 <main+0x118>)
 80009c4:	f7ff ff4a 	bl	800085c <ButtonRead_Status>
 80009c8:	4603      	mov	r3, r0
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d0de      	beq.n	800098c <main+0xa0>
			}
		}

		// yeu cau 4
		if (ButtonRead_Status(BUTTONB0_GPIO_PORT, BUTTONB0_PIN) == 0) {
 80009ce:	2100      	movs	r1, #0
 80009d0:	480a      	ldr	r0, [pc, #40]	; (80009fc <main+0x110>)
 80009d2:	f7ff ff43 	bl	800085c <ButtonRead_Status>
 80009d6:	4603      	mov	r3, r0
 80009d8:	2b00      	cmp	r3, #0
 80009da:	d19c      	bne.n	8000916 <main+0x2a>
			LEDControl_SetStatus(LEDREDA3_GPIO_PORT, LEDREDA3_PIN, 0);
 80009dc:	2200      	movs	r2, #0
 80009de:	2103      	movs	r1, #3
 80009e0:	4808      	ldr	r0, [pc, #32]	; (8000a04 <main+0x118>)
 80009e2:	f7ff ff0b 	bl	80007fc <LEDControl_SetStatus>
			LEDControl_SetStatus(LEDREDA10_GPIO_PORT, LEDREDA10_PIN, 0);
 80009e6:	2200      	movs	r2, #0
 80009e8:	210a      	movs	r1, #10
 80009ea:	4806      	ldr	r0, [pc, #24]	; (8000a04 <main+0x118>)
 80009ec:	f7ff ff06 	bl	80007fc <LEDControl_SetStatus>
			delay_ms(4000);
 80009f0:	f44f 607a 	mov.w	r0, #4000	; 0xfa0
 80009f4:	f000 f808 	bl	8000a08 <delay_ms>
		processGetValueSensor();
 80009f8:	e78d      	b.n	8000916 <main+0x2a>
 80009fa:	bf00      	nop
 80009fc:	40020400 	.word	0x40020400
 8000a00:	40020800 	.word	0x40020800
 8000a04:	40020000 	.word	0x40020000

08000a08 <delay_ms>:
 * @func   delay_ms
 * @brief  delay milisecon
 * @param  None
 * @retval None
 */
void delay_ms(uint32_t ms) {
 8000a08:	b580      	push	{r7, lr}
 8000a0a:	b084      	sub	sp, #16
 8000a0c:	af00      	add	r7, sp, #0
 8000a0e:	6078      	str	r0, [r7, #4]

	uint32_t startTime = GetMilSecTick(); //Lưu lại thời điểm hiện tại.
 8000a10:	f000 ffea 	bl	80019e8 <GetMilSecTick>
 8000a14:	60f8      	str	r0, [r7, #12]
	while (CalculatorTime(startTime, GetMilSecTick()) <= ms)
 8000a16:	bf00      	nop
 8000a18:	f000 ffe6 	bl	80019e8 <GetMilSecTick>
 8000a1c:	4603      	mov	r3, r0
 8000a1e:	4619      	mov	r1, r3
 8000a20:	68f8      	ldr	r0, [r7, #12]
 8000a22:	f000 f809 	bl	8000a38 <CalculatorTime>
 8000a26:	4602      	mov	r2, r0
 8000a28:	687b      	ldr	r3, [r7, #4]
 8000a2a:	4293      	cmp	r3, r2
 8000a2c:	d2f4      	bcs.n	8000a18 <delay_ms+0x10>
		;

//	Đợi cho đến khi hết khoảng time cài đặt

}
 8000a2e:	bf00      	nop
 8000a30:	bf00      	nop
 8000a32:	3710      	adds	r7, #16
 8000a34:	46bd      	mov	sp, r7
 8000a36:	bd80      	pop	{r7, pc}

08000a38 <CalculatorTime>:
 * @func   CalculatorTime
 * @brief  Caculator time button
 * @param  None
 * @retval None
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent) {
 8000a38:	b480      	push	{r7}
 8000a3a:	b085      	sub	sp, #20
 8000a3c:	af00      	add	r7, sp, #0
 8000a3e:	6078      	str	r0, [r7, #4]
 8000a40:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if (dwTimeCurrent >= dwTimeInit) {
 8000a42:	683a      	ldr	r2, [r7, #0]
 8000a44:	687b      	ldr	r3, [r7, #4]
 8000a46:	429a      	cmp	r2, r3
 8000a48:	d304      	bcc.n	8000a54 <CalculatorTime+0x1c>
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 8000a4a:	683a      	ldr	r2, [r7, #0]
 8000a4c:	687b      	ldr	r3, [r7, #4]
 8000a4e:	1ad3      	subs	r3, r2, r3
 8000a50:	60fb      	str	r3, [r7, #12]
 8000a52:	e004      	b.n	8000a5e <CalculatorTime+0x26>
	} else {
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 8000a54:	683a      	ldr	r2, [r7, #0]
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	1ad3      	subs	r3, r2, r3
 8000a5a:	3b01      	subs	r3, #1
 8000a5c:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 8000a5e:	68fb      	ldr	r3, [r7, #12]

}
 8000a60:	4618      	mov	r0, r3
 8000a62:	3714      	adds	r7, #20
 8000a64:	46bd      	mov	sp, r7
 8000a66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a6a:	4770      	bx	lr

08000a6c <AppCommon>:
 * @brief  Init everything
 * @param  None
 * @retval None
 */
static void AppCommon()
{
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	b082      	sub	sp, #8
 8000a70:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 8000a72:	f000 fbeb 	bl	800124c <SystemCoreClockUpdate>
	TimerInit();
 8000a76:	f000 fee3 	bl	8001840 <TimerInit>

    SPI1_Init();
 8000a7a:	f000 f835 	bl	8000ae8 <SPI1_Init>
    I2C_Init_temphumi();
 8000a7e:	f000 f863 	bl	8000b48 <I2C_Init_temphumi>
    TemHumSensor_Init();
 8000a82:	f001 f8a9 	bl	8001bd8 <TemHumSensor_Init>
    Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID); //là hàm khởi tạo LCD.
 8000a86:	2100      	movs	r1, #0
 8000a88:	4814      	ldr	r0, [pc, #80]	; (8000adc <AppCommon+0x70>)
 8000a8a:	f001 fa87 	bl	8001f9c <Ucglib4WireSWSPI_begin>
    ucg_ClearScreen(&ucg);
 8000a8e:	4813      	ldr	r0, [pc, #76]	; (8000adc <AppCommon+0x70>)
 8000a90:	f001 facb 	bl	800202a <ucg_ClearScreen>
    ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
 8000a94:	4912      	ldr	r1, [pc, #72]	; (8000ae0 <AppCommon+0x74>)
 8000a96:	4811      	ldr	r0, [pc, #68]	; (8000adc <AppCommon+0x70>)
 8000a98:	f002 fbe0 	bl	800325c <ucg_SetFont>
    ucg_SetColor(&ucg, 0, 255, 255, 255);
 8000a9c:	23ff      	movs	r3, #255	; 0xff
 8000a9e:	9300      	str	r3, [sp, #0]
 8000aa0:	23ff      	movs	r3, #255	; 0xff
 8000aa2:	22ff      	movs	r2, #255	; 0xff
 8000aa4:	2100      	movs	r1, #0
 8000aa6:	480d      	ldr	r0, [pc, #52]	; (8000adc <AppCommon+0x70>)
 8000aa8:	f002 fcb7 	bl	800341a <ucg_SetColor>
    ucg_SetColor(&ucg, 1, 0, 0, 0);
 8000aac:	2300      	movs	r3, #0
 8000aae:	9300      	str	r3, [sp, #0]
 8000ab0:	2300      	movs	r3, #0
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	2101      	movs	r1, #1
 8000ab6:	4809      	ldr	r0, [pc, #36]	; (8000adc <AppCommon+0x70>)
 8000ab8:	f002 fcaf 	bl	800341a <ucg_SetColor>
    ucg_SetRotate180(&ucg);
 8000abc:	4807      	ldr	r0, [pc, #28]	; (8000adc <AppCommon+0x70>)
 8000abe:	f002 fda7 	bl	8003610 <ucg_SetRotate180>
    Scan_TimeSensor(5000);
 8000ac2:	f241 3088 	movw	r0, #5000	; 0x1388
 8000ac6:	f000 fb07 	bl	80010d8 <Scan_TimeSensor>
    time_initial = GetMilSecTick();
 8000aca:	f000 ff8d 	bl	80019e8 <GetMilSecTick>
 8000ace:	4603      	mov	r3, r0
 8000ad0:	4a04      	ldr	r2, [pc, #16]	; (8000ae4 <AppCommon+0x78>)
 8000ad2:	6013      	str	r3, [r2, #0]
}
 8000ad4:	bf00      	nop
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	bd80      	pop	{r7, pc}
 8000ada:	bf00      	nop
 8000adc:	20000094 	.word	0x20000094
 8000ae0:	08004e58 	.word	0x08004e58
 8000ae4:	20000148 	.word	0x20000148

08000ae8 <SPI1_Init>:
 * @brief  Init SPI
 * @param  None
 * @retval None
 */
static void SPI1_Init(void)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	b082      	sub	sp, #8
 8000aec:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* GPIOA, GPIOB and GPIOC Clocks enable */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC, ENABLE);
 8000aee:	2101      	movs	r1, #1
 8000af0:	2007      	movs	r0, #7
 8000af2:	f7ff fd63 	bl	80005bc <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000af6:	2301      	movs	r3, #1
 8000af8:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 8000afa:	2303      	movs	r3, #3
 8000afc:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000afe:	2300      	movs	r3, #0
 8000b00:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000b02:	2300      	movs	r3, #0
 8000b04:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStructure.GPIO_Pin = SPI1_SCK_PIN | SPI1_MOSI_PIN | SPI1_RS_PIN | SPI1_MODE_PIN;
 8000b06:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8000b0a:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000b0c:	463b      	mov	r3, r7
 8000b0e:	4619      	mov	r1, r3
 8000b10:	480a      	ldr	r0, [pc, #40]	; (8000b3c <SPI1_Init+0x54>)
 8000b12:	f7ff fbb5 	bl	8000280 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_CS_PIN | SPI1_ENABLE_PIN;
 8000b16:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8000b1a:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000b1c:	463b      	mov	r3, r7
 8000b1e:	4619      	mov	r1, r3
 8000b20:	4807      	ldr	r0, [pc, #28]	; (8000b40 <SPI1_Init+0x58>)
 8000b22:	f7ff fbad 	bl	8000280 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_RST_PIN;
 8000b26:	2380      	movs	r3, #128	; 0x80
 8000b28:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000b2a:	463b      	mov	r3, r7
 8000b2c:	4619      	mov	r1, r3
 8000b2e:	4805      	ldr	r0, [pc, #20]	; (8000b44 <SPI1_Init+0x5c>)
 8000b30:	f7ff fba6 	bl	8000280 <GPIO_Init>
}
 8000b34:	bf00      	nop
 8000b36:	3708      	adds	r7, #8
 8000b38:	46bd      	mov	sp, r7
 8000b3a:	bd80      	pop	{r7, pc}
 8000b3c:	40020000 	.word	0x40020000
 8000b40:	40020400 	.word	0x40020400
 8000b44:	40020800 	.word	0x40020800

08000b48 <I2C_Init_temphumi>:
 * @brief  Init I2C temp and humi
 * @param  None
 * @retval None
 */
static void I2C_Init_temphumi(void)
{
 8000b48:	b580      	push	{r7, lr}
 8000b4a:	b086      	sub	sp, #24
 8000b4c:	af00      	add	r7, sp, #0
// Initialization struct
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	// Step 1: Initialize I2C
	RCC_APB1PeriphClockCmd(I2Cx_RCC, ENABLE);
 8000b4e:	2101      	movs	r1, #1
 8000b50:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8000b54:	f7ff fd52 	bl	80005fc <RCC_APB1PeriphClockCmd>
	I2C_InitStruct.I2C_ClockSpeed = 400000;
 8000b58:	4b1d      	ldr	r3, [pc, #116]	; (8000bd0 <I2C_Init_temphumi+0x88>)
 8000b5a:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 8000b60:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8000b64:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 8000b66:	2300      	movs	r3, #0
 8000b68:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 8000b6a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b6e:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 8000b70:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000b74:	82bb      	strh	r3, [r7, #20]
	I2C_Init(I2Cx_SENSOR, &I2C_InitStruct);
 8000b76:	f107 0308 	add.w	r3, r7, #8
 8000b7a:	4619      	mov	r1, r3
 8000b7c:	4815      	ldr	r0, [pc, #84]	; (8000bd4 <I2C_Init_temphumi+0x8c>)
 8000b7e:	f000 fc31 	bl	80013e4 <I2C_Init>
	I2C_Cmd(I2Cx_SENSOR, ENABLE);
 8000b82:	2101      	movs	r1, #1
 8000b84:	4813      	ldr	r0, [pc, #76]	; (8000bd4 <I2C_Init_temphumi+0x8c>)
 8000b86:	f000 fcef 	bl	8001568 <I2C_Cmd>

	// Step 2: Initialize GPIO as open drain alternate function
	RCC_AHB1PeriphClockCmd(I2C_GPIO_RCC, ENABLE);
 8000b8a:	2101      	movs	r1, #1
 8000b8c:	2002      	movs	r0, #2
 8000b8e:	f7ff fd15 	bl	80005bc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = I2C_PIN_SCL | I2C_PIN_SDA;
 8000b92:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000b96:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 8000b98:	2302      	movs	r3, #2
 8000b9a:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8000b9c:	2302      	movs	r3, #2
 8000b9e:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 8000ba0:	2301      	movs	r3, #1
 8000ba2:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(I2C_GPIO, &GPIO_InitStruct);
 8000ba8:	463b      	mov	r3, r7
 8000baa:	4619      	mov	r1, r3
 8000bac:	480a      	ldr	r0, [pc, #40]	; (8000bd8 <I2C_Init_temphumi+0x90>)
 8000bae:	f7ff fb67 	bl	8000280 <GPIO_Init>

	/* Connect PXx to I2C_SCL */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource8, GPIO_AF_I2C1);
 8000bb2:	2204      	movs	r2, #4
 8000bb4:	2108      	movs	r1, #8
 8000bb6:	4808      	ldr	r0, [pc, #32]	; (8000bd8 <I2C_Init_temphumi+0x90>)
 8000bb8:	f7ff fc09 	bl	80003ce <GPIO_PinAFConfig>

	/* Connect PXx to I2C_SDA */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource9, GPIO_AF_I2C1);
 8000bbc:	2204      	movs	r2, #4
 8000bbe:	2109      	movs	r1, #9
 8000bc0:	4805      	ldr	r0, [pc, #20]	; (8000bd8 <I2C_Init_temphumi+0x90>)
 8000bc2:	f7ff fc04 	bl	80003ce <GPIO_PinAFConfig>
}
 8000bc6:	bf00      	nop
 8000bc8:	3718      	adds	r7, #24
 8000bca:	46bd      	mov	sp, r7
 8000bcc:	bd80      	pop	{r7, pc}
 8000bce:	bf00      	nop
 8000bd0:	00061a80 	.word	0x00061a80
 8000bd4:	40005400 	.word	0x40005400
 8000bd8:	40020400 	.word	0x40020400

08000bdc <I2C_start>:
 * @brief   Generate I2C start condition
 * @param   None
 * @retval  None
 */
void I2C_start(void)
{
 8000bdc:	b580      	push	{r7, lr}
 8000bde:	af00      	add	r7, sp, #0
	// Wait until I2Cx is not busy anymore
	while (I2C_GetFlagStatus(I2Cx_SENSOR, I2C_FLAG_BUSY));
 8000be0:	bf00      	nop
 8000be2:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000be6:	480a      	ldr	r0, [pc, #40]	; (8000c10 <I2C_start+0x34>)
 8000be8:	f000 fdaa 	bl	8001740 <I2C_GetFlagStatus>
 8000bec:	4603      	mov	r3, r0
 8000bee:	2b00      	cmp	r3, #0
 8000bf0:	d1f7      	bne.n	8000be2 <I2C_start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2Cx_SENSOR, ENABLE);
 8000bf2:	2101      	movs	r1, #1
 8000bf4:	4806      	ldr	r0, [pc, #24]	; (8000c10 <I2C_start+0x34>)
 8000bf6:	f000 fcd7 	bl	80015a8 <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_MODE_SELECT));
 8000bfa:	bf00      	nop
 8000bfc:	4905      	ldr	r1, [pc, #20]	; (8000c14 <I2C_start+0x38>)
 8000bfe:	4804      	ldr	r0, [pc, #16]	; (8000c10 <I2C_start+0x34>)
 8000c00:	f000 fd6e 	bl	80016e0 <I2C_CheckEvent>
 8000c04:	4603      	mov	r3, r0
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	d0f8      	beq.n	8000bfc <I2C_start+0x20>
}
 8000c0a:	bf00      	nop
 8000c0c:	bf00      	nop
 8000c0e:	bd80      	pop	{r7, pc}
 8000c10:	40005400 	.word	0x40005400
 8000c14:	00030001 	.word	0x00030001

08000c18 <I2C_address_direction>:
 * @brief   e
 * @param   None
 * @retval  None
 */
void I2C_address_direction(uint8_t address, uint8_t direction)
{
 8000c18:	b580      	push	{r7, lr}
 8000c1a:	b082      	sub	sp, #8
 8000c1c:	af00      	add	r7, sp, #0
 8000c1e:	4603      	mov	r3, r0
 8000c20:	460a      	mov	r2, r1
 8000c22:	71fb      	strb	r3, [r7, #7]
 8000c24:	4613      	mov	r3, r2
 8000c26:	71bb      	strb	r3, [r7, #6]
	// Send slave address
	I2C_Send7bitAddress(I2Cx_SENSOR, address, direction);
 8000c28:	79ba      	ldrb	r2, [r7, #6]
 8000c2a:	79fb      	ldrb	r3, [r7, #7]
 8000c2c:	4619      	mov	r1, r3
 8000c2e:	480f      	ldr	r0, [pc, #60]	; (8000c6c <I2C_address_direction+0x54>)
 8000c30:	f000 fcfa 	bl	8001628 <I2C_Send7bitAddress>

	// Wait for I2C EV6
	// It means that a slave acknowledges his address
	if (direction == I2C_Direction_Transmitter)		// truyền
 8000c34:	79bb      	ldrb	r3, [r7, #6]
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	d108      	bne.n	8000c4c <I2C_address_direction+0x34>
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 8000c3a:	bf00      	nop
 8000c3c:	490c      	ldr	r1, [pc, #48]	; (8000c70 <I2C_address_direction+0x58>)
 8000c3e:	480b      	ldr	r0, [pc, #44]	; (8000c6c <I2C_address_direction+0x54>)
 8000c40:	f000 fd4e 	bl	80016e0 <I2C_CheckEvent>
 8000c44:	4603      	mov	r3, r0
 8000c46:	2b00      	cmp	r3, #0
 8000c48:	d0f8      	beq.n	8000c3c <I2C_address_direction+0x24>
	}
	else if (direction == I2C_Direction_Receiver)  // nhận
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
	}
}
 8000c4a:	e00a      	b.n	8000c62 <I2C_address_direction+0x4a>
	else if (direction == I2C_Direction_Receiver)  // nhận
 8000c4c:	79bb      	ldrb	r3, [r7, #6]
 8000c4e:	2b01      	cmp	r3, #1
 8000c50:	d107      	bne.n	8000c62 <I2C_address_direction+0x4a>
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 8000c52:	bf00      	nop
 8000c54:	4907      	ldr	r1, [pc, #28]	; (8000c74 <I2C_address_direction+0x5c>)
 8000c56:	4805      	ldr	r0, [pc, #20]	; (8000c6c <I2C_address_direction+0x54>)
 8000c58:	f000 fd42 	bl	80016e0 <I2C_CheckEvent>
 8000c5c:	4603      	mov	r3, r0
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d0f8      	beq.n	8000c54 <I2C_address_direction+0x3c>
}
 8000c62:	bf00      	nop
 8000c64:	3708      	adds	r7, #8
 8000c66:	46bd      	mov	sp, r7
 8000c68:	bd80      	pop	{r7, pc}
 8000c6a:	bf00      	nop
 8000c6c:	40005400 	.word	0x40005400
 8000c70:	00070082 	.word	0x00070082
 8000c74:	00030002 	.word	0x00030002

08000c78 <I2C_transmit>:
 * @brief   Transmit one byte to I2C bus
 * @param   None
 * @retval  None
 */
void I2C_transmit(uint8_t byte)
{
 8000c78:	b580      	push	{r7, lr}
 8000c7a:	b082      	sub	sp, #8
 8000c7c:	af00      	add	r7, sp, #0
 8000c7e:	4603      	mov	r3, r0
 8000c80:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2Cx_SENSOR, byte);
 8000c82:	79fb      	ldrb	r3, [r7, #7]
 8000c84:	4619      	mov	r1, r3
 8000c86:	4808      	ldr	r0, [pc, #32]	; (8000ca8 <I2C_transmit+0x30>)
 8000c88:	f000 fd0c 	bl	80016a4 <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000c8c:	bf00      	nop
 8000c8e:	4907      	ldr	r1, [pc, #28]	; (8000cac <I2C_transmit+0x34>)
 8000c90:	4805      	ldr	r0, [pc, #20]	; (8000ca8 <I2C_transmit+0x30>)
 8000c92:	f000 fd25 	bl	80016e0 <I2C_CheckEvent>
 8000c96:	4603      	mov	r3, r0
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d0f8      	beq.n	8000c8e <I2C_transmit+0x16>
}
 8000c9c:	bf00      	nop
 8000c9e:	bf00      	nop
 8000ca0:	3708      	adds	r7, #8
 8000ca2:	46bd      	mov	sp, r7
 8000ca4:	bd80      	pop	{r7, pc}
 8000ca6:	bf00      	nop
 8000ca8:	40005400 	.word	0x40005400
 8000cac:	00070084 	.word	0x00070084

08000cb0 <I2C_stop>:
 * @brief   Generate I2C stop condition
 * @param   None
 * @retval  None
 */
void I2C_stop(void)
{
 8000cb0:	b580      	push	{r7, lr}
 8000cb2:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2Cx_SENSOR, ENABLE);
 8000cb4:	2101      	movs	r1, #1
 8000cb6:	4802      	ldr	r0, [pc, #8]	; (8000cc0 <I2C_stop+0x10>)
 8000cb8:	f000 fc96 	bl	80015e8 <I2C_GenerateSTOP>
}
 8000cbc:	bf00      	nop
 8000cbe:	bd80      	pop	{r7, pc}
 8000cc0:	40005400 	.word	0x40005400

08000cc4 <I2C_receive_nack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_nack(void)
{
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	af00      	add	r7, sp, #0
	// Disable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, DISABLE);
 8000cc8:	2100      	movs	r1, #0
 8000cca:	4808      	ldr	r0, [pc, #32]	; (8000cec <I2C_receive_nack+0x28>)
 8000ccc:	f000 fcca 	bl	8001664 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000cd0:	bf00      	nop
 8000cd2:	4907      	ldr	r1, [pc, #28]	; (8000cf0 <I2C_receive_nack+0x2c>)
 8000cd4:	4805      	ldr	r0, [pc, #20]	; (8000cec <I2C_receive_nack+0x28>)
 8000cd6:	f000 fd03 	bl	80016e0 <I2C_CheckEvent>
 8000cda:	4603      	mov	r3, r0
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d0f8      	beq.n	8000cd2 <I2C_receive_nack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000ce0:	4802      	ldr	r0, [pc, #8]	; (8000cec <I2C_receive_nack+0x28>)
 8000ce2:	f000 fcef 	bl	80016c4 <I2C_ReceiveData>
 8000ce6:	4603      	mov	r3, r0
}
 8000ce8:	4618      	mov	r0, r3
 8000cea:	bd80      	pop	{r7, pc}
 8000cec:	40005400 	.word	0x40005400
 8000cf0:	00030040 	.word	0x00030040

08000cf4 <I2C_receive_ack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_ack(void)
{
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	af00      	add	r7, sp, #0
	// Enable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, ENABLE);
 8000cf8:	2101      	movs	r1, #1
 8000cfa:	4808      	ldr	r0, [pc, #32]	; (8000d1c <I2C_receive_ack+0x28>)
 8000cfc:	f000 fcb2 	bl	8001664 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000d00:	bf00      	nop
 8000d02:	4907      	ldr	r1, [pc, #28]	; (8000d20 <I2C_receive_ack+0x2c>)
 8000d04:	4805      	ldr	r0, [pc, #20]	; (8000d1c <I2C_receive_ack+0x28>)
 8000d06:	f000 fceb 	bl	80016e0 <I2C_CheckEvent>
 8000d0a:	4603      	mov	r3, r0
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	d0f8      	beq.n	8000d02 <I2C_receive_ack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000d10:	4802      	ldr	r0, [pc, #8]	; (8000d1c <I2C_receive_ack+0x28>)
 8000d12:	f000 fcd7 	bl	80016c4 <I2C_ReceiveData>
 8000d16:	4603      	mov	r3, r0
}
 8000d18:	4618      	mov	r0, r3
 8000d1a:	bd80      	pop	{r7, pc}
 8000d1c:	40005400 	.word	0x40005400
 8000d20:	00030040 	.word	0x00030040

08000d24 <TemHumSensor_readRegister>:
		uint8_t address,	// Địa chỉ cảm biến.
	    uint8_t* pAddressRegister, // Địa chỉ của thanh ghi chứa dữ liệu nhiệt độ, độ ẩm.
	    uint8_t* pDataRegister, // Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint8_t Length_Data, //Độ dài Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint16_t delay)	//Dữ liệu đọc được từ thanh ghi tương ứng.
{
 8000d24:	b590      	push	{r4, r7, lr}
 8000d26:	b087      	sub	sp, #28
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	60b9      	str	r1, [r7, #8]
 8000d2c:	607a      	str	r2, [r7, #4]
 8000d2e:	461a      	mov	r2, r3
 8000d30:	4603      	mov	r3, r0
 8000d32:	73fb      	strb	r3, [r7, #15]
 8000d34:	4613      	mov	r3, r2
 8000d36:	73bb      	strb	r3, [r7, #14]
	uint8_t LengthCmd = pAddressRegister[0];
 8000d38:	68bb      	ldr	r3, [r7, #8]
 8000d3a:	781b      	ldrb	r3, [r3, #0]
 8000d3c:	757b      	strb	r3, [r7, #21]

	I2C_start();	// conditon start
 8000d3e:	f7ff ff4d 	bl	8000bdc <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Transmitter); // send slave address - Transmit
 8000d42:	7bfb      	ldrb	r3, [r7, #15]
 8000d44:	005b      	lsls	r3, r3, #1
 8000d46:	b2db      	uxtb	r3, r3
 8000d48:	2100      	movs	r1, #0
 8000d4a:	4618      	mov	r0, r3
 8000d4c:	f7ff ff64 	bl	8000c18 <I2C_address_direction>

	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000d50:	2301      	movs	r3, #1
 8000d52:	75fb      	strb	r3, [r7, #23]
 8000d54:	e009      	b.n	8000d6a <TemHumSensor_readRegister+0x46>
		I2C_transmit(pAddressRegister[i]);		// Send Data from register
 8000d56:	7dfb      	ldrb	r3, [r7, #23]
 8000d58:	68ba      	ldr	r2, [r7, #8]
 8000d5a:	4413      	add	r3, r2
 8000d5c:	781b      	ldrb	r3, [r3, #0]
 8000d5e:	4618      	mov	r0, r3
 8000d60:	f7ff ff8a 	bl	8000c78 <I2C_transmit>
	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000d64:	7dfb      	ldrb	r3, [r7, #23]
 8000d66:	3301      	adds	r3, #1
 8000d68:	75fb      	strb	r3, [r7, #23]
 8000d6a:	7dfa      	ldrb	r2, [r7, #23]
 8000d6c:	7d7b      	ldrb	r3, [r7, #21]
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	d3f1      	bcc.n	8000d56 <TemHumSensor_readRegister+0x32>
	}

    if (delay > 0) {
 8000d72:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000d74:	2b00      	cmp	r3, #0
 8000d76:	d003      	beq.n	8000d80 <TemHumSensor_readRegister+0x5c>
        delay_ms(delay);
 8000d78:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	f7ff fe44 	bl	8000a08 <delay_ms>
    }

	I2C_stop();// condition stop
 8000d80:	f7ff ff96 	bl	8000cb0 <I2C_stop>

	I2C_start(); // condition start
 8000d84:	f7ff ff2a 	bl	8000bdc <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Receiver); // send slave address - Received
 8000d88:	7bfb      	ldrb	r3, [r7, #15]
 8000d8a:	005b      	lsls	r3, r3, #1
 8000d8c:	b2db      	uxtb	r3, r3
 8000d8e:	2101      	movs	r1, #1
 8000d90:	4618      	mov	r0, r3
 8000d92:	f7ff ff41 	bl	8000c18 <I2C_address_direction>

	for (uint8_t i = 0; i < Length_Data; i++)
 8000d96:	2300      	movs	r3, #0
 8000d98:	75bb      	strb	r3, [r7, #22]
 8000d9a:	e016      	b.n	8000dca <TemHumSensor_readRegister+0xa6>
	{
		if (i == (Length_Data - 1))
 8000d9c:	7dba      	ldrb	r2, [r7, #22]
 8000d9e:	7bbb      	ldrb	r3, [r7, #14]
 8000da0:	3b01      	subs	r3, #1
 8000da2:	429a      	cmp	r2, r3
 8000da4:	d107      	bne.n	8000db6 <TemHumSensor_readRegister+0x92>
		{
			pDataRegister[i] = I2C_receive_nack();  // 	NA
 8000da6:	7dbb      	ldrb	r3, [r7, #22]
 8000da8:	687a      	ldr	r2, [r7, #4]
 8000daa:	18d4      	adds	r4, r2, r3
 8000dac:	f7ff ff8a 	bl	8000cc4 <I2C_receive_nack>
 8000db0:	4603      	mov	r3, r0
 8000db2:	7023      	strb	r3, [r4, #0]
 8000db4:	e006      	b.n	8000dc4 <TemHumSensor_readRegister+0xa0>
		}
		else
		{
			pDataRegister[i] = I2C_receive_ack();   // A
 8000db6:	7dbb      	ldrb	r3, [r7, #22]
 8000db8:	687a      	ldr	r2, [r7, #4]
 8000dba:	18d4      	adds	r4, r2, r3
 8000dbc:	f7ff ff9a 	bl	8000cf4 <I2C_receive_ack>
 8000dc0:	4603      	mov	r3, r0
 8000dc2:	7023      	strb	r3, [r4, #0]
	for (uint8_t i = 0; i < Length_Data; i++)
 8000dc4:	7dbb      	ldrb	r3, [r7, #22]
 8000dc6:	3301      	adds	r3, #1
 8000dc8:	75bb      	strb	r3, [r7, #22]
 8000dca:	7dba      	ldrb	r2, [r7, #22]
 8000dcc:	7bbb      	ldrb	r3, [r7, #14]
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	d3e4      	bcc.n	8000d9c <TemHumSensor_readRegister+0x78>
		}
	}
	I2C_stop();
 8000dd2:	f7ff ff6d 	bl	8000cb0 <I2C_stop>

}
 8000dd6:	bf00      	nop
 8000dd8:	371c      	adds	r7, #28
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	bd90      	pop	{r4, r7, pc}
	...

08000de0 <GetTemp_Sensor>:
 * @brief   Get value temperature
 * @param   None
 * @retval  Temperature
 */
uint32_t GetTemp_Sensor(void)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b086      	sub	sp, #24
 8000de4:	af02      	add	r7, sp, #8
	uint32_t RT;
    uint8_t pRT[3] = { 0 };	// pRT[0]: MSB		pRT[1]: LSB
 8000de6:	4b15      	ldr	r3, [pc, #84]	; (8000e3c <GetTemp_Sensor+0x5c>)
 8000de8:	881b      	ldrh	r3, [r3, #0]
 8000dea:	813b      	strh	r3, [r7, #8]
 8000dec:	2300      	movs	r3, #0
 8000dee:	72bb      	strb	r3, [r7, #10]

    uint8_t CMD_MEASURE_TEMP[2] =  { 2, 0xE3 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 8000df0:	f24e 3302 	movw	r3, #58114	; 0xe302
 8000df4:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_TEMP, pRT, 3, 4);
 8000df6:	f107 0208 	add.w	r2, r7, #8
 8000dfa:	1d39      	adds	r1, r7, #4
 8000dfc:	2304      	movs	r3, #4
 8000dfe:	9300      	str	r3, [sp, #0]
 8000e00:	2303      	movs	r3, #3
 8000e02:	2040      	movs	r0, #64	; 0x40
 8000e04:	f7ff ff8e 	bl	8000d24 <TemHumSensor_readRegister>

    RT = (pRT[0] << 8) + pRT[1];			// RT_CODE (MSB << 8) + LSB		// Temp = ((17572* RT)/(0xFFu +1) - 4685)/100
 8000e08:	7a3b      	ldrb	r3, [r7, #8]
 8000e0a:	021b      	lsls	r3, r3, #8
 8000e0c:	7a7a      	ldrb	r2, [r7, #9]
 8000e0e:	4413      	add	r3, r2
 8000e10:	60fb      	str	r3, [r7, #12]
    RT = ((RT * 17572) >> 16) - 4685;
 8000e12:	68fb      	ldr	r3, [r7, #12]
 8000e14:	f244 42a4 	movw	r2, #17572	; 0x44a4
 8000e18:	fb02 f303 	mul.w	r3, r2, r3
 8000e1c:	0c1b      	lsrs	r3, r3, #16
 8000e1e:	f5a3 5392 	sub.w	r3, r3, #4672	; 0x1240
 8000e22:	3b0d      	subs	r3, #13
 8000e24:	60fb      	str	r3, [r7, #12]
    RT = RT/100;
 8000e26:	68fb      	ldr	r3, [r7, #12]
 8000e28:	4a05      	ldr	r2, [pc, #20]	; (8000e40 <GetTemp_Sensor+0x60>)
 8000e2a:	fba2 2303 	umull	r2, r3, r2, r3
 8000e2e:	095b      	lsrs	r3, r3, #5
 8000e30:	60fb      	str	r3, [r7, #12]
    return RT;
 8000e32:	68fb      	ldr	r3, [r7, #12]
}
 8000e34:	4618      	mov	r0, r3
 8000e36:	3710      	adds	r7, #16
 8000e38:	46bd      	mov	sp, r7
 8000e3a:	bd80      	pop	{r7, pc}
 8000e3c:	08004ce0 	.word	0x08004ce0
 8000e40:	51eb851f 	.word	0x51eb851f

08000e44 <GetHumi_Sensor>:
 * @brief   Get value humidity
 * @param   None
 * @retval  Humidity
 */
uint32_t GetHumi_Sensor(void)
{
 8000e44:	b580      	push	{r7, lr}
 8000e46:	b086      	sub	sp, #24
 8000e48:	af02      	add	r7, sp, #8
	uint32_t RH;
	uint8_t pRH[3] = { 0 };
 8000e4a:	4b15      	ldr	r3, [pc, #84]	; (8000ea0 <GetHumi_Sensor+0x5c>)
 8000e4c:	881b      	ldrh	r3, [r3, #0]
 8000e4e:	813b      	strh	r3, [r7, #8]
 8000e50:	2300      	movs	r3, #0
 8000e52:	72bb      	strb	r3, [r7, #10]


	uint8_t CMD_MEASURE_HUMI[2] =  { 2, 0xE5 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 8000e54:	f24e 5302 	movw	r3, #58626	; 0xe502
 8000e58:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_HUMI, pRH, 3, 8);
 8000e5a:	f107 0208 	add.w	r2, r7, #8
 8000e5e:	1d39      	adds	r1, r7, #4
 8000e60:	2308      	movs	r3, #8
 8000e62:	9300      	str	r3, [sp, #0]
 8000e64:	2303      	movs	r3, #3
 8000e66:	2040      	movs	r0, #64	; 0x40
 8000e68:	f7ff ff5c 	bl	8000d24 <TemHumSensor_readRegister>

    RH = (pRH[0] << 8) + pRH[1]; // RH_CODE (MSB << 8) + LSB
 8000e6c:	7a3b      	ldrb	r3, [r7, #8]
 8000e6e:	021b      	lsls	r3, r3, #8
 8000e70:	7a7a      	ldrb	r2, [r7, #9]
 8000e72:	4413      	add	r3, r2
 8000e74:	60fb      	str	r3, [r7, #12]
    RH = ((RH * 12500) >> 16) - 600;
 8000e76:	68fb      	ldr	r3, [r7, #12]
 8000e78:	f243 02d4 	movw	r2, #12500	; 0x30d4
 8000e7c:	fb02 f303 	mul.w	r3, r2, r3
 8000e80:	0c1b      	lsrs	r3, r3, #16
 8000e82:	f5a3 7316 	sub.w	r3, r3, #600	; 0x258
 8000e86:	60fb      	str	r3, [r7, #12]
    RH = RH/100;
 8000e88:	68fb      	ldr	r3, [r7, #12]
 8000e8a:	4a06      	ldr	r2, [pc, #24]	; (8000ea4 <GetHumi_Sensor+0x60>)
 8000e8c:	fba2 2303 	umull	r2, r3, r2, r3
 8000e90:	095b      	lsrs	r3, r3, #5
 8000e92:	60fb      	str	r3, [r7, #12]

    return RH;
 8000e94:	68fb      	ldr	r3, [r7, #12]
}
 8000e96:	4618      	mov	r0, r3
 8000e98:	3710      	adds	r7, #16
 8000e9a:	46bd      	mov	sp, r7
 8000e9c:	bd80      	pop	{r7, pc}
 8000e9e:	bf00      	nop
 8000ea0:	08004ce0 	.word	0x08004ce0
 8000ea4:	51eb851f 	.word	0x51eb851f

08000ea8 <processGetValueSensor>:
 * @func 	processGetValueSensor
 * @brief	Get value sensor
 * @param	None
 * @retval	None
 */
void processGetValueSensor(void) {
 8000ea8:	b580      	push	{r7, lr}
 8000eaa:	b082      	sub	sp, #8
 8000eac:	af02      	add	r7, sp, #8
	// Get timer
	time_current = GetMilSecTick();
 8000eae:	f000 fd9b 	bl	80019e8 <GetMilSecTick>
 8000eb2:	4603      	mov	r3, r0
 8000eb4:	4a58      	ldr	r2, [pc, #352]	; (8001018 <processGetValueSensor+0x170>)
 8000eb6:	6013      	str	r3, [r2, #0]

	if (time_current >= time_initial) {
 8000eb8:	4b57      	ldr	r3, [pc, #348]	; (8001018 <processGetValueSensor+0x170>)
 8000eba:	681a      	ldr	r2, [r3, #0]
 8000ebc:	4b57      	ldr	r3, [pc, #348]	; (800101c <processGetValueSensor+0x174>)
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	429a      	cmp	r2, r3
 8000ec2:	d30a      	bcc.n	8000eda <processGetValueSensor+0x32>
		time_total += time_current - time_initial;
 8000ec4:	4b54      	ldr	r3, [pc, #336]	; (8001018 <processGetValueSensor+0x170>)
 8000ec6:	681a      	ldr	r2, [r3, #0]
 8000ec8:	4b54      	ldr	r3, [pc, #336]	; (800101c <processGetValueSensor+0x174>)
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	1ad2      	subs	r2, r2, r3
 8000ece:	4b54      	ldr	r3, [pc, #336]	; (8001020 <processGetValueSensor+0x178>)
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	4413      	add	r3, r2
 8000ed4:	4a52      	ldr	r2, [pc, #328]	; (8001020 <processGetValueSensor+0x178>)
 8000ed6:	6013      	str	r3, [r2, #0]
 8000ed8:	e00a      	b.n	8000ef0 <processGetValueSensor+0x48>
	} else {
		time_total += 0xFFFFFFFFU - time_current + time_initial;
 8000eda:	4b50      	ldr	r3, [pc, #320]	; (800101c <processGetValueSensor+0x174>)
 8000edc:	681a      	ldr	r2, [r3, #0]
 8000ede:	4b4e      	ldr	r3, [pc, #312]	; (8001018 <processGetValueSensor+0x170>)
 8000ee0:	681b      	ldr	r3, [r3, #0]
 8000ee2:	1ad2      	subs	r2, r2, r3
 8000ee4:	4b4e      	ldr	r3, [pc, #312]	; (8001020 <processGetValueSensor+0x178>)
 8000ee6:	681b      	ldr	r3, [r3, #0]
 8000ee8:	4413      	add	r3, r2
 8000eea:	3b01      	subs	r3, #1
 8000eec:	4a4c      	ldr	r2, [pc, #304]	; (8001020 <processGetValueSensor+0x178>)
 8000eee:	6013      	str	r3, [r2, #0]
	}
	if (time_total == CYCLE_SEND_DATA_1) {
 8000ef0:	4b4b      	ldr	r3, [pc, #300]	; (8001020 <processGetValueSensor+0x178>)
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000ef8:	d10b      	bne.n	8000f12 <processGetValueSensor+0x6a>
		//Dùng để đọc giá trị nhiệt độ trả về từ cảm biến thông qua giao tiếp I2C.
		temperature = (uint8_t) (GetTemp_Sensor());
 8000efa:	f7ff ff71 	bl	8000de0 <GetTemp_Sensor>
 8000efe:	4603      	mov	r3, r0
 8000f00:	b2da      	uxtb	r2, r3
 8000f02:	4b48      	ldr	r3, [pc, #288]	; (8001024 <processGetValueSensor+0x17c>)
 8000f04:	701a      	strb	r2, [r3, #0]

		//Dùng để đọc giá trị độ ẩm trả về từ cảm biến thông qua giao tiếp I2C.
		humidity = (uint8_t) (GetHumi_Sensor());
 8000f06:	f7ff ff9d 	bl	8000e44 <GetHumi_Sensor>
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	b2da      	uxtb	r2, r3
 8000f0e:	4b46      	ldr	r3, [pc, #280]	; (8001028 <processGetValueSensor+0x180>)
 8000f10:	701a      	strb	r2, [r3, #0]

	}
	if(time_total >= CYCLE_SEND_DATA_2)
 8000f12:	4b43      	ldr	r3, [pc, #268]	; (8001020 <processGetValueSensor+0x178>)
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000f1a:	d376      	bcc.n	800100a <processGetValueSensor+0x162>
	{
		temperature1 = (uint8_t) (GetTemp_Sensor());
 8000f1c:	f7ff ff60 	bl	8000de0 <GetTemp_Sensor>
 8000f20:	4603      	mov	r3, r0
 8000f22:	b2da      	uxtb	r2, r3
 8000f24:	4b41      	ldr	r3, [pc, #260]	; (800102c <processGetValueSensor+0x184>)
 8000f26:	701a      	strb	r2, [r3, #0]

		humidity1 = (uint8_t) (GetHumi_Sensor());
 8000f28:	f7ff ff8c 	bl	8000e44 <GetHumi_Sensor>
 8000f2c:	4603      	mov	r3, r0
 8000f2e:	b2da      	uxtb	r2, r3
 8000f30:	4b3f      	ldr	r3, [pc, #252]	; (8001030 <processGetValueSensor+0x188>)
 8000f32:	701a      	strb	r2, [r3, #0]

		// nếu thời gian chênh lệch giữa lần đo 1 và lần đo 2 là 2 thì sẽ cập nhật giá trị sensor
		if( ((temperature1 > temperature ) && (temperature1 - temperature >= 2))
 8000f34:	4b3d      	ldr	r3, [pc, #244]	; (800102c <processGetValueSensor+0x184>)
 8000f36:	781a      	ldrb	r2, [r3, #0]
 8000f38:	4b3a      	ldr	r3, [pc, #232]	; (8001024 <processGetValueSensor+0x17c>)
 8000f3a:	781b      	ldrb	r3, [r3, #0]
 8000f3c:	429a      	cmp	r2, r3
 8000f3e:	d907      	bls.n	8000f50 <processGetValueSensor+0xa8>
 8000f40:	4b3a      	ldr	r3, [pc, #232]	; (800102c <processGetValueSensor+0x184>)
 8000f42:	781b      	ldrb	r3, [r3, #0]
 8000f44:	461a      	mov	r2, r3
 8000f46:	4b37      	ldr	r3, [pc, #220]	; (8001024 <processGetValueSensor+0x17c>)
 8000f48:	781b      	ldrb	r3, [r3, #0]
 8000f4a:	1ad3      	subs	r3, r2, r3
 8000f4c:	2b01      	cmp	r3, #1
 8000f4e:	dc29      	bgt.n	8000fa4 <processGetValueSensor+0xfc>
		 || ((temperature1 < temperature ) && (temperature1 - temperature <= 2))
 8000f50:	4b36      	ldr	r3, [pc, #216]	; (800102c <processGetValueSensor+0x184>)
 8000f52:	781a      	ldrb	r2, [r3, #0]
 8000f54:	4b33      	ldr	r3, [pc, #204]	; (8001024 <processGetValueSensor+0x17c>)
 8000f56:	781b      	ldrb	r3, [r3, #0]
 8000f58:	429a      	cmp	r2, r3
 8000f5a:	d207      	bcs.n	8000f6c <processGetValueSensor+0xc4>
 8000f5c:	4b33      	ldr	r3, [pc, #204]	; (800102c <processGetValueSensor+0x184>)
 8000f5e:	781b      	ldrb	r3, [r3, #0]
 8000f60:	461a      	mov	r2, r3
 8000f62:	4b30      	ldr	r3, [pc, #192]	; (8001024 <processGetValueSensor+0x17c>)
 8000f64:	781b      	ldrb	r3, [r3, #0]
 8000f66:	1ad3      	subs	r3, r2, r3
 8000f68:	2b02      	cmp	r3, #2
 8000f6a:	dd1b      	ble.n	8000fa4 <processGetValueSensor+0xfc>
		 || ((humidity1 > humidity ) && (humidity1 - humidity >= 2))
 8000f6c:	4b30      	ldr	r3, [pc, #192]	; (8001030 <processGetValueSensor+0x188>)
 8000f6e:	781a      	ldrb	r2, [r3, #0]
 8000f70:	4b2d      	ldr	r3, [pc, #180]	; (8001028 <processGetValueSensor+0x180>)
 8000f72:	781b      	ldrb	r3, [r3, #0]
 8000f74:	429a      	cmp	r2, r3
 8000f76:	d907      	bls.n	8000f88 <processGetValueSensor+0xe0>
 8000f78:	4b2d      	ldr	r3, [pc, #180]	; (8001030 <processGetValueSensor+0x188>)
 8000f7a:	781b      	ldrb	r3, [r3, #0]
 8000f7c:	461a      	mov	r2, r3
 8000f7e:	4b2a      	ldr	r3, [pc, #168]	; (8001028 <processGetValueSensor+0x180>)
 8000f80:	781b      	ldrb	r3, [r3, #0]
 8000f82:	1ad3      	subs	r3, r2, r3
 8000f84:	2b01      	cmp	r3, #1
 8000f86:	dc0d      	bgt.n	8000fa4 <processGetValueSensor+0xfc>
		 || ((humidity1 < humidity ) && (humidity1 - humidity <= 2)))
 8000f88:	4b29      	ldr	r3, [pc, #164]	; (8001030 <processGetValueSensor+0x188>)
 8000f8a:	781a      	ldrb	r2, [r3, #0]
 8000f8c:	4b26      	ldr	r3, [pc, #152]	; (8001028 <processGetValueSensor+0x180>)
 8000f8e:	781b      	ldrb	r3, [r3, #0]
 8000f90:	429a      	cmp	r2, r3
 8000f92:	d237      	bcs.n	8001004 <processGetValueSensor+0x15c>
 8000f94:	4b26      	ldr	r3, [pc, #152]	; (8001030 <processGetValueSensor+0x188>)
 8000f96:	781b      	ldrb	r3, [r3, #0]
 8000f98:	461a      	mov	r2, r3
 8000f9a:	4b23      	ldr	r3, [pc, #140]	; (8001028 <processGetValueSensor+0x180>)
 8000f9c:	781b      	ldrb	r3, [r3, #0]
 8000f9e:	1ad3      	subs	r3, r2, r3
 8000fa0:	2b02      	cmp	r3, #2
 8000fa2:	dc2f      	bgt.n	8001004 <processGetValueSensor+0x15c>
		{
			ucg_DrawString(&ucg, 0, 32, 0, "Assignment 2");
 8000fa4:	4b23      	ldr	r3, [pc, #140]	; (8001034 <processGetValueSensor+0x18c>)
 8000fa6:	9300      	str	r3, [sp, #0]
 8000fa8:	2300      	movs	r3, #0
 8000faa:	2220      	movs	r2, #32
 8000fac:	2100      	movs	r1, #0
 8000fae:	4822      	ldr	r0, [pc, #136]	; (8001038 <processGetValueSensor+0x190>)
 8000fb0:	f002 f890 	bl	80030d4 <ucg_DrawString>
			memset(src1, 0, sizeof(src1));
 8000fb4:	2214      	movs	r2, #20
 8000fb6:	2100      	movs	r1, #0
 8000fb8:	4820      	ldr	r0, [pc, #128]	; (800103c <processGetValueSensor+0x194>)
 8000fba:	f003 fa01 	bl	80043c0 <memset>
			sprintf(src1, " Temp = %d oC  ", temperature1);
 8000fbe:	4b1b      	ldr	r3, [pc, #108]	; (800102c <processGetValueSensor+0x184>)
 8000fc0:	781b      	ldrb	r3, [r3, #0]
 8000fc2:	461a      	mov	r2, r3
 8000fc4:	491e      	ldr	r1, [pc, #120]	; (8001040 <processGetValueSensor+0x198>)
 8000fc6:	481d      	ldr	r0, [pc, #116]	; (800103c <processGetValueSensor+0x194>)
 8000fc8:	f003 f9da 	bl	8004380 <siprintf>
			ucg_DrawString(&ucg, 0, 52, 0, src1);
 8000fcc:	4b1b      	ldr	r3, [pc, #108]	; (800103c <processGetValueSensor+0x194>)
 8000fce:	9300      	str	r3, [sp, #0]
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	2234      	movs	r2, #52	; 0x34
 8000fd4:	2100      	movs	r1, #0
 8000fd6:	4818      	ldr	r0, [pc, #96]	; (8001038 <processGetValueSensor+0x190>)
 8000fd8:	f002 f87c 	bl	80030d4 <ucg_DrawString>

			memset(src2, 0, sizeof(src2));
 8000fdc:	2214      	movs	r2, #20
 8000fde:	2100      	movs	r1, #0
 8000fe0:	4818      	ldr	r0, [pc, #96]	; (8001044 <processGetValueSensor+0x19c>)
 8000fe2:	f003 f9ed 	bl	80043c0 <memset>
			sprintf(src2, " Humi = %3d %%   ", humidity1);
 8000fe6:	4b12      	ldr	r3, [pc, #72]	; (8001030 <processGetValueSensor+0x188>)
 8000fe8:	781b      	ldrb	r3, [r3, #0]
 8000fea:	461a      	mov	r2, r3
 8000fec:	4916      	ldr	r1, [pc, #88]	; (8001048 <processGetValueSensor+0x1a0>)
 8000fee:	4815      	ldr	r0, [pc, #84]	; (8001044 <processGetValueSensor+0x19c>)
 8000ff0:	f003 f9c6 	bl	8004380 <siprintf>
			ucg_DrawString(&ucg, 0, 72, 0, src2);
 8000ff4:	4b13      	ldr	r3, [pc, #76]	; (8001044 <processGetValueSensor+0x19c>)
 8000ff6:	9300      	str	r3, [sp, #0]
 8000ff8:	2300      	movs	r3, #0
 8000ffa:	2248      	movs	r2, #72	; 0x48
 8000ffc:	2100      	movs	r1, #0
 8000ffe:	480e      	ldr	r0, [pc, #56]	; (8001038 <processGetValueSensor+0x190>)
 8001000:	f002 f868 	bl	80030d4 <ucg_DrawString>
		}

		time_total = 0;
 8001004:	4b06      	ldr	r3, [pc, #24]	; (8001020 <processGetValueSensor+0x178>)
 8001006:	2200      	movs	r2, #0
 8001008:	601a      	str	r2, [r3, #0]
		// Reset lại biến thời gian sau quá trình đọc giá trị nhiệt độ - độ ẩm.

	}
	time_initial = time_current;
 800100a:	4b03      	ldr	r3, [pc, #12]	; (8001018 <processGetValueSensor+0x170>)
 800100c:	681b      	ldr	r3, [r3, #0]
 800100e:	4a03      	ldr	r2, [pc, #12]	; (800101c <processGetValueSensor+0x174>)
 8001010:	6013      	str	r3, [r2, #0]
}
 8001012:	bf00      	nop
 8001014:	46bd      	mov	sp, r7
 8001016:	bd80      	pop	{r7, pc}
 8001018:	2000014c 	.word	0x2000014c
 800101c:	20000148 	.word	0x20000148
 8001020:	200001a4 	.word	0x200001a4
 8001024:	200001a8 	.word	0x200001a8
 8001028:	200001a9 	.word	0x200001a9
 800102c:	200001aa 	.word	0x200001aa
 8001030:	200001ab 	.word	0x200001ab
 8001034:	08004ce4 	.word	0x08004ce4
 8001038:	20000094 	.word	0x20000094
 800103c:	20000154 	.word	0x20000154
 8001040:	08004cf4 	.word	0x08004cf4
 8001044:	20000168 	.word	0x20000168
 8001048:	08004d04 	.word	0x08004d04

0800104c <Scan_SensorLCD>:
* @brief	Scan display value sensor
* @param	None
* @retval	None
*/
void Scan_SensorLCD(void)
{
 800104c:	b580      	push	{r7, lr}
 800104e:	b082      	sub	sp, #8
 8001050:	af02      	add	r7, sp, #8
	ucg_DrawString(&ucg, 0, 32, 0, "Nhom 2");
 8001052:	4b19      	ldr	r3, [pc, #100]	; (80010b8 <Scan_SensorLCD+0x6c>)
 8001054:	9300      	str	r3, [sp, #0]
 8001056:	2300      	movs	r3, #0
 8001058:	2220      	movs	r2, #32
 800105a:	2100      	movs	r1, #0
 800105c:	4817      	ldr	r0, [pc, #92]	; (80010bc <Scan_SensorLCD+0x70>)
 800105e:	f002 f839 	bl	80030d4 <ucg_DrawString>
	memset(src3, 0, sizeof(src3));
 8001062:	2214      	movs	r2, #20
 8001064:	2100      	movs	r1, #0
 8001066:	4816      	ldr	r0, [pc, #88]	; (80010c0 <Scan_SensorLCD+0x74>)
 8001068:	f003 f9aa 	bl	80043c0 <memset>
	sprintf(src3, " Nhiet do = %d oC  ", temperature);
 800106c:	4b15      	ldr	r3, [pc, #84]	; (80010c4 <Scan_SensorLCD+0x78>)
 800106e:	781b      	ldrb	r3, [r3, #0]
 8001070:	461a      	mov	r2, r3
 8001072:	4915      	ldr	r1, [pc, #84]	; (80010c8 <Scan_SensorLCD+0x7c>)
 8001074:	4812      	ldr	r0, [pc, #72]	; (80010c0 <Scan_SensorLCD+0x74>)
 8001076:	f003 f983 	bl	8004380 <siprintf>
	ucg_DrawString(&ucg, 0, 52, 0, src3);
 800107a:	4b11      	ldr	r3, [pc, #68]	; (80010c0 <Scan_SensorLCD+0x74>)
 800107c:	9300      	str	r3, [sp, #0]
 800107e:	2300      	movs	r3, #0
 8001080:	2234      	movs	r2, #52	; 0x34
 8001082:	2100      	movs	r1, #0
 8001084:	480d      	ldr	r0, [pc, #52]	; (80010bc <Scan_SensorLCD+0x70>)
 8001086:	f002 f825 	bl	80030d4 <ucg_DrawString>

	memset(src4, 0, sizeof(src4));
 800108a:	2214      	movs	r2, #20
 800108c:	2100      	movs	r1, #0
 800108e:	480f      	ldr	r0, [pc, #60]	; (80010cc <Scan_SensorLCD+0x80>)
 8001090:	f003 f996 	bl	80043c0 <memset>
	sprintf(src4, " Do am = %3d %%   ", humidity);
 8001094:	4b0e      	ldr	r3, [pc, #56]	; (80010d0 <Scan_SensorLCD+0x84>)
 8001096:	781b      	ldrb	r3, [r3, #0]
 8001098:	461a      	mov	r2, r3
 800109a:	490e      	ldr	r1, [pc, #56]	; (80010d4 <Scan_SensorLCD+0x88>)
 800109c:	480b      	ldr	r0, [pc, #44]	; (80010cc <Scan_SensorLCD+0x80>)
 800109e:	f003 f96f 	bl	8004380 <siprintf>
	ucg_DrawString(&ucg, 0, 72, 0, src4);
 80010a2:	4b0a      	ldr	r3, [pc, #40]	; (80010cc <Scan_SensorLCD+0x80>)
 80010a4:	9300      	str	r3, [sp, #0]
 80010a6:	2300      	movs	r3, #0
 80010a8:	2248      	movs	r2, #72	; 0x48
 80010aa:	2100      	movs	r1, #0
 80010ac:	4803      	ldr	r0, [pc, #12]	; (80010bc <Scan_SensorLCD+0x70>)
 80010ae:	f002 f811 	bl	80030d4 <ucg_DrawString>
}
 80010b2:	bf00      	nop
 80010b4:	46bd      	mov	sp, r7
 80010b6:	bd80      	pop	{r7, pc}
 80010b8:	08004d18 	.word	0x08004d18
 80010bc:	20000094 	.word	0x20000094
 80010c0:	2000017c 	.word	0x2000017c
 80010c4:	200001a8 	.word	0x200001a8
 80010c8:	08004d20 	.word	0x08004d20
 80010cc:	20000190 	.word	0x20000190
 80010d0:	200001a9 	.word	0x200001a9
 80010d4:	08004d34 	.word	0x08004d34

080010d8 <Scan_TimeSensor>:
* @brief	Scan period 1s
* @param	None
* @retval	None
*/
void Scan_TimeSensor(uint32_t byRepeats)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b084      	sub	sp, #16
 80010dc:	af02      	add	r7, sp, #8
 80010de:	6078      	str	r0, [r7, #4]
	if (idTimer != NO_TIMER) {
 80010e0:	4b0c      	ldr	r3, [pc, #48]	; (8001114 <Scan_TimeSensor+0x3c>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	2bff      	cmp	r3, #255	; 0xff
 80010e6:	d005      	beq.n	80010f4 <Scan_TimeSensor+0x1c>
	TimerStop(idTimer);
 80010e8:	4b0a      	ldr	r3, [pc, #40]	; (8001114 <Scan_TimeSensor+0x3c>)
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	b2db      	uxtb	r3, r3
 80010ee:	4618      	mov	r0, r3
 80010f0:	f000 fc2a 	bl	8001948 <TimerStop>
	}
	idTimer = TimerStart("Scan_sensor", byRepeats, TIMER_REPEAT_FOREVER, (void*) Scan_SensorLCD, NULL);
 80010f4:	2300      	movs	r3, #0
 80010f6:	9300      	str	r3, [sp, #0]
 80010f8:	4b07      	ldr	r3, [pc, #28]	; (8001118 <Scan_TimeSensor+0x40>)
 80010fa:	22ff      	movs	r2, #255	; 0xff
 80010fc:	6879      	ldr	r1, [r7, #4]
 80010fe:	4807      	ldr	r0, [pc, #28]	; (800111c <Scan_TimeSensor+0x44>)
 8001100:	f000 fbc0 	bl	8001884 <TimerStart>
 8001104:	4603      	mov	r3, r0
 8001106:	461a      	mov	r2, r3
 8001108:	4b02      	ldr	r3, [pc, #8]	; (8001114 <Scan_TimeSensor+0x3c>)
 800110a:	601a      	str	r2, [r3, #0]
}
 800110c:	bf00      	nop
 800110e:	3708      	adds	r7, #8
 8001110:	46bd      	mov	sp, r7
 8001112:	bd80      	pop	{r7, pc}
 8001114:	20000150 	.word	0x20000150
 8001118:	0800104d 	.word	0x0800104d
 800111c:	08004d48 	.word	0x08004d48

08001120 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001120:	b580      	push	{r7, lr}
 8001122:	b086      	sub	sp, #24
 8001124:	af00      	add	r7, sp, #0
 8001126:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001128:	4a14      	ldr	r2, [pc, #80]	; (800117c <_sbrk+0x5c>)
 800112a:	4b15      	ldr	r3, [pc, #84]	; (8001180 <_sbrk+0x60>)
 800112c:	1ad3      	subs	r3, r2, r3
 800112e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001130:	697b      	ldr	r3, [r7, #20]
 8001132:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001134:	4b13      	ldr	r3, [pc, #76]	; (8001184 <_sbrk+0x64>)
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	2b00      	cmp	r3, #0
 800113a:	d102      	bne.n	8001142 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800113c:	4b11      	ldr	r3, [pc, #68]	; (8001184 <_sbrk+0x64>)
 800113e:	4a12      	ldr	r2, [pc, #72]	; (8001188 <_sbrk+0x68>)
 8001140:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001142:	4b10      	ldr	r3, [pc, #64]	; (8001184 <_sbrk+0x64>)
 8001144:	681a      	ldr	r2, [r3, #0]
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	4413      	add	r3, r2
 800114a:	693a      	ldr	r2, [r7, #16]
 800114c:	429a      	cmp	r2, r3
 800114e:	d207      	bcs.n	8001160 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001150:	f003 f93e 	bl	80043d0 <__errno>
 8001154:	4603      	mov	r3, r0
 8001156:	220c      	movs	r2, #12
 8001158:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800115a:	f04f 33ff 	mov.w	r3, #4294967295
 800115e:	e009      	b.n	8001174 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001160:	4b08      	ldr	r3, [pc, #32]	; (8001184 <_sbrk+0x64>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001166:	4b07      	ldr	r3, [pc, #28]	; (8001184 <_sbrk+0x64>)
 8001168:	681a      	ldr	r2, [r3, #0]
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	4413      	add	r3, r2
 800116e:	4a05      	ldr	r2, [pc, #20]	; (8001184 <_sbrk+0x64>)
 8001170:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001172:	68fb      	ldr	r3, [r7, #12]
}
 8001174:	4618      	mov	r0, r3
 8001176:	3718      	adds	r7, #24
 8001178:	46bd      	mov	sp, r7
 800117a:	bd80      	pop	{r7, pc}
 800117c:	20018000 	.word	0x20018000
 8001180:	00000400 	.word	0x00000400
 8001184:	200001ac 	.word	0x200001ac
 8001188:	200014a8 	.word	0x200014a8

0800118c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800118c:	480d      	ldr	r0, [pc, #52]	; (80011c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800118e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001190:	f000 f826 	bl	80011e0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001194:	480c      	ldr	r0, [pc, #48]	; (80011c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8001196:	490d      	ldr	r1, [pc, #52]	; (80011cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8001198:	4a0d      	ldr	r2, [pc, #52]	; (80011d0 <LoopForever+0xe>)
  movs r3, #0
 800119a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800119c:	e002      	b.n	80011a4 <LoopCopyDataInit>

0800119e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800119e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80011a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80011a2:	3304      	adds	r3, #4

080011a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80011a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80011a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80011a8:	d3f9      	bcc.n	800119e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80011aa:	4a0a      	ldr	r2, [pc, #40]	; (80011d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80011ac:	4c0a      	ldr	r4, [pc, #40]	; (80011d8 <LoopForever+0x16>)
  movs r3, #0
 80011ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80011b0:	e001      	b.n	80011b6 <LoopFillZerobss>

080011b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80011b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80011b4:	3204      	adds	r2, #4

080011b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80011b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80011b8:	d3fb      	bcc.n	80011b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80011ba:	f003 f90f 	bl	80043dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80011be:	f7ff fb95 	bl	80008ec <main>

080011c2 <LoopForever>:

LoopForever:
  b LoopForever
 80011c2:	e7fe      	b.n	80011c2 <LoopForever>
  ldr   r0, =_estack
 80011c4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80011c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80011cc:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 80011d0:	0800563c 	.word	0x0800563c
  ldr r2, =_sbss
 80011d4:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 80011d8:	200014a4 	.word	0x200014a4

080011dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80011dc:	e7fe      	b.n	80011dc <ADC_IRQHandler>
	...

080011e0 <SystemInit>:
 80011e0:	b580      	push	{r7, lr}
 80011e2:	af00      	add	r7, sp, #0
 80011e4:	4b16      	ldr	r3, [pc, #88]	; (8001240 <SystemInit+0x60>)
 80011e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80011ea:	4a15      	ldr	r2, [pc, #84]	; (8001240 <SystemInit+0x60>)
 80011ec:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80011f0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80011f4:	4b13      	ldr	r3, [pc, #76]	; (8001244 <SystemInit+0x64>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	4a12      	ldr	r2, [pc, #72]	; (8001244 <SystemInit+0x64>)
 80011fa:	f043 0301 	orr.w	r3, r3, #1
 80011fe:	6013      	str	r3, [r2, #0]
 8001200:	4b10      	ldr	r3, [pc, #64]	; (8001244 <SystemInit+0x64>)
 8001202:	2200      	movs	r2, #0
 8001204:	609a      	str	r2, [r3, #8]
 8001206:	4b0f      	ldr	r3, [pc, #60]	; (8001244 <SystemInit+0x64>)
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	4a0e      	ldr	r2, [pc, #56]	; (8001244 <SystemInit+0x64>)
 800120c:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001210:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001214:	6013      	str	r3, [r2, #0]
 8001216:	4b0b      	ldr	r3, [pc, #44]	; (8001244 <SystemInit+0x64>)
 8001218:	4a0b      	ldr	r2, [pc, #44]	; (8001248 <SystemInit+0x68>)
 800121a:	605a      	str	r2, [r3, #4]
 800121c:	4b09      	ldr	r3, [pc, #36]	; (8001244 <SystemInit+0x64>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	4a08      	ldr	r2, [pc, #32]	; (8001244 <SystemInit+0x64>)
 8001222:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001226:	6013      	str	r3, [r2, #0]
 8001228:	4b06      	ldr	r3, [pc, #24]	; (8001244 <SystemInit+0x64>)
 800122a:	2200      	movs	r2, #0
 800122c:	60da      	str	r2, [r3, #12]
 800122e:	f000 f889 	bl	8001344 <SetSysClock>
 8001232:	4b03      	ldr	r3, [pc, #12]	; (8001240 <SystemInit+0x60>)
 8001234:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001238:	609a      	str	r2, [r3, #8]
 800123a:	bf00      	nop
 800123c:	bd80      	pop	{r7, pc}
 800123e:	bf00      	nop
 8001240:	e000ed00 	.word	0xe000ed00
 8001244:	40023800 	.word	0x40023800
 8001248:	24003010 	.word	0x24003010

0800124c <SystemCoreClockUpdate>:
 800124c:	b480      	push	{r7}
 800124e:	b087      	sub	sp, #28
 8001250:	af00      	add	r7, sp, #0
 8001252:	2300      	movs	r3, #0
 8001254:	613b      	str	r3, [r7, #16]
 8001256:	2300      	movs	r3, #0
 8001258:	617b      	str	r3, [r7, #20]
 800125a:	2302      	movs	r3, #2
 800125c:	60fb      	str	r3, [r7, #12]
 800125e:	2300      	movs	r3, #0
 8001260:	60bb      	str	r3, [r7, #8]
 8001262:	2302      	movs	r3, #2
 8001264:	607b      	str	r3, [r7, #4]
 8001266:	4b32      	ldr	r3, [pc, #200]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 8001268:	689b      	ldr	r3, [r3, #8]
 800126a:	f003 030c 	and.w	r3, r3, #12
 800126e:	613b      	str	r3, [r7, #16]
 8001270:	693b      	ldr	r3, [r7, #16]
 8001272:	2b04      	cmp	r3, #4
 8001274:	d007      	beq.n	8001286 <SystemCoreClockUpdate+0x3a>
 8001276:	2b08      	cmp	r3, #8
 8001278:	d009      	beq.n	800128e <SystemCoreClockUpdate+0x42>
 800127a:	2b00      	cmp	r3, #0
 800127c:	d13d      	bne.n	80012fa <SystemCoreClockUpdate+0xae>
 800127e:	4b2d      	ldr	r3, [pc, #180]	; (8001334 <SystemCoreClockUpdate+0xe8>)
 8001280:	4a2d      	ldr	r2, [pc, #180]	; (8001338 <SystemCoreClockUpdate+0xec>)
 8001282:	601a      	str	r2, [r3, #0]
 8001284:	e03d      	b.n	8001302 <SystemCoreClockUpdate+0xb6>
 8001286:	4b2b      	ldr	r3, [pc, #172]	; (8001334 <SystemCoreClockUpdate+0xe8>)
 8001288:	4a2c      	ldr	r2, [pc, #176]	; (800133c <SystemCoreClockUpdate+0xf0>)
 800128a:	601a      	str	r2, [r3, #0]
 800128c:	e039      	b.n	8001302 <SystemCoreClockUpdate+0xb6>
 800128e:	4b28      	ldr	r3, [pc, #160]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 8001290:	685b      	ldr	r3, [r3, #4]
 8001292:	0d9b      	lsrs	r3, r3, #22
 8001294:	f003 0301 	and.w	r3, r3, #1
 8001298:	60bb      	str	r3, [r7, #8]
 800129a:	4b25      	ldr	r3, [pc, #148]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 800129c:	685b      	ldr	r3, [r3, #4]
 800129e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80012a2:	607b      	str	r3, [r7, #4]
 80012a4:	68bb      	ldr	r3, [r7, #8]
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	d00c      	beq.n	80012c4 <SystemCoreClockUpdate+0x78>
 80012aa:	4a24      	ldr	r2, [pc, #144]	; (800133c <SystemCoreClockUpdate+0xf0>)
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80012b2:	4a1f      	ldr	r2, [pc, #124]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 80012b4:	6852      	ldr	r2, [r2, #4]
 80012b6:	0992      	lsrs	r2, r2, #6
 80012b8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80012bc:	fb02 f303 	mul.w	r3, r2, r3
 80012c0:	617b      	str	r3, [r7, #20]
 80012c2:	e00b      	b.n	80012dc <SystemCoreClockUpdate+0x90>
 80012c4:	4a1c      	ldr	r2, [pc, #112]	; (8001338 <SystemCoreClockUpdate+0xec>)
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80012cc:	4a18      	ldr	r2, [pc, #96]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 80012ce:	6852      	ldr	r2, [r2, #4]
 80012d0:	0992      	lsrs	r2, r2, #6
 80012d2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80012d6:	fb02 f303 	mul.w	r3, r2, r3
 80012da:	617b      	str	r3, [r7, #20]
 80012dc:	4b14      	ldr	r3, [pc, #80]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 80012de:	685b      	ldr	r3, [r3, #4]
 80012e0:	0c1b      	lsrs	r3, r3, #16
 80012e2:	f003 0303 	and.w	r3, r3, #3
 80012e6:	3301      	adds	r3, #1
 80012e8:	005b      	lsls	r3, r3, #1
 80012ea:	60fb      	str	r3, [r7, #12]
 80012ec:	697a      	ldr	r2, [r7, #20]
 80012ee:	68fb      	ldr	r3, [r7, #12]
 80012f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80012f4:	4a0f      	ldr	r2, [pc, #60]	; (8001334 <SystemCoreClockUpdate+0xe8>)
 80012f6:	6013      	str	r3, [r2, #0]
 80012f8:	e003      	b.n	8001302 <SystemCoreClockUpdate+0xb6>
 80012fa:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <SystemCoreClockUpdate+0xe8>)
 80012fc:	4a0e      	ldr	r2, [pc, #56]	; (8001338 <SystemCoreClockUpdate+0xec>)
 80012fe:	601a      	str	r2, [r3, #0]
 8001300:	bf00      	nop
 8001302:	4b0b      	ldr	r3, [pc, #44]	; (8001330 <SystemCoreClockUpdate+0xe4>)
 8001304:	689b      	ldr	r3, [r3, #8]
 8001306:	091b      	lsrs	r3, r3, #4
 8001308:	f003 030f 	and.w	r3, r3, #15
 800130c:	4a0c      	ldr	r2, [pc, #48]	; (8001340 <SystemCoreClockUpdate+0xf4>)
 800130e:	5cd3      	ldrb	r3, [r2, r3]
 8001310:	b2db      	uxtb	r3, r3
 8001312:	613b      	str	r3, [r7, #16]
 8001314:	4b07      	ldr	r3, [pc, #28]	; (8001334 <SystemCoreClockUpdate+0xe8>)
 8001316:	681a      	ldr	r2, [r3, #0]
 8001318:	693b      	ldr	r3, [r7, #16]
 800131a:	fa22 f303 	lsr.w	r3, r2, r3
 800131e:	4a05      	ldr	r2, [pc, #20]	; (8001334 <SystemCoreClockUpdate+0xe8>)
 8001320:	6013      	str	r3, [r2, #0]
 8001322:	bf00      	nop
 8001324:	371c      	adds	r7, #28
 8001326:	46bd      	mov	sp, r7
 8001328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800132c:	4770      	bx	lr
 800132e:	bf00      	nop
 8001330:	40023800 	.word	0x40023800
 8001334:	20000010 	.word	0x20000010
 8001338:	00f42400 	.word	0x00f42400
 800133c:	017d7840 	.word	0x017d7840
 8001340:	20000014 	.word	0x20000014

08001344 <SetSysClock>:
 8001344:	b480      	push	{r7}
 8001346:	af00      	add	r7, sp, #0
 8001348:	4b22      	ldr	r3, [pc, #136]	; (80013d4 <SetSysClock+0x90>)
 800134a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800134c:	4a21      	ldr	r2, [pc, #132]	; (80013d4 <SetSysClock+0x90>)
 800134e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001352:	6413      	str	r3, [r2, #64]	; 0x40
 8001354:	4b20      	ldr	r3, [pc, #128]	; (80013d8 <SetSysClock+0x94>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	4a1f      	ldr	r2, [pc, #124]	; (80013d8 <SetSysClock+0x94>)
 800135a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800135e:	6013      	str	r3, [r2, #0]
 8001360:	4b1c      	ldr	r3, [pc, #112]	; (80013d4 <SetSysClock+0x90>)
 8001362:	4a1c      	ldr	r2, [pc, #112]	; (80013d4 <SetSysClock+0x90>)
 8001364:	689b      	ldr	r3, [r3, #8]
 8001366:	6093      	str	r3, [r2, #8]
 8001368:	4b1a      	ldr	r3, [pc, #104]	; (80013d4 <SetSysClock+0x90>)
 800136a:	4a1a      	ldr	r2, [pc, #104]	; (80013d4 <SetSysClock+0x90>)
 800136c:	689b      	ldr	r3, [r3, #8]
 800136e:	6093      	str	r3, [r2, #8]
 8001370:	4b18      	ldr	r3, [pc, #96]	; (80013d4 <SetSysClock+0x90>)
 8001372:	689b      	ldr	r3, [r3, #8]
 8001374:	4a17      	ldr	r2, [pc, #92]	; (80013d4 <SetSysClock+0x90>)
 8001376:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800137a:	6093      	str	r3, [r2, #8]
 800137c:	4b15      	ldr	r3, [pc, #84]	; (80013d4 <SetSysClock+0x90>)
 800137e:	4a17      	ldr	r2, [pc, #92]	; (80013dc <SetSysClock+0x98>)
 8001380:	605a      	str	r2, [r3, #4]
 8001382:	4b14      	ldr	r3, [pc, #80]	; (80013d4 <SetSysClock+0x90>)
 8001384:	681b      	ldr	r3, [r3, #0]
 8001386:	4a13      	ldr	r2, [pc, #76]	; (80013d4 <SetSysClock+0x90>)
 8001388:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800138c:	6013      	str	r3, [r2, #0]
 800138e:	bf00      	nop
 8001390:	4b10      	ldr	r3, [pc, #64]	; (80013d4 <SetSysClock+0x90>)
 8001392:	681b      	ldr	r3, [r3, #0]
 8001394:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001398:	2b00      	cmp	r3, #0
 800139a:	d0f9      	beq.n	8001390 <SetSysClock+0x4c>
 800139c:	4b10      	ldr	r3, [pc, #64]	; (80013e0 <SetSysClock+0x9c>)
 800139e:	f240 6202 	movw	r2, #1538	; 0x602
 80013a2:	601a      	str	r2, [r3, #0]
 80013a4:	4b0b      	ldr	r3, [pc, #44]	; (80013d4 <SetSysClock+0x90>)
 80013a6:	689b      	ldr	r3, [r3, #8]
 80013a8:	4a0a      	ldr	r2, [pc, #40]	; (80013d4 <SetSysClock+0x90>)
 80013aa:	f023 0303 	bic.w	r3, r3, #3
 80013ae:	6093      	str	r3, [r2, #8]
 80013b0:	4b08      	ldr	r3, [pc, #32]	; (80013d4 <SetSysClock+0x90>)
 80013b2:	689b      	ldr	r3, [r3, #8]
 80013b4:	4a07      	ldr	r2, [pc, #28]	; (80013d4 <SetSysClock+0x90>)
 80013b6:	f043 0302 	orr.w	r3, r3, #2
 80013ba:	6093      	str	r3, [r2, #8]
 80013bc:	bf00      	nop
 80013be:	4b05      	ldr	r3, [pc, #20]	; (80013d4 <SetSysClock+0x90>)
 80013c0:	689b      	ldr	r3, [r3, #8]
 80013c2:	f003 030c 	and.w	r3, r3, #12
 80013c6:	2b08      	cmp	r3, #8
 80013c8:	d1f9      	bne.n	80013be <SetSysClock+0x7a>
 80013ca:	bf00      	nop
 80013cc:	46bd      	mov	sp, r7
 80013ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d2:	4770      	bx	lr
 80013d4:	40023800 	.word	0x40023800
 80013d8:	40007000 	.word	0x40007000
 80013dc:	08015410 	.word	0x08015410
 80013e0:	40023c00 	.word	0x40023c00

080013e4 <I2C_Init>:
 80013e4:	b580      	push	{r7, lr}
 80013e6:	b08a      	sub	sp, #40	; 0x28
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
 80013ec:	6039      	str	r1, [r7, #0]
 80013ee:	2300      	movs	r3, #0
 80013f0:	84fb      	strh	r3, [r7, #38]	; 0x26
 80013f2:	2300      	movs	r3, #0
 80013f4:	847b      	strh	r3, [r7, #34]	; 0x22
 80013f6:	2304      	movs	r3, #4
 80013f8:	84bb      	strh	r3, [r7, #36]	; 0x24
 80013fa:	4b57      	ldr	r3, [pc, #348]	; (8001558 <I2C_Init+0x174>)
 80013fc:	61fb      	str	r3, [r7, #28]
 80013fe:	687b      	ldr	r3, [r7, #4]
 8001400:	889b      	ldrh	r3, [r3, #4]
 8001402:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001404:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001406:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800140a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800140c:	f107 030c 	add.w	r3, r7, #12
 8001410:	4618      	mov	r0, r3
 8001412:	f7ff f825 	bl	8000460 <RCC_GetClocksFreq>
 8001416:	697b      	ldr	r3, [r7, #20]
 8001418:	61fb      	str	r3, [r7, #28]
 800141a:	69fb      	ldr	r3, [r7, #28]
 800141c:	4a4f      	ldr	r2, [pc, #316]	; (800155c <I2C_Init+0x178>)
 800141e:	fba2 2303 	umull	r2, r3, r2, r3
 8001422:	0c9b      	lsrs	r3, r3, #18
 8001424:	847b      	strh	r3, [r7, #34]	; 0x22
 8001426:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001428:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800142a:	4313      	orrs	r3, r2
 800142c:	84fb      	strh	r3, [r7, #38]	; 0x26
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001432:	809a      	strh	r2, [r3, #4]
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	881b      	ldrh	r3, [r3, #0]
 8001438:	b29b      	uxth	r3, r3
 800143a:	f023 0301 	bic.w	r3, r3, #1
 800143e:	b29a      	uxth	r2, r3
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	801a      	strh	r2, [r3, #0]
 8001444:	2300      	movs	r3, #0
 8001446:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001448:	683b      	ldr	r3, [r7, #0]
 800144a:	681b      	ldr	r3, [r3, #0]
 800144c:	4a44      	ldr	r2, [pc, #272]	; (8001560 <I2C_Init+0x17c>)
 800144e:	4293      	cmp	r3, r2
 8001450:	d815      	bhi.n	800147e <I2C_Init+0x9a>
 8001452:	683b      	ldr	r3, [r7, #0]
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	005b      	lsls	r3, r3, #1
 8001458:	69fa      	ldr	r2, [r7, #28]
 800145a:	fbb2 f3f3 	udiv	r3, r2, r3
 800145e:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001460:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001462:	2b03      	cmp	r3, #3
 8001464:	d801      	bhi.n	800146a <I2C_Init+0x86>
 8001466:	2304      	movs	r3, #4
 8001468:	84bb      	strh	r3, [r7, #36]	; 0x24
 800146a:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800146c:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800146e:	4313      	orrs	r3, r2
 8001470:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001472:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001474:	3301      	adds	r3, #1
 8001476:	b29a      	uxth	r2, r3
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	841a      	strh	r2, [r3, #32]
 800147c:	e040      	b.n	8001500 <I2C_Init+0x11c>
 800147e:	683b      	ldr	r3, [r7, #0]
 8001480:	88db      	ldrh	r3, [r3, #6]
 8001482:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 8001486:	4293      	cmp	r3, r2
 8001488:	d109      	bne.n	800149e <I2C_Init+0xba>
 800148a:	683b      	ldr	r3, [r7, #0]
 800148c:	681a      	ldr	r2, [r3, #0]
 800148e:	4613      	mov	r3, r2
 8001490:	005b      	lsls	r3, r3, #1
 8001492:	4413      	add	r3, r2
 8001494:	69fa      	ldr	r2, [r7, #28]
 8001496:	fbb2 f3f3 	udiv	r3, r2, r3
 800149a:	84bb      	strh	r3, [r7, #36]	; 0x24
 800149c:	e00e      	b.n	80014bc <I2C_Init+0xd8>
 800149e:	683b      	ldr	r3, [r7, #0]
 80014a0:	681a      	ldr	r2, [r3, #0]
 80014a2:	4613      	mov	r3, r2
 80014a4:	009b      	lsls	r3, r3, #2
 80014a6:	4413      	add	r3, r2
 80014a8:	009a      	lsls	r2, r3, #2
 80014aa:	4413      	add	r3, r2
 80014ac:	69fa      	ldr	r2, [r7, #28]
 80014ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80014b2:	84bb      	strh	r3, [r7, #36]	; 0x24
 80014b4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80014b6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80014ba:	84bb      	strh	r3, [r7, #36]	; 0x24
 80014bc:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80014be:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d103      	bne.n	80014ce <I2C_Init+0xea>
 80014c6:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80014c8:	f043 0301 	orr.w	r3, r3, #1
 80014cc:	84bb      	strh	r3, [r7, #36]	; 0x24
 80014ce:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80014d0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80014d2:	4313      	orrs	r3, r2
 80014d4:	b29b      	uxth	r3, r3
 80014d6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80014da:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80014de:	84fb      	strh	r3, [r7, #38]	; 0x26
 80014e0:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80014e2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80014e6:	fb02 f303 	mul.w	r3, r2, r3
 80014ea:	4a1e      	ldr	r2, [pc, #120]	; (8001564 <I2C_Init+0x180>)
 80014ec:	fb82 1203 	smull	r1, r2, r2, r3
 80014f0:	1192      	asrs	r2, r2, #6
 80014f2:	17db      	asrs	r3, r3, #31
 80014f4:	1ad3      	subs	r3, r2, r3
 80014f6:	b29b      	uxth	r3, r3
 80014f8:	3301      	adds	r3, #1
 80014fa:	b29a      	uxth	r2, r3
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	841a      	strh	r2, [r3, #32]
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001504:	839a      	strh	r2, [r3, #28]
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	881b      	ldrh	r3, [r3, #0]
 800150a:	b29b      	uxth	r3, r3
 800150c:	f043 0301 	orr.w	r3, r3, #1
 8001510:	b29a      	uxth	r2, r3
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	801a      	strh	r2, [r3, #0]
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	881b      	ldrh	r3, [r3, #0]
 800151a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800151c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800151e:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 8001522:	f023 0302 	bic.w	r3, r3, #2
 8001526:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001528:	683b      	ldr	r3, [r7, #0]
 800152a:	889a      	ldrh	r2, [r3, #4]
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	895b      	ldrh	r3, [r3, #10]
 8001530:	4313      	orrs	r3, r2
 8001532:	b29a      	uxth	r2, r3
 8001534:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001536:	4313      	orrs	r3, r2
 8001538:	84fb      	strh	r3, [r7, #38]	; 0x26
 800153a:	687b      	ldr	r3, [r7, #4]
 800153c:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800153e:	801a      	strh	r2, [r3, #0]
 8001540:	683b      	ldr	r3, [r7, #0]
 8001542:	899a      	ldrh	r2, [r3, #12]
 8001544:	683b      	ldr	r3, [r7, #0]
 8001546:	891b      	ldrh	r3, [r3, #8]
 8001548:	4313      	orrs	r3, r2
 800154a:	b29a      	uxth	r2, r3
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	811a      	strh	r2, [r3, #8]
 8001550:	bf00      	nop
 8001552:	3728      	adds	r7, #40	; 0x28
 8001554:	46bd      	mov	sp, r7
 8001556:	bd80      	pop	{r7, pc}
 8001558:	007a1200 	.word	0x007a1200
 800155c:	431bde83 	.word	0x431bde83
 8001560:	000186a0 	.word	0x000186a0
 8001564:	10624dd3 	.word	0x10624dd3

08001568 <I2C_Cmd>:
 8001568:	b480      	push	{r7}
 800156a:	b083      	sub	sp, #12
 800156c:	af00      	add	r7, sp, #0
 800156e:	6078      	str	r0, [r7, #4]
 8001570:	460b      	mov	r3, r1
 8001572:	70fb      	strb	r3, [r7, #3]
 8001574:	78fb      	ldrb	r3, [r7, #3]
 8001576:	2b00      	cmp	r3, #0
 8001578:	d008      	beq.n	800158c <I2C_Cmd+0x24>
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	881b      	ldrh	r3, [r3, #0]
 800157e:	b29b      	uxth	r3, r3
 8001580:	f043 0301 	orr.w	r3, r3, #1
 8001584:	b29a      	uxth	r2, r3
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	801a      	strh	r2, [r3, #0]
 800158a:	e007      	b.n	800159c <I2C_Cmd+0x34>
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	881b      	ldrh	r3, [r3, #0]
 8001590:	b29b      	uxth	r3, r3
 8001592:	f023 0301 	bic.w	r3, r3, #1
 8001596:	b29a      	uxth	r2, r3
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	801a      	strh	r2, [r3, #0]
 800159c:	bf00      	nop
 800159e:	370c      	adds	r7, #12
 80015a0:	46bd      	mov	sp, r7
 80015a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a6:	4770      	bx	lr

080015a8 <I2C_GenerateSTART>:
 80015a8:	b480      	push	{r7}
 80015aa:	b083      	sub	sp, #12
 80015ac:	af00      	add	r7, sp, #0
 80015ae:	6078      	str	r0, [r7, #4]
 80015b0:	460b      	mov	r3, r1
 80015b2:	70fb      	strb	r3, [r7, #3]
 80015b4:	78fb      	ldrb	r3, [r7, #3]
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d008      	beq.n	80015cc <I2C_GenerateSTART+0x24>
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	881b      	ldrh	r3, [r3, #0]
 80015be:	b29b      	uxth	r3, r3
 80015c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80015c4:	b29a      	uxth	r2, r3
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	801a      	strh	r2, [r3, #0]
 80015ca:	e007      	b.n	80015dc <I2C_GenerateSTART+0x34>
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	881b      	ldrh	r3, [r3, #0]
 80015d0:	b29b      	uxth	r3, r3
 80015d2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80015d6:	b29a      	uxth	r2, r3
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	801a      	strh	r2, [r3, #0]
 80015dc:	bf00      	nop
 80015de:	370c      	adds	r7, #12
 80015e0:	46bd      	mov	sp, r7
 80015e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e6:	4770      	bx	lr

080015e8 <I2C_GenerateSTOP>:
 80015e8:	b480      	push	{r7}
 80015ea:	b083      	sub	sp, #12
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
 80015f0:	460b      	mov	r3, r1
 80015f2:	70fb      	strb	r3, [r7, #3]
 80015f4:	78fb      	ldrb	r3, [r7, #3]
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d008      	beq.n	800160c <I2C_GenerateSTOP+0x24>
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	881b      	ldrh	r3, [r3, #0]
 80015fe:	b29b      	uxth	r3, r3
 8001600:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001604:	b29a      	uxth	r2, r3
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	801a      	strh	r2, [r3, #0]
 800160a:	e007      	b.n	800161c <I2C_GenerateSTOP+0x34>
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	881b      	ldrh	r3, [r3, #0]
 8001610:	b29b      	uxth	r3, r3
 8001612:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001616:	b29a      	uxth	r2, r3
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	801a      	strh	r2, [r3, #0]
 800161c:	bf00      	nop
 800161e:	370c      	adds	r7, #12
 8001620:	46bd      	mov	sp, r7
 8001622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001626:	4770      	bx	lr

08001628 <I2C_Send7bitAddress>:
 8001628:	b480      	push	{r7}
 800162a:	b083      	sub	sp, #12
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	460b      	mov	r3, r1
 8001632:	70fb      	strb	r3, [r7, #3]
 8001634:	4613      	mov	r3, r2
 8001636:	70bb      	strb	r3, [r7, #2]
 8001638:	78bb      	ldrb	r3, [r7, #2]
 800163a:	2b00      	cmp	r3, #0
 800163c:	d004      	beq.n	8001648 <I2C_Send7bitAddress+0x20>
 800163e:	78fb      	ldrb	r3, [r7, #3]
 8001640:	f043 0301 	orr.w	r3, r3, #1
 8001644:	70fb      	strb	r3, [r7, #3]
 8001646:	e003      	b.n	8001650 <I2C_Send7bitAddress+0x28>
 8001648:	78fb      	ldrb	r3, [r7, #3]
 800164a:	f023 0301 	bic.w	r3, r3, #1
 800164e:	70fb      	strb	r3, [r7, #3]
 8001650:	78fb      	ldrb	r3, [r7, #3]
 8001652:	b29a      	uxth	r2, r3
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	821a      	strh	r2, [r3, #16]
 8001658:	bf00      	nop
 800165a:	370c      	adds	r7, #12
 800165c:	46bd      	mov	sp, r7
 800165e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001662:	4770      	bx	lr

08001664 <I2C_AcknowledgeConfig>:
 8001664:	b480      	push	{r7}
 8001666:	b083      	sub	sp, #12
 8001668:	af00      	add	r7, sp, #0
 800166a:	6078      	str	r0, [r7, #4]
 800166c:	460b      	mov	r3, r1
 800166e:	70fb      	strb	r3, [r7, #3]
 8001670:	78fb      	ldrb	r3, [r7, #3]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d008      	beq.n	8001688 <I2C_AcknowledgeConfig+0x24>
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	881b      	ldrh	r3, [r3, #0]
 800167a:	b29b      	uxth	r3, r3
 800167c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001680:	b29a      	uxth	r2, r3
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	801a      	strh	r2, [r3, #0]
 8001686:	e007      	b.n	8001698 <I2C_AcknowledgeConfig+0x34>
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	881b      	ldrh	r3, [r3, #0]
 800168c:	b29b      	uxth	r3, r3
 800168e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001692:	b29a      	uxth	r2, r3
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	801a      	strh	r2, [r3, #0]
 8001698:	bf00      	nop
 800169a:	370c      	adds	r7, #12
 800169c:	46bd      	mov	sp, r7
 800169e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a2:	4770      	bx	lr

080016a4 <I2C_SendData>:
 80016a4:	b480      	push	{r7}
 80016a6:	b083      	sub	sp, #12
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
 80016ac:	460b      	mov	r3, r1
 80016ae:	70fb      	strb	r3, [r7, #3]
 80016b0:	78fb      	ldrb	r3, [r7, #3]
 80016b2:	b29a      	uxth	r2, r3
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	821a      	strh	r2, [r3, #16]
 80016b8:	bf00      	nop
 80016ba:	370c      	adds	r7, #12
 80016bc:	46bd      	mov	sp, r7
 80016be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c2:	4770      	bx	lr

080016c4 <I2C_ReceiveData>:
 80016c4:	b480      	push	{r7}
 80016c6:	b083      	sub	sp, #12
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	6078      	str	r0, [r7, #4]
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	8a1b      	ldrh	r3, [r3, #16]
 80016d0:	b29b      	uxth	r3, r3
 80016d2:	b2db      	uxtb	r3, r3
 80016d4:	4618      	mov	r0, r3
 80016d6:	370c      	adds	r7, #12
 80016d8:	46bd      	mov	sp, r7
 80016da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016de:	4770      	bx	lr

080016e0 <I2C_CheckEvent>:
 80016e0:	b480      	push	{r7}
 80016e2:	b087      	sub	sp, #28
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	6078      	str	r0, [r7, #4]
 80016e8:	6039      	str	r1, [r7, #0]
 80016ea:	2300      	movs	r3, #0
 80016ec:	613b      	str	r3, [r7, #16]
 80016ee:	2300      	movs	r3, #0
 80016f0:	60fb      	str	r3, [r7, #12]
 80016f2:	2300      	movs	r3, #0
 80016f4:	60bb      	str	r3, [r7, #8]
 80016f6:	2300      	movs	r3, #0
 80016f8:	75fb      	strb	r3, [r7, #23]
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	8a9b      	ldrh	r3, [r3, #20]
 80016fe:	b29b      	uxth	r3, r3
 8001700:	60fb      	str	r3, [r7, #12]
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	8b1b      	ldrh	r3, [r3, #24]
 8001706:	b29b      	uxth	r3, r3
 8001708:	60bb      	str	r3, [r7, #8]
 800170a:	68bb      	ldr	r3, [r7, #8]
 800170c:	041b      	lsls	r3, r3, #16
 800170e:	60bb      	str	r3, [r7, #8]
 8001710:	68fa      	ldr	r2, [r7, #12]
 8001712:	68bb      	ldr	r3, [r7, #8]
 8001714:	4313      	orrs	r3, r2
 8001716:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 800171a:	613b      	str	r3, [r7, #16]
 800171c:	693a      	ldr	r2, [r7, #16]
 800171e:	683b      	ldr	r3, [r7, #0]
 8001720:	4013      	ands	r3, r2
 8001722:	683a      	ldr	r2, [r7, #0]
 8001724:	429a      	cmp	r2, r3
 8001726:	d102      	bne.n	800172e <I2C_CheckEvent+0x4e>
 8001728:	2301      	movs	r3, #1
 800172a:	75fb      	strb	r3, [r7, #23]
 800172c:	e001      	b.n	8001732 <I2C_CheckEvent+0x52>
 800172e:	2300      	movs	r3, #0
 8001730:	75fb      	strb	r3, [r7, #23]
 8001732:	7dfb      	ldrb	r3, [r7, #23]
 8001734:	4618      	mov	r0, r3
 8001736:	371c      	adds	r7, #28
 8001738:	46bd      	mov	sp, r7
 800173a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800173e:	4770      	bx	lr

08001740 <I2C_GetFlagStatus>:
 8001740:	b480      	push	{r7}
 8001742:	b087      	sub	sp, #28
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	6039      	str	r1, [r7, #0]
 800174a:	2300      	movs	r3, #0
 800174c:	75fb      	strb	r3, [r7, #23]
 800174e:	2300      	movs	r3, #0
 8001750:	613b      	str	r3, [r7, #16]
 8001752:	2300      	movs	r3, #0
 8001754:	60fb      	str	r3, [r7, #12]
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	60fb      	str	r3, [r7, #12]
 800175a:	683b      	ldr	r3, [r7, #0]
 800175c:	0f1b      	lsrs	r3, r3, #28
 800175e:	613b      	str	r3, [r7, #16]
 8001760:	683b      	ldr	r3, [r7, #0]
 8001762:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001766:	603b      	str	r3, [r7, #0]
 8001768:	693b      	ldr	r3, [r7, #16]
 800176a:	2b00      	cmp	r3, #0
 800176c:	d003      	beq.n	8001776 <I2C_GetFlagStatus+0x36>
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	3314      	adds	r3, #20
 8001772:	60fb      	str	r3, [r7, #12]
 8001774:	e005      	b.n	8001782 <I2C_GetFlagStatus+0x42>
 8001776:	683b      	ldr	r3, [r7, #0]
 8001778:	0c1b      	lsrs	r3, r3, #16
 800177a:	603b      	str	r3, [r7, #0]
 800177c:	68fb      	ldr	r3, [r7, #12]
 800177e:	3318      	adds	r3, #24
 8001780:	60fb      	str	r3, [r7, #12]
 8001782:	68fb      	ldr	r3, [r7, #12]
 8001784:	681a      	ldr	r2, [r3, #0]
 8001786:	683b      	ldr	r3, [r7, #0]
 8001788:	4013      	ands	r3, r2
 800178a:	2b00      	cmp	r3, #0
 800178c:	d002      	beq.n	8001794 <I2C_GetFlagStatus+0x54>
 800178e:	2301      	movs	r3, #1
 8001790:	75fb      	strb	r3, [r7, #23]
 8001792:	e001      	b.n	8001798 <I2C_GetFlagStatus+0x58>
 8001794:	2300      	movs	r3, #0
 8001796:	75fb      	strb	r3, [r7, #23]
 8001798:	7dfb      	ldrb	r3, [r7, #23]
 800179a:	4618      	mov	r0, r3
 800179c:	371c      	adds	r7, #28
 800179e:	46bd      	mov	sp, r7
 80017a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a4:	4770      	bx	lr
	...

080017a8 <NVIC_SetPriority>:
 80017a8:	b480      	push	{r7}
 80017aa:	b083      	sub	sp, #12
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	4603      	mov	r3, r0
 80017b0:	6039      	str	r1, [r7, #0]
 80017b2:	71fb      	strb	r3, [r7, #7]
 80017b4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017b8:	2b00      	cmp	r3, #0
 80017ba:	da0b      	bge.n	80017d4 <NVIC_SetPriority+0x2c>
 80017bc:	683b      	ldr	r3, [r7, #0]
 80017be:	b2da      	uxtb	r2, r3
 80017c0:	490c      	ldr	r1, [pc, #48]	; (80017f4 <NVIC_SetPriority+0x4c>)
 80017c2:	79fb      	ldrb	r3, [r7, #7]
 80017c4:	f003 030f 	and.w	r3, r3, #15
 80017c8:	3b04      	subs	r3, #4
 80017ca:	0112      	lsls	r2, r2, #4
 80017cc:	b2d2      	uxtb	r2, r2
 80017ce:	440b      	add	r3, r1
 80017d0:	761a      	strb	r2, [r3, #24]
 80017d2:	e009      	b.n	80017e8 <NVIC_SetPriority+0x40>
 80017d4:	683b      	ldr	r3, [r7, #0]
 80017d6:	b2da      	uxtb	r2, r3
 80017d8:	4907      	ldr	r1, [pc, #28]	; (80017f8 <NVIC_SetPriority+0x50>)
 80017da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017de:	0112      	lsls	r2, r2, #4
 80017e0:	b2d2      	uxtb	r2, r2
 80017e2:	440b      	add	r3, r1
 80017e4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80017e8:	bf00      	nop
 80017ea:	370c      	adds	r7, #12
 80017ec:	46bd      	mov	sp, r7
 80017ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f2:	4770      	bx	lr
 80017f4:	e000ed00 	.word	0xe000ed00
 80017f8:	e000e100 	.word	0xe000e100

080017fc <SysTick_Config>:
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b082      	sub	sp, #8
 8001800:	af00      	add	r7, sp, #0
 8001802:	6078      	str	r0, [r7, #4]
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	3b01      	subs	r3, #1
 8001808:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800180c:	d301      	bcc.n	8001812 <SysTick_Config+0x16>
 800180e:	2301      	movs	r3, #1
 8001810:	e00f      	b.n	8001832 <SysTick_Config+0x36>
 8001812:	4a0a      	ldr	r2, [pc, #40]	; (800183c <SysTick_Config+0x40>)
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	3b01      	subs	r3, #1
 8001818:	6053      	str	r3, [r2, #4]
 800181a:	210f      	movs	r1, #15
 800181c:	f04f 30ff 	mov.w	r0, #4294967295
 8001820:	f7ff ffc2 	bl	80017a8 <NVIC_SetPriority>
 8001824:	4b05      	ldr	r3, [pc, #20]	; (800183c <SysTick_Config+0x40>)
 8001826:	2200      	movs	r2, #0
 8001828:	609a      	str	r2, [r3, #8]
 800182a:	4b04      	ldr	r3, [pc, #16]	; (800183c <SysTick_Config+0x40>)
 800182c:	2207      	movs	r2, #7
 800182e:	601a      	str	r2, [r3, #0]
 8001830:	2300      	movs	r3, #0
 8001832:	4618      	mov	r0, r3
 8001834:	3708      	adds	r7, #8
 8001836:	46bd      	mov	sp, r7
 8001838:	bd80      	pop	{r7, pc}
 800183a:	bf00      	nop
 800183c:	e000e010 	.word	0xe000e010

08001840 <TimerInit>:
 8001840:	b580      	push	{r7, lr}
 8001842:	b084      	sub	sp, #16
 8001844:	af00      	add	r7, sp, #0
 8001846:	463b      	mov	r3, r7
 8001848:	4618      	mov	r0, r3
 800184a:	f7fe fe09 	bl	8000460 <RCC_GetClocksFreq>
 800184e:	683b      	ldr	r3, [r7, #0]
 8001850:	4a0a      	ldr	r2, [pc, #40]	; (800187c <TimerInit+0x3c>)
 8001852:	fba2 2303 	umull	r2, r3, r2, r3
 8001856:	099b      	lsrs	r3, r3, #6
 8001858:	4618      	mov	r0, r3
 800185a:	f7ff ffcf 	bl	80017fc <SysTick_Config>
 800185e:	2101      	movs	r1, #1
 8001860:	f04f 30ff 	mov.w	r0, #4294967295
 8001864:	f7ff ffa0 	bl	80017a8 <NVIC_SetPriority>
 8001868:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800186c:	2100      	movs	r1, #0
 800186e:	4804      	ldr	r0, [pc, #16]	; (8001880 <TimerInit+0x40>)
 8001870:	f001 ffde 	bl	8003830 <memsetl>
 8001874:	bf00      	nop
 8001876:	3710      	adds	r7, #16
 8001878:	46bd      	mov	sp, r7
 800187a:	bd80      	pop	{r7, pc}
 800187c:	10624dd3 	.word	0x10624dd3
 8001880:	200001b0 	.word	0x200001b0

08001884 <TimerStart>:
 8001884:	b590      	push	{r4, r7, lr}
 8001886:	b087      	sub	sp, #28
 8001888:	af00      	add	r7, sp, #0
 800188a:	60f8      	str	r0, [r7, #12]
 800188c:	60b9      	str	r1, [r7, #8]
 800188e:	603b      	str	r3, [r7, #0]
 8001890:	4613      	mov	r3, r2
 8001892:	71fb      	strb	r3, [r7, #7]
 8001894:	2300      	movs	r3, #0
 8001896:	75fb      	strb	r3, [r7, #23]
 8001898:	e04c      	b.n	8001934 <TimerStart+0xb0>
 800189a:	7dfa      	ldrb	r2, [r7, #23]
 800189c:	4929      	ldr	r1, [pc, #164]	; (8001944 <TimerStart+0xc0>)
 800189e:	4613      	mov	r3, r2
 80018a0:	005b      	lsls	r3, r3, #1
 80018a2:	4413      	add	r3, r2
 80018a4:	00db      	lsls	r3, r3, #3
 80018a6:	440b      	add	r3, r1
 80018a8:	3310      	adds	r3, #16
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d13e      	bne.n	800192e <TimerStart+0xaa>
 80018b0:	7dfa      	ldrb	r2, [r7, #23]
 80018b2:	4924      	ldr	r1, [pc, #144]	; (8001944 <TimerStart+0xc0>)
 80018b4:	4613      	mov	r3, r2
 80018b6:	005b      	lsls	r3, r3, #1
 80018b8:	4413      	add	r3, r2
 80018ba:	00db      	lsls	r3, r3, #3
 80018bc:	440b      	add	r3, r1
 80018be:	68fa      	ldr	r2, [r7, #12]
 80018c0:	601a      	str	r2, [r3, #0]
 80018c2:	7dfa      	ldrb	r2, [r7, #23]
 80018c4:	491f      	ldr	r1, [pc, #124]	; (8001944 <TimerStart+0xc0>)
 80018c6:	4613      	mov	r3, r2
 80018c8:	005b      	lsls	r3, r3, #1
 80018ca:	4413      	add	r3, r2
 80018cc:	00db      	lsls	r3, r3, #3
 80018ce:	440b      	add	r3, r1
 80018d0:	3310      	adds	r3, #16
 80018d2:	683a      	ldr	r2, [r7, #0]
 80018d4:	601a      	str	r2, [r3, #0]
 80018d6:	7dfa      	ldrb	r2, [r7, #23]
 80018d8:	491a      	ldr	r1, [pc, #104]	; (8001944 <TimerStart+0xc0>)
 80018da:	4613      	mov	r3, r2
 80018dc:	005b      	lsls	r3, r3, #1
 80018de:	4413      	add	r3, r2
 80018e0:	00db      	lsls	r3, r3, #3
 80018e2:	440b      	add	r3, r1
 80018e4:	330c      	adds	r3, #12
 80018e6:	79fa      	ldrb	r2, [r7, #7]
 80018e8:	701a      	strb	r2, [r3, #0]
 80018ea:	7dfa      	ldrb	r2, [r7, #23]
 80018ec:	4915      	ldr	r1, [pc, #84]	; (8001944 <TimerStart+0xc0>)
 80018ee:	4613      	mov	r3, r2
 80018f0:	005b      	lsls	r3, r3, #1
 80018f2:	4413      	add	r3, r2
 80018f4:	00db      	lsls	r3, r3, #3
 80018f6:	440b      	add	r3, r1
 80018f8:	3314      	adds	r3, #20
 80018fa:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80018fc:	601a      	str	r2, [r3, #0]
 80018fe:	7dfc      	ldrb	r4, [r7, #23]
 8001900:	f000 f872 	bl	80019e8 <GetMilSecTick>
 8001904:	4601      	mov	r1, r0
 8001906:	4a0f      	ldr	r2, [pc, #60]	; (8001944 <TimerStart+0xc0>)
 8001908:	4623      	mov	r3, r4
 800190a:	005b      	lsls	r3, r3, #1
 800190c:	4423      	add	r3, r4
 800190e:	00db      	lsls	r3, r3, #3
 8001910:	4413      	add	r3, r2
 8001912:	3304      	adds	r3, #4
 8001914:	6019      	str	r1, [r3, #0]
 8001916:	7dfa      	ldrb	r2, [r7, #23]
 8001918:	490a      	ldr	r1, [pc, #40]	; (8001944 <TimerStart+0xc0>)
 800191a:	4613      	mov	r3, r2
 800191c:	005b      	lsls	r3, r3, #1
 800191e:	4413      	add	r3, r2
 8001920:	00db      	lsls	r3, r3, #3
 8001922:	440b      	add	r3, r1
 8001924:	3308      	adds	r3, #8
 8001926:	68ba      	ldr	r2, [r7, #8]
 8001928:	601a      	str	r2, [r3, #0]
 800192a:	7dfb      	ldrb	r3, [r7, #23]
 800192c:	e006      	b.n	800193c <TimerStart+0xb8>
 800192e:	7dfb      	ldrb	r3, [r7, #23]
 8001930:	3301      	adds	r3, #1
 8001932:	75fb      	strb	r3, [r7, #23]
 8001934:	7dfb      	ldrb	r3, [r7, #23]
 8001936:	2b0f      	cmp	r3, #15
 8001938:	d9af      	bls.n	800189a <TimerStart+0x16>
 800193a:	23ff      	movs	r3, #255	; 0xff
 800193c:	4618      	mov	r0, r3
 800193e:	371c      	adds	r7, #28
 8001940:	46bd      	mov	sp, r7
 8001942:	bd90      	pop	{r4, r7, pc}
 8001944:	200001b0 	.word	0x200001b0

08001948 <TimerStop>:
 8001948:	b480      	push	{r7}
 800194a:	b083      	sub	sp, #12
 800194c:	af00      	add	r7, sp, #0
 800194e:	4603      	mov	r3, r0
 8001950:	71fb      	strb	r3, [r7, #7]
 8001952:	79fb      	ldrb	r3, [r7, #7]
 8001954:	2b0f      	cmp	r3, #15
 8001956:	d80a      	bhi.n	800196e <TimerStop+0x26>
 8001958:	79fa      	ldrb	r2, [r7, #7]
 800195a:	4922      	ldr	r1, [pc, #136]	; (80019e4 <TimerStop+0x9c>)
 800195c:	4613      	mov	r3, r2
 800195e:	005b      	lsls	r3, r3, #1
 8001960:	4413      	add	r3, r2
 8001962:	00db      	lsls	r3, r3, #3
 8001964:	440b      	add	r3, r1
 8001966:	3310      	adds	r3, #16
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	2b00      	cmp	r3, #0
 800196c:	d101      	bne.n	8001972 <TimerStop+0x2a>
 800196e:	2300      	movs	r3, #0
 8001970:	e031      	b.n	80019d6 <TimerStop+0x8e>
 8001972:	79fa      	ldrb	r2, [r7, #7]
 8001974:	491b      	ldr	r1, [pc, #108]	; (80019e4 <TimerStop+0x9c>)
 8001976:	4613      	mov	r3, r2
 8001978:	005b      	lsls	r3, r3, #1
 800197a:	4413      	add	r3, r2
 800197c:	00db      	lsls	r3, r3, #3
 800197e:	440b      	add	r3, r1
 8001980:	2200      	movs	r2, #0
 8001982:	601a      	str	r2, [r3, #0]
 8001984:	79fa      	ldrb	r2, [r7, #7]
 8001986:	4917      	ldr	r1, [pc, #92]	; (80019e4 <TimerStop+0x9c>)
 8001988:	4613      	mov	r3, r2
 800198a:	005b      	lsls	r3, r3, #1
 800198c:	4413      	add	r3, r2
 800198e:	00db      	lsls	r3, r3, #3
 8001990:	440b      	add	r3, r1
 8001992:	3310      	adds	r3, #16
 8001994:	2200      	movs	r2, #0
 8001996:	601a      	str	r2, [r3, #0]
 8001998:	79fa      	ldrb	r2, [r7, #7]
 800199a:	4912      	ldr	r1, [pc, #72]	; (80019e4 <TimerStop+0x9c>)
 800199c:	4613      	mov	r3, r2
 800199e:	005b      	lsls	r3, r3, #1
 80019a0:	4413      	add	r3, r2
 80019a2:	00db      	lsls	r3, r3, #3
 80019a4:	440b      	add	r3, r1
 80019a6:	330c      	adds	r3, #12
 80019a8:	2200      	movs	r2, #0
 80019aa:	701a      	strb	r2, [r3, #0]
 80019ac:	79fa      	ldrb	r2, [r7, #7]
 80019ae:	490d      	ldr	r1, [pc, #52]	; (80019e4 <TimerStop+0x9c>)
 80019b0:	4613      	mov	r3, r2
 80019b2:	005b      	lsls	r3, r3, #1
 80019b4:	4413      	add	r3, r2
 80019b6:	00db      	lsls	r3, r3, #3
 80019b8:	440b      	add	r3, r1
 80019ba:	3308      	adds	r3, #8
 80019bc:	2200      	movs	r2, #0
 80019be:	601a      	str	r2, [r3, #0]
 80019c0:	79fa      	ldrb	r2, [r7, #7]
 80019c2:	4908      	ldr	r1, [pc, #32]	; (80019e4 <TimerStop+0x9c>)
 80019c4:	4613      	mov	r3, r2
 80019c6:	005b      	lsls	r3, r3, #1
 80019c8:	4413      	add	r3, r2
 80019ca:	00db      	lsls	r3, r3, #3
 80019cc:	440b      	add	r3, r1
 80019ce:	3304      	adds	r3, #4
 80019d0:	2200      	movs	r2, #0
 80019d2:	601a      	str	r2, [r3, #0]
 80019d4:	2301      	movs	r3, #1
 80019d6:	4618      	mov	r0, r3
 80019d8:	370c      	adds	r7, #12
 80019da:	46bd      	mov	sp, r7
 80019dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	200001b0 	.word	0x200001b0

080019e8 <GetMilSecTick>:
 80019e8:	b480      	push	{r7}
 80019ea:	af00      	add	r7, sp, #0
 80019ec:	4b03      	ldr	r3, [pc, #12]	; (80019fc <GetMilSecTick+0x14>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	4618      	mov	r0, r3
 80019f2:	46bd      	mov	sp, r7
 80019f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f8:	4770      	bx	lr
 80019fa:	bf00      	nop
 80019fc:	20000330 	.word	0x20000330

08001a00 <processTimerScheduler>:
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b084      	sub	sp, #16
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	2300      	movs	r3, #0
 8001a08:	73fb      	strb	r3, [r7, #15]
 8001a0a:	e068      	b.n	8001ade <processTimerScheduler+0xde>
 8001a0c:	7bfa      	ldrb	r2, [r7, #15]
 8001a0e:	4937      	ldr	r1, [pc, #220]	; (8001aec <processTimerScheduler+0xec>)
 8001a10:	4613      	mov	r3, r2
 8001a12:	005b      	lsls	r3, r3, #1
 8001a14:	4413      	add	r3, r2
 8001a16:	00db      	lsls	r3, r3, #3
 8001a18:	440b      	add	r3, r1
 8001a1a:	3310      	adds	r3, #16
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d05a      	beq.n	8001ad8 <processTimerScheduler+0xd8>
 8001a22:	7bfb      	ldrb	r3, [r7, #15]
 8001a24:	4618      	mov	r0, r3
 8001a26:	f000 f863 	bl	8001af0 <TimeExpired>
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	2b00      	cmp	r3, #0
 8001a2e:	d053      	beq.n	8001ad8 <processTimerScheduler+0xd8>
 8001a30:	7bfa      	ldrb	r2, [r7, #15]
 8001a32:	492e      	ldr	r1, [pc, #184]	; (8001aec <processTimerScheduler+0xec>)
 8001a34:	4613      	mov	r3, r2
 8001a36:	005b      	lsls	r3, r3, #1
 8001a38:	4413      	add	r3, r2
 8001a3a:	00db      	lsls	r3, r3, #3
 8001a3c:	440b      	add	r3, r1
 8001a3e:	3310      	adds	r3, #16
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	60bb      	str	r3, [r7, #8]
 8001a44:	7bfa      	ldrb	r2, [r7, #15]
 8001a46:	4929      	ldr	r1, [pc, #164]	; (8001aec <processTimerScheduler+0xec>)
 8001a48:	4613      	mov	r3, r2
 8001a4a:	005b      	lsls	r3, r3, #1
 8001a4c:	4413      	add	r3, r2
 8001a4e:	00db      	lsls	r3, r3, #3
 8001a50:	440b      	add	r3, r1
 8001a52:	3314      	adds	r3, #20
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	607b      	str	r3, [r7, #4]
 8001a58:	7bfa      	ldrb	r2, [r7, #15]
 8001a5a:	4924      	ldr	r1, [pc, #144]	; (8001aec <processTimerScheduler+0xec>)
 8001a5c:	4613      	mov	r3, r2
 8001a5e:	005b      	lsls	r3, r3, #1
 8001a60:	4413      	add	r3, r2
 8001a62:	00db      	lsls	r3, r3, #3
 8001a64:	440b      	add	r3, r1
 8001a66:	330c      	adds	r3, #12
 8001a68:	781b      	ldrb	r3, [r3, #0]
 8001a6a:	b2db      	uxtb	r3, r3
 8001a6c:	2bff      	cmp	r3, #255	; 0xff
 8001a6e:	d020      	beq.n	8001ab2 <processTimerScheduler+0xb2>
 8001a70:	7bfa      	ldrb	r2, [r7, #15]
 8001a72:	491e      	ldr	r1, [pc, #120]	; (8001aec <processTimerScheduler+0xec>)
 8001a74:	4613      	mov	r3, r2
 8001a76:	005b      	lsls	r3, r3, #1
 8001a78:	4413      	add	r3, r2
 8001a7a:	00db      	lsls	r3, r3, #3
 8001a7c:	440b      	add	r3, r1
 8001a7e:	330c      	adds	r3, #12
 8001a80:	781b      	ldrb	r3, [r3, #0]
 8001a82:	b2db      	uxtb	r3, r3
 8001a84:	2b00      	cmp	r3, #0
 8001a86:	d014      	beq.n	8001ab2 <processTimerScheduler+0xb2>
 8001a88:	7bfa      	ldrb	r2, [r7, #15]
 8001a8a:	4918      	ldr	r1, [pc, #96]	; (8001aec <processTimerScheduler+0xec>)
 8001a8c:	4613      	mov	r3, r2
 8001a8e:	005b      	lsls	r3, r3, #1
 8001a90:	4413      	add	r3, r2
 8001a92:	00db      	lsls	r3, r3, #3
 8001a94:	440b      	add	r3, r1
 8001a96:	330c      	adds	r3, #12
 8001a98:	781b      	ldrb	r3, [r3, #0]
 8001a9a:	b2db      	uxtb	r3, r3
 8001a9c:	3b01      	subs	r3, #1
 8001a9e:	b2d8      	uxtb	r0, r3
 8001aa0:	4912      	ldr	r1, [pc, #72]	; (8001aec <processTimerScheduler+0xec>)
 8001aa2:	4613      	mov	r3, r2
 8001aa4:	005b      	lsls	r3, r3, #1
 8001aa6:	4413      	add	r3, r2
 8001aa8:	00db      	lsls	r3, r3, #3
 8001aaa:	440b      	add	r3, r1
 8001aac:	330c      	adds	r3, #12
 8001aae:	4602      	mov	r2, r0
 8001ab0:	701a      	strb	r2, [r3, #0]
 8001ab2:	7bfa      	ldrb	r2, [r7, #15]
 8001ab4:	490d      	ldr	r1, [pc, #52]	; (8001aec <processTimerScheduler+0xec>)
 8001ab6:	4613      	mov	r3, r2
 8001ab8:	005b      	lsls	r3, r3, #1
 8001aba:	4413      	add	r3, r2
 8001abc:	00db      	lsls	r3, r3, #3
 8001abe:	440b      	add	r3, r1
 8001ac0:	330c      	adds	r3, #12
 8001ac2:	781b      	ldrb	r3, [r3, #0]
 8001ac4:	b2db      	uxtb	r3, r3
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	d103      	bne.n	8001ad2 <processTimerScheduler+0xd2>
 8001aca:	7bfb      	ldrb	r3, [r7, #15]
 8001acc:	4618      	mov	r0, r3
 8001ace:	f7ff ff3b 	bl	8001948 <TimerStop>
 8001ad2:	68bb      	ldr	r3, [r7, #8]
 8001ad4:	6878      	ldr	r0, [r7, #4]
 8001ad6:	4798      	blx	r3
 8001ad8:	7bfb      	ldrb	r3, [r7, #15]
 8001ada:	3301      	adds	r3, #1
 8001adc:	73fb      	strb	r3, [r7, #15]
 8001ade:	7bfb      	ldrb	r3, [r7, #15]
 8001ae0:	2b0f      	cmp	r3, #15
 8001ae2:	d993      	bls.n	8001a0c <processTimerScheduler+0xc>
 8001ae4:	bf00      	nop
 8001ae6:	3710      	adds	r7, #16
 8001ae8:	46bd      	mov	sp, r7
 8001aea:	bd80      	pop	{r7, pc}
 8001aec:	200001b0 	.word	0x200001b0

08001af0 <TimeExpired>:
 8001af0:	b580      	push	{r7, lr}
 8001af2:	b084      	sub	sp, #16
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	4603      	mov	r3, r0
 8001af8:	71fb      	strb	r3, [r7, #7]
 8001afa:	2300      	movs	r3, #0
 8001afc:	60fb      	str	r3, [r7, #12]
 8001afe:	b672      	cpsid	i
 8001b00:	f7ff ff72 	bl	80019e8 <GetMilSecTick>
 8001b04:	60b8      	str	r0, [r7, #8]
 8001b06:	79fb      	ldrb	r3, [r7, #7]
 8001b08:	2b0f      	cmp	r3, #15
 8001b0a:	d80a      	bhi.n	8001b22 <TimeExpired+0x32>
 8001b0c:	79fa      	ldrb	r2, [r7, #7]
 8001b0e:	492a      	ldr	r1, [pc, #168]	; (8001bb8 <TimeExpired+0xc8>)
 8001b10:	4613      	mov	r3, r2
 8001b12:	005b      	lsls	r3, r3, #1
 8001b14:	4413      	add	r3, r2
 8001b16:	00db      	lsls	r3, r3, #3
 8001b18:	440b      	add	r3, r1
 8001b1a:	3310      	adds	r3, #16
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	2b00      	cmp	r3, #0
 8001b20:	d102      	bne.n	8001b28 <TimeExpired+0x38>
 8001b22:	b662      	cpsie	i
 8001b24:	2300      	movs	r3, #0
 8001b26:	e042      	b.n	8001bae <TimeExpired+0xbe>
 8001b28:	79fa      	ldrb	r2, [r7, #7]
 8001b2a:	4923      	ldr	r1, [pc, #140]	; (8001bb8 <TimeExpired+0xc8>)
 8001b2c:	4613      	mov	r3, r2
 8001b2e:	005b      	lsls	r3, r3, #1
 8001b30:	4413      	add	r3, r2
 8001b32:	00db      	lsls	r3, r3, #3
 8001b34:	440b      	add	r3, r1
 8001b36:	3304      	adds	r3, #4
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	68ba      	ldr	r2, [r7, #8]
 8001b3c:	429a      	cmp	r2, r3
 8001b3e:	d30c      	bcc.n	8001b5a <TimeExpired+0x6a>
 8001b40:	79fa      	ldrb	r2, [r7, #7]
 8001b42:	491d      	ldr	r1, [pc, #116]	; (8001bb8 <TimeExpired+0xc8>)
 8001b44:	4613      	mov	r3, r2
 8001b46:	005b      	lsls	r3, r3, #1
 8001b48:	4413      	add	r3, r2
 8001b4a:	00db      	lsls	r3, r3, #3
 8001b4c:	440b      	add	r3, r1
 8001b4e:	3304      	adds	r3, #4
 8001b50:	681b      	ldr	r3, [r3, #0]
 8001b52:	68ba      	ldr	r2, [r7, #8]
 8001b54:	1ad3      	subs	r3, r2, r3
 8001b56:	60fb      	str	r3, [r7, #12]
 8001b58:	e00e      	b.n	8001b78 <TimeExpired+0x88>
 8001b5a:	79fa      	ldrb	r2, [r7, #7]
 8001b5c:	4916      	ldr	r1, [pc, #88]	; (8001bb8 <TimeExpired+0xc8>)
 8001b5e:	4613      	mov	r3, r2
 8001b60:	005b      	lsls	r3, r3, #1
 8001b62:	4413      	add	r3, r2
 8001b64:	00db      	lsls	r3, r3, #3
 8001b66:	440b      	add	r3, r1
 8001b68:	3304      	adds	r3, #4
 8001b6a:	681a      	ldr	r2, [r3, #0]
 8001b6c:	68bb      	ldr	r3, [r7, #8]
 8001b6e:	1ad3      	subs	r3, r2, r3
 8001b70:	60fb      	str	r3, [r7, #12]
 8001b72:	68fb      	ldr	r3, [r7, #12]
 8001b74:	43db      	mvns	r3, r3
 8001b76:	60fb      	str	r3, [r7, #12]
 8001b78:	79fa      	ldrb	r2, [r7, #7]
 8001b7a:	490f      	ldr	r1, [pc, #60]	; (8001bb8 <TimeExpired+0xc8>)
 8001b7c:	4613      	mov	r3, r2
 8001b7e:	005b      	lsls	r3, r3, #1
 8001b80:	4413      	add	r3, r2
 8001b82:	00db      	lsls	r3, r3, #3
 8001b84:	440b      	add	r3, r1
 8001b86:	3308      	adds	r3, #8
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	68fa      	ldr	r2, [r7, #12]
 8001b8c:	429a      	cmp	r2, r3
 8001b8e:	d202      	bcs.n	8001b96 <TimeExpired+0xa6>
 8001b90:	b662      	cpsie	i
 8001b92:	2300      	movs	r3, #0
 8001b94:	e00b      	b.n	8001bae <TimeExpired+0xbe>
 8001b96:	79fa      	ldrb	r2, [r7, #7]
 8001b98:	4907      	ldr	r1, [pc, #28]	; (8001bb8 <TimeExpired+0xc8>)
 8001b9a:	4613      	mov	r3, r2
 8001b9c:	005b      	lsls	r3, r3, #1
 8001b9e:	4413      	add	r3, r2
 8001ba0:	00db      	lsls	r3, r3, #3
 8001ba2:	440b      	add	r3, r1
 8001ba4:	3304      	adds	r3, #4
 8001ba6:	68ba      	ldr	r2, [r7, #8]
 8001ba8:	601a      	str	r2, [r3, #0]
 8001baa:	b662      	cpsie	i
 8001bac:	2301      	movs	r3, #1
 8001bae:	4618      	mov	r0, r3
 8001bb0:	3710      	adds	r7, #16
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	bd80      	pop	{r7, pc}
 8001bb6:	bf00      	nop
 8001bb8:	200001b0 	.word	0x200001b0

08001bbc <SysTick_Handler>:
 8001bbc:	b480      	push	{r7}
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	4b04      	ldr	r3, [pc, #16]	; (8001bd4 <SysTick_Handler+0x18>)
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	3301      	adds	r3, #1
 8001bc6:	4a03      	ldr	r2, [pc, #12]	; (8001bd4 <SysTick_Handler+0x18>)
 8001bc8:	6013      	str	r3, [r2, #0]
 8001bca:	bf00      	nop
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bd2:	4770      	bx	lr
 8001bd4:	20000330 	.word	0x20000330

08001bd8 <TemHumSensor_Init>:
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	af00      	add	r7, sp, #0
 8001bdc:	f000 f802 	bl	8001be4 <i2c_config>
 8001be0:	bf00      	nop
 8001be2:	bd80      	pop	{r7, pc}

08001be4 <i2c_config>:
 8001be4:	b580      	push	{r7, lr}
 8001be6:	b086      	sub	sp, #24
 8001be8:	af00      	add	r7, sp, #0
 8001bea:	2101      	movs	r1, #1
 8001bec:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8001bf0:	f7fe fd04 	bl	80005fc <RCC_APB1PeriphClockCmd>
 8001bf4:	4b1d      	ldr	r3, [pc, #116]	; (8001c6c <i2c_config+0x88>)
 8001bf6:	60bb      	str	r3, [r7, #8]
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	81bb      	strh	r3, [r7, #12]
 8001bfc:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8001c00:	81fb      	strh	r3, [r7, #14]
 8001c02:	2300      	movs	r3, #0
 8001c04:	823b      	strh	r3, [r7, #16]
 8001c06:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c0a:	827b      	strh	r3, [r7, #18]
 8001c0c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001c10:	82bb      	strh	r3, [r7, #20]
 8001c12:	f107 0308 	add.w	r3, r7, #8
 8001c16:	4619      	mov	r1, r3
 8001c18:	4815      	ldr	r0, [pc, #84]	; (8001c70 <i2c_config+0x8c>)
 8001c1a:	f7ff fbe3 	bl	80013e4 <I2C_Init>
 8001c1e:	2101      	movs	r1, #1
 8001c20:	4813      	ldr	r0, [pc, #76]	; (8001c70 <i2c_config+0x8c>)
 8001c22:	f7ff fca1 	bl	8001568 <I2C_Cmd>
 8001c26:	2101      	movs	r1, #1
 8001c28:	2002      	movs	r0, #2
 8001c2a:	f7fe fcc7 	bl	80005bc <RCC_AHB1PeriphClockCmd>
 8001c2e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001c32:	603b      	str	r3, [r7, #0]
 8001c34:	2302      	movs	r3, #2
 8001c36:	713b      	strb	r3, [r7, #4]
 8001c38:	2302      	movs	r3, #2
 8001c3a:	717b      	strb	r3, [r7, #5]
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	71bb      	strb	r3, [r7, #6]
 8001c40:	2300      	movs	r3, #0
 8001c42:	71fb      	strb	r3, [r7, #7]
 8001c44:	463b      	mov	r3, r7
 8001c46:	4619      	mov	r1, r3
 8001c48:	480a      	ldr	r0, [pc, #40]	; (8001c74 <i2c_config+0x90>)
 8001c4a:	f7fe fb19 	bl	8000280 <GPIO_Init>
 8001c4e:	2204      	movs	r2, #4
 8001c50:	2108      	movs	r1, #8
 8001c52:	4808      	ldr	r0, [pc, #32]	; (8001c74 <i2c_config+0x90>)
 8001c54:	f7fe fbbb 	bl	80003ce <GPIO_PinAFConfig>
 8001c58:	2204      	movs	r2, #4
 8001c5a:	2109      	movs	r1, #9
 8001c5c:	4805      	ldr	r0, [pc, #20]	; (8001c74 <i2c_config+0x90>)
 8001c5e:	f7fe fbb6 	bl	80003ce <GPIO_PinAFConfig>
 8001c62:	bf00      	nop
 8001c64:	3718      	adds	r7, #24
 8001c66:	46bd      	mov	sp, r7
 8001c68:	bd80      	pop	{r7, pc}
 8001c6a:	bf00      	nop
 8001c6c:	00061a80 	.word	0x00061a80
 8001c70:	40005400 	.word	0x40005400
 8001c74:	40020400 	.word	0x40020400

08001c78 <USART2_IRQHandler>:
 8001c78:	b580      	push	{r7, lr}
 8001c7a:	b082      	sub	sp, #8
 8001c7c:	af00      	add	r7, sp, #0
 8001c7e:	b672      	cpsid	i
 8001c80:	f240 5125 	movw	r1, #1317	; 0x525
 8001c84:	480e      	ldr	r0, [pc, #56]	; (8001cc0 <USART2_IRQHandler+0x48>)
 8001c86:	f001 fdfc 	bl	8003882 <USART_GetITStatus>
 8001c8a:	4603      	mov	r3, r0
 8001c8c:	2b01      	cmp	r3, #1
 8001c8e:	d112      	bne.n	8001cb6 <USART2_IRQHandler+0x3e>
 8001c90:	4b0c      	ldr	r3, [pc, #48]	; (8001cc4 <USART2_IRQHandler+0x4c>)
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	607b      	str	r3, [r7, #4]
 8001c96:	480a      	ldr	r0, [pc, #40]	; (8001cc0 <USART2_IRQHandler+0x48>)
 8001c98:	f001 fde3 	bl	8003862 <USART_ReceiveData>
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	b2db      	uxtb	r3, r3
 8001ca0:	70fb      	strb	r3, [r7, #3]
 8001ca2:	1cfb      	adds	r3, r7, #3
 8001ca4:	4619      	mov	r1, r3
 8001ca6:	6878      	ldr	r0, [r7, #4]
 8001ca8:	f001 fd32 	bl	8003710 <bufEnDat>
 8001cac:	f240 5125 	movw	r1, #1317	; 0x525
 8001cb0:	4803      	ldr	r0, [pc, #12]	; (8001cc0 <USART2_IRQHandler+0x48>)
 8001cb2:	f001 fe41 	bl	8003938 <USART_ClearITPendingBit>
 8001cb6:	b662      	cpsie	i
 8001cb8:	bf00      	nop
 8001cba:	3708      	adds	r7, #8
 8001cbc:	46bd      	mov	sp, r7
 8001cbe:	bd80      	pop	{r7, pc}
 8001cc0:	40004400 	.word	0x40004400
 8001cc4:	20000334 	.word	0x20000334

08001cc8 <delayMicroseconds>:
 8001cc8:	b480      	push	{r7}
 8001cca:	b083      	sub	sp, #12
 8001ccc:	af00      	add	r7, sp, #0
 8001cce:	6078      	str	r0, [r7, #4]
 8001cd0:	bf00      	nop
 8001cd2:	370c      	adds	r7, #12
 8001cd4:	46bd      	mov	sp, r7
 8001cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cda:	4770      	bx	lr

08001cdc <ucg_gpio_init>:
 8001cdc:	b580      	push	{r7, lr}
 8001cde:	b082      	sub	sp, #8
 8001ce0:	af00      	add	r7, sp, #0
 8001ce2:	2101      	movs	r1, #1
 8001ce4:	2007      	movs	r0, #7
 8001ce6:	f7fe fc69 	bl	80005bc <RCC_AHB1PeriphClockCmd>
 8001cea:	2301      	movs	r3, #1
 8001cec:	713b      	strb	r3, [r7, #4]
 8001cee:	2303      	movs	r3, #3
 8001cf0:	717b      	strb	r3, [r7, #5]
 8001cf2:	2300      	movs	r3, #0
 8001cf4:	71bb      	strb	r3, [r7, #6]
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	71fb      	strb	r3, [r7, #7]
 8001cfa:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8001cfe:	603b      	str	r3, [r7, #0]
 8001d00:	463b      	mov	r3, r7
 8001d02:	4619      	mov	r1, r3
 8001d04:	480a      	ldr	r0, [pc, #40]	; (8001d30 <ucg_gpio_init+0x54>)
 8001d06:	f7fe fabb 	bl	8000280 <GPIO_Init>
 8001d0a:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8001d0e:	603b      	str	r3, [r7, #0]
 8001d10:	463b      	mov	r3, r7
 8001d12:	4619      	mov	r1, r3
 8001d14:	4807      	ldr	r0, [pc, #28]	; (8001d34 <ucg_gpio_init+0x58>)
 8001d16:	f7fe fab3 	bl	8000280 <GPIO_Init>
 8001d1a:	2380      	movs	r3, #128	; 0x80
 8001d1c:	603b      	str	r3, [r7, #0]
 8001d1e:	463b      	mov	r3, r7
 8001d20:	4619      	mov	r1, r3
 8001d22:	4805      	ldr	r0, [pc, #20]	; (8001d38 <ucg_gpio_init+0x5c>)
 8001d24:	f7fe faac 	bl	8000280 <GPIO_Init>
 8001d28:	bf00      	nop
 8001d2a:	3708      	adds	r7, #8
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}
 8001d30:	40020000 	.word	0x40020000
 8001d34:	40020400 	.word	0x40020400
 8001d38:	40020800 	.word	0x40020800

08001d3c <ucg_com_arduino_send_generic_SW_SPI>:
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	b084      	sub	sp, #16
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	6078      	str	r0, [r7, #4]
 8001d44:	460b      	mov	r3, r1
 8001d46:	70fb      	strb	r3, [r7, #3]
 8001d48:	2308      	movs	r3, #8
 8001d4a:	73fb      	strb	r3, [r7, #15]
 8001d4c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	da05      	bge.n	8001d60 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8001d54:	2201      	movs	r2, #1
 8001d56:	2180      	movs	r1, #128	; 0x80
 8001d58:	4814      	ldr	r0, [pc, #80]	; (8001dac <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d5a:	f7fe fb20 	bl	800039e <GPIO_WriteBit>
 8001d5e:	e004      	b.n	8001d6a <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8001d60:	2200      	movs	r2, #0
 8001d62:	2180      	movs	r1, #128	; 0x80
 8001d64:	4811      	ldr	r0, [pc, #68]	; (8001dac <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d66:	f7fe fb1a 	bl	800039e <GPIO_WriteBit>
 8001d6a:	2001      	movs	r0, #1
 8001d6c:	f7ff ffac 	bl	8001cc8 <delayMicroseconds>
 8001d70:	2201      	movs	r2, #1
 8001d72:	2120      	movs	r1, #32
 8001d74:	480d      	ldr	r0, [pc, #52]	; (8001dac <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d76:	f7fe fb12 	bl	800039e <GPIO_WriteBit>
 8001d7a:	2001      	movs	r0, #1
 8001d7c:	f7ff ffa4 	bl	8001cc8 <delayMicroseconds>
 8001d80:	7bfb      	ldrb	r3, [r7, #15]
 8001d82:	3b01      	subs	r3, #1
 8001d84:	73fb      	strb	r3, [r7, #15]
 8001d86:	2200      	movs	r2, #0
 8001d88:	2120      	movs	r1, #32
 8001d8a:	4808      	ldr	r0, [pc, #32]	; (8001dac <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d8c:	f7fe fb07 	bl	800039e <GPIO_WriteBit>
 8001d90:	2001      	movs	r0, #1
 8001d92:	f7ff ff99 	bl	8001cc8 <delayMicroseconds>
 8001d96:	78fb      	ldrb	r3, [r7, #3]
 8001d98:	005b      	lsls	r3, r3, #1
 8001d9a:	70fb      	strb	r3, [r7, #3]
 8001d9c:	7bfb      	ldrb	r3, [r7, #15]
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d1d4      	bne.n	8001d4c <ucg_com_arduino_send_generic_SW_SPI+0x10>
 8001da2:	bf00      	nop
 8001da4:	3710      	adds	r7, #16
 8001da6:	46bd      	mov	sp, r7
 8001da8:	bd80      	pop	{r7, pc}
 8001daa:	bf00      	nop
 8001dac:	40020000 	.word	0x40020000

08001db0 <ucg_com_arduino_generic_SW_SPI>:
 8001db0:	b580      	push	{r7, lr}
 8001db2:	b084      	sub	sp, #16
 8001db4:	af00      	add	r7, sp, #0
 8001db6:	60f8      	str	r0, [r7, #12]
 8001db8:	607b      	str	r3, [r7, #4]
 8001dba:	460b      	mov	r3, r1
 8001dbc:	817b      	strh	r3, [r7, #10]
 8001dbe:	4613      	mov	r3, r2
 8001dc0:	813b      	strh	r3, [r7, #8]
 8001dc2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001dc6:	3b0a      	subs	r3, #10
 8001dc8:	2b0b      	cmp	r3, #11
 8001dca:	f200 80dc 	bhi.w	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001dce:	a201      	add	r2, pc, #4	; (adr r2, 8001dd4 <ucg_com_arduino_generic_SW_SPI+0x24>)
 8001dd0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001dd4:	08001e05 	.word	0x08001e05
 8001dd8:	08001f87 	.word	0x08001f87
 8001ddc:	08001e57 	.word	0x08001e57
 8001de0:	08001e61 	.word	0x08001e61
 8001de4:	08001e71 	.word	0x08001e71
 8001de8:	08001e81 	.word	0x08001e81
 8001dec:	08001e93 	.word	0x08001e93
 8001df0:	08001eb3 	.word	0x08001eb3
 8001df4:	08001edb 	.word	0x08001edb
 8001df8:	08001f11 	.word	0x08001f11
 8001dfc:	08001f2f 	.word	0x08001f2f
 8001e00:	08001f7f 	.word	0x08001f7f
 8001e04:	f7ff ff6a 	bl	8001cdc <ucg_gpio_init>
 8001e08:	2201      	movs	r2, #1
 8001e0a:	2180      	movs	r1, #128	; 0x80
 8001e0c:	4860      	ldr	r0, [pc, #384]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e0e:	f7fe fac6 	bl	800039e <GPIO_WriteBit>
 8001e12:	2201      	movs	r2, #1
 8001e14:	2140      	movs	r1, #64	; 0x40
 8001e16:	485f      	ldr	r0, [pc, #380]	; (8001f94 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001e18:	f7fe fac1 	bl	800039e <GPIO_WriteBit>
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	2180      	movs	r1, #128	; 0x80
 8001e20:	485d      	ldr	r0, [pc, #372]	; (8001f98 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8001e22:	f7fe fabc 	bl	800039e <GPIO_WriteBit>
 8001e26:	2201      	movs	r2, #1
 8001e28:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001e2c:	4858      	ldr	r0, [pc, #352]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e2e:	f7fe fab6 	bl	800039e <GPIO_WriteBit>
 8001e32:	2200      	movs	r2, #0
 8001e34:	2120      	movs	r1, #32
 8001e36:	4856      	ldr	r0, [pc, #344]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e38:	f7fe fab1 	bl	800039e <GPIO_WriteBit>
 8001e3c:	2201      	movs	r2, #1
 8001e3e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001e42:	4854      	ldr	r0, [pc, #336]	; (8001f94 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001e44:	f7fe faab 	bl	800039e <GPIO_WriteBit>
 8001e48:	2201      	movs	r2, #1
 8001e4a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001e4e:	4850      	ldr	r0, [pc, #320]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e50:	f7fe faa5 	bl	800039e <GPIO_WriteBit>
 8001e54:	e097      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e56:	893b      	ldrh	r3, [r7, #8]
 8001e58:	4618      	mov	r0, r3
 8001e5a:	f7ff ff35 	bl	8001cc8 <delayMicroseconds>
 8001e5e:	e092      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e60:	893b      	ldrh	r3, [r7, #8]
 8001e62:	b2db      	uxtb	r3, r3
 8001e64:	461a      	mov	r2, r3
 8001e66:	2180      	movs	r1, #128	; 0x80
 8001e68:	484b      	ldr	r0, [pc, #300]	; (8001f98 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8001e6a:	f7fe fa98 	bl	800039e <GPIO_WriteBit>
 8001e6e:	e08a      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e70:	893b      	ldrh	r3, [r7, #8]
 8001e72:	b2db      	uxtb	r3, r3
 8001e74:	461a      	mov	r2, r3
 8001e76:	2140      	movs	r1, #64	; 0x40
 8001e78:	4846      	ldr	r0, [pc, #280]	; (8001f94 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001e7a:	f7fe fa90 	bl	800039e <GPIO_WriteBit>
 8001e7e:	e082      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e80:	893b      	ldrh	r3, [r7, #8]
 8001e82:	b2db      	uxtb	r3, r3
 8001e84:	461a      	mov	r2, r3
 8001e86:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001e8a:	4841      	ldr	r0, [pc, #260]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e8c:	f7fe fa87 	bl	800039e <GPIO_WriteBit>
 8001e90:	e079      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e92:	893b      	ldrh	r3, [r7, #8]
 8001e94:	b2db      	uxtb	r3, r3
 8001e96:	4619      	mov	r1, r3
 8001e98:	68f8      	ldr	r0, [r7, #12]
 8001e9a:	f7ff ff4f 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001e9e:	e072      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	781b      	ldrb	r3, [r3, #0]
 8001ea4:	4619      	mov	r1, r3
 8001ea6:	68f8      	ldr	r0, [r7, #12]
 8001ea8:	f7ff ff48 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001eac:	893b      	ldrh	r3, [r7, #8]
 8001eae:	3b01      	subs	r3, #1
 8001eb0:	813b      	strh	r3, [r7, #8]
 8001eb2:	893b      	ldrh	r3, [r7, #8]
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d1f3      	bne.n	8001ea0 <ucg_com_arduino_generic_SW_SPI+0xf0>
 8001eb8:	e065      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	781b      	ldrb	r3, [r3, #0]
 8001ebe:	4619      	mov	r1, r3
 8001ec0:	68f8      	ldr	r0, [r7, #12]
 8001ec2:	f7ff ff3b 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	3301      	adds	r3, #1
 8001eca:	781b      	ldrb	r3, [r3, #0]
 8001ecc:	4619      	mov	r1, r3
 8001ece:	68f8      	ldr	r0, [r7, #12]
 8001ed0:	f7ff ff34 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001ed4:	893b      	ldrh	r3, [r7, #8]
 8001ed6:	3b01      	subs	r3, #1
 8001ed8:	813b      	strh	r3, [r7, #8]
 8001eda:	893b      	ldrh	r3, [r7, #8]
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d1ec      	bne.n	8001eba <ucg_com_arduino_generic_SW_SPI+0x10a>
 8001ee0:	e051      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	781b      	ldrb	r3, [r3, #0]
 8001ee6:	4619      	mov	r1, r3
 8001ee8:	68f8      	ldr	r0, [r7, #12]
 8001eea:	f7ff ff27 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	3301      	adds	r3, #1
 8001ef2:	781b      	ldrb	r3, [r3, #0]
 8001ef4:	4619      	mov	r1, r3
 8001ef6:	68f8      	ldr	r0, [r7, #12]
 8001ef8:	f7ff ff20 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	3302      	adds	r3, #2
 8001f00:	781b      	ldrb	r3, [r3, #0]
 8001f02:	4619      	mov	r1, r3
 8001f04:	68f8      	ldr	r0, [r7, #12]
 8001f06:	f7ff ff19 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001f0a:	893b      	ldrh	r3, [r7, #8]
 8001f0c:	3b01      	subs	r3, #1
 8001f0e:	813b      	strh	r3, [r7, #8]
 8001f10:	893b      	ldrh	r3, [r7, #8]
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	d1e5      	bne.n	8001ee2 <ucg_com_arduino_generic_SW_SPI+0x132>
 8001f16:	e036      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	1c5a      	adds	r2, r3, #1
 8001f1c:	607a      	str	r2, [r7, #4]
 8001f1e:	781b      	ldrb	r3, [r3, #0]
 8001f20:	4619      	mov	r1, r3
 8001f22:	68f8      	ldr	r0, [r7, #12]
 8001f24:	f7ff ff0a 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001f28:	893b      	ldrh	r3, [r7, #8]
 8001f2a:	3b01      	subs	r3, #1
 8001f2c:	813b      	strh	r3, [r7, #8]
 8001f2e:	893b      	ldrh	r3, [r7, #8]
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d1f1      	bne.n	8001f18 <ucg_com_arduino_generic_SW_SPI+0x168>
 8001f34:	e027      	b.n	8001f86 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	781b      	ldrb	r3, [r3, #0]
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d010      	beq.n	8001f60 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	781b      	ldrb	r3, [r3, #0]
 8001f42:	2b01      	cmp	r3, #1
 8001f44:	d106      	bne.n	8001f54 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8001f46:	2200      	movs	r2, #0
 8001f48:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001f4c:	4810      	ldr	r0, [pc, #64]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001f4e:	f7fe fa26 	bl	800039e <GPIO_WriteBit>
 8001f52:	e005      	b.n	8001f60 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8001f54:	2201      	movs	r2, #1
 8001f56:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001f5a:	480d      	ldr	r0, [pc, #52]	; (8001f90 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001f5c:	f7fe fa1f 	bl	800039e <GPIO_WriteBit>
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	3301      	adds	r3, #1
 8001f64:	607b      	str	r3, [r7, #4]
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	781b      	ldrb	r3, [r3, #0]
 8001f6a:	4619      	mov	r1, r3
 8001f6c:	68f8      	ldr	r0, [r7, #12]
 8001f6e:	f7ff fee5 	bl	8001d3c <ucg_com_arduino_send_generic_SW_SPI>
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	3301      	adds	r3, #1
 8001f76:	607b      	str	r3, [r7, #4]
 8001f78:	893b      	ldrh	r3, [r7, #8]
 8001f7a:	3b01      	subs	r3, #1
 8001f7c:	813b      	strh	r3, [r7, #8]
 8001f7e:	893b      	ldrh	r3, [r7, #8]
 8001f80:	2b00      	cmp	r3, #0
 8001f82:	d1d8      	bne.n	8001f36 <ucg_com_arduino_generic_SW_SPI+0x186>
 8001f84:	bf00      	nop
 8001f86:	2301      	movs	r3, #1
 8001f88:	4618      	mov	r0, r3
 8001f8a:	3710      	adds	r7, #16
 8001f8c:	46bd      	mov	sp, r7
 8001f8e:	bd80      	pop	{r7, pc}
 8001f90:	40020000 	.word	0x40020000
 8001f94:	40020400 	.word	0x40020400
 8001f98:	40020800 	.word	0x40020800

08001f9c <Ucglib4WireSWSPI_begin>:
 8001f9c:	b580      	push	{r7, lr}
 8001f9e:	b082      	sub	sp, #8
 8001fa0:	af00      	add	r7, sp, #0
 8001fa2:	6078      	str	r0, [r7, #4]
 8001fa4:	460b      	mov	r3, r1
 8001fa6:	70fb      	strb	r3, [r7, #3]
 8001fa8:	4b07      	ldr	r3, [pc, #28]	; (8001fc8 <Ucglib4WireSWSPI_begin+0x2c>)
 8001faa:	4a08      	ldr	r2, [pc, #32]	; (8001fcc <Ucglib4WireSWSPI_begin+0x30>)
 8001fac:	4908      	ldr	r1, [pc, #32]	; (8001fd0 <Ucglib4WireSWSPI_begin+0x34>)
 8001fae:	6878      	ldr	r0, [r7, #4]
 8001fb0:	f001 f9a2 	bl	80032f8 <ucg_Init>
 8001fb4:	78fb      	ldrb	r3, [r7, #3]
 8001fb6:	4619      	mov	r1, r3
 8001fb8:	6878      	ldr	r0, [r7, #4]
 8001fba:	f000 ff86 	bl	8002eca <ucg_SetFontMode>
 8001fbe:	bf00      	nop
 8001fc0:	3708      	adds	r7, #8
 8001fc2:	46bd      	mov	sp, r7
 8001fc4:	bd80      	pop	{r7, pc}
 8001fc6:	bf00      	nop
 8001fc8:	08001db1 	.word	0x08001db1
 8001fcc:	08002609 	.word	0x08002609
 8001fd0:	08002731 	.word	0x08002731

08001fd4 <ucg_DrawBox>:
 8001fd4:	b580      	push	{r7, lr}
 8001fd6:	b084      	sub	sp, #16
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	60f8      	str	r0, [r7, #12]
 8001fdc:	4608      	mov	r0, r1
 8001fde:	4611      	mov	r1, r2
 8001fe0:	461a      	mov	r2, r3
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	817b      	strh	r3, [r7, #10]
 8001fe6:	460b      	mov	r3, r1
 8001fe8:	813b      	strh	r3, [r7, #8]
 8001fea:	4613      	mov	r3, r2
 8001fec:	80fb      	strh	r3, [r7, #6]
 8001fee:	e014      	b.n	800201a <ucg_DrawBox+0x46>
 8001ff0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001ff4:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001ff8:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8001ffc:	68f8      	ldr	r0, [r7, #12]
 8001ffe:	f001 f9ed 	bl	80033dc <ucg_DrawHLine>
 8002002:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002006:	b29b      	uxth	r3, r3
 8002008:	3b01      	subs	r3, #1
 800200a:	b29b      	uxth	r3, r3
 800200c:	833b      	strh	r3, [r7, #24]
 800200e:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8002012:	b29b      	uxth	r3, r3
 8002014:	3301      	adds	r3, #1
 8002016:	b29b      	uxth	r3, r3
 8002018:	813b      	strh	r3, [r7, #8]
 800201a:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 800201e:	2b00      	cmp	r3, #0
 8002020:	dce6      	bgt.n	8001ff0 <ucg_DrawBox+0x1c>
 8002022:	bf00      	nop
 8002024:	3710      	adds	r7, #16
 8002026:	46bd      	mov	sp, r7
 8002028:	bd80      	pop	{r7, pc}

0800202a <ucg_ClearScreen>:
 800202a:	b580      	push	{r7, lr}
 800202c:	b084      	sub	sp, #16
 800202e:	af02      	add	r7, sp, #8
 8002030:	6078      	str	r0, [r7, #4]
 8002032:	2300      	movs	r3, #0
 8002034:	9300      	str	r3, [sp, #0]
 8002036:	2300      	movs	r3, #0
 8002038:	2200      	movs	r2, #0
 800203a:	2100      	movs	r1, #0
 800203c:	6878      	ldr	r0, [r7, #4]
 800203e:	f001 f9ec 	bl	800341a <ucg_SetColor>
 8002042:	6878      	ldr	r0, [r7, #4]
 8002044:	f000 fb3b 	bl	80026be <ucg_SetMaxClipRange>
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002054:	9300      	str	r3, [sp, #0]
 8002056:	4613      	mov	r3, r2
 8002058:	2200      	movs	r2, #0
 800205a:	2100      	movs	r1, #0
 800205c:	6878      	ldr	r0, [r7, #4]
 800205e:	f7ff ffb9 	bl	8001fd4 <ucg_DrawBox>
 8002062:	23ff      	movs	r3, #255	; 0xff
 8002064:	9300      	str	r3, [sp, #0]
 8002066:	23ff      	movs	r3, #255	; 0xff
 8002068:	22ff      	movs	r2, #255	; 0xff
 800206a:	2100      	movs	r1, #0
 800206c:	6878      	ldr	r0, [r7, #4]
 800206e:	f001 f9d4 	bl	800341a <ucg_SetColor>
 8002072:	bf00      	nop
 8002074:	3708      	adds	r7, #8
 8002076:	46bd      	mov	sp, r7
 8002078:	bd80      	pop	{r7, pc}

0800207a <ucg_ccs_init>:
 800207a:	b480      	push	{r7}
 800207c:	b083      	sub	sp, #12
 800207e:	af00      	add	r7, sp, #0
 8002080:	6078      	str	r0, [r7, #4]
 8002082:	4608      	mov	r0, r1
 8002084:	4611      	mov	r1, r2
 8002086:	461a      	mov	r2, r3
 8002088:	4603      	mov	r3, r0
 800208a:	70fb      	strb	r3, [r7, #3]
 800208c:	460b      	mov	r3, r1
 800208e:	70bb      	strb	r3, [r7, #2]
 8002090:	4613      	mov	r3, r2
 8002092:	803b      	strh	r3, [r7, #0]
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	78fa      	ldrb	r2, [r7, #3]
 8002098:	705a      	strb	r2, [r3, #1]
 800209a:	78bb      	ldrb	r3, [r7, #2]
 800209c:	b29a      	uxth	r2, r3
 800209e:	78fb      	ldrb	r3, [r7, #3]
 80020a0:	b29b      	uxth	r3, r3
 80020a2:	1ad3      	subs	r3, r2, r3
 80020a4:	b29b      	uxth	r3, r3
 80020a6:	b21a      	sxth	r2, r3
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	809a      	strh	r2, [r3, #4]
 80020ac:	883b      	ldrh	r3, [r7, #0]
 80020ae:	3b01      	subs	r3, #1
 80020b0:	b29b      	uxth	r3, r3
 80020b2:	b21a      	sxth	r2, r3
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	811a      	strh	r2, [r3, #8]
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	2201      	movs	r2, #1
 80020bc:	805a      	strh	r2, [r3, #2]
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020c4:	461a      	mov	r2, r3
 80020c6:	687b      	ldr	r3, [r7, #4]
 80020c8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80020cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80020d0:	b21a      	sxth	r2, r3
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	80da      	strh	r2, [r3, #6]
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020dc:	2b00      	cmp	r3, #0
 80020de:	da0c      	bge.n	80020fa <ucg_ccs_init+0x80>
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020e6:	b29b      	uxth	r3, r3
 80020e8:	425b      	negs	r3, r3
 80020ea:	b29b      	uxth	r3, r3
 80020ec:	b21a      	sxth	r2, r3
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	809a      	strh	r2, [r3, #4]
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80020f8:	805a      	strh	r2, [r3, #2]
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002100:	687a      	ldr	r2, [r7, #4]
 8002102:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002106:	fb93 f1f2 	sdiv	r1, r3, r2
 800210a:	fb02 f201 	mul.w	r2, r2, r1
 800210e:	1a9b      	subs	r3, r3, r2
 8002110:	b21a      	sxth	r2, r3
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	815a      	strh	r2, [r3, #10]
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800211c:	0fda      	lsrs	r2, r3, #31
 800211e:	4413      	add	r3, r2
 8002120:	105b      	asrs	r3, r3, #1
 8002122:	b21a      	sxth	r2, r3
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	819a      	strh	r2, [r3, #12]
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	78fa      	ldrb	r2, [r7, #3]
 800212c:	701a      	strb	r2, [r3, #0]
 800212e:	bf00      	nop
 8002130:	370c      	adds	r7, #12
 8002132:	46bd      	mov	sp, r7
 8002134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002138:	4770      	bx	lr

0800213a <ucg_ccs_step>:
 800213a:	b480      	push	{r7}
 800213c:	b083      	sub	sp, #12
 800213e:	af00      	add	r7, sp, #0
 8002140:	6078      	str	r0, [r7, #4]
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	781a      	ldrb	r2, [r3, #0]
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800214c:	b2db      	uxtb	r3, r3
 800214e:	4413      	add	r3, r2
 8002150:	b2da      	uxtb	r2, r3
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	701a      	strb	r2, [r3, #0]
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 800215c:	b29a      	uxth	r2, r3
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8002164:	b29b      	uxth	r3, r3
 8002166:	4413      	add	r3, r2
 8002168:	b29b      	uxth	r3, r3
 800216a:	b21a      	sxth	r2, r3
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	819a      	strh	r2, [r3, #12]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800217c:	429a      	cmp	r2, r3
 800217e:	db16      	blt.n	80021ae <ucg_ccs_step+0x74>
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	781a      	ldrb	r2, [r3, #0]
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800218a:	b2db      	uxtb	r3, r3
 800218c:	4413      	add	r3, r2
 800218e:	b2da      	uxtb	r2, r3
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	701a      	strb	r2, [r3, #0]
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 800219a:	b29a      	uxth	r2, r3
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80021a2:	b29b      	uxth	r3, r3
 80021a4:	1ad3      	subs	r3, r2, r3
 80021a6:	b29b      	uxth	r3, r3
 80021a8:	b21a      	sxth	r2, r3
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	819a      	strh	r2, [r3, #12]
 80021ae:	bf00      	nop
 80021b0:	370c      	adds	r7, #12
 80021b2:	46bd      	mov	sp, r7
 80021b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b8:	4770      	bx	lr

080021ba <ucg_ccs_seek>:
 80021ba:	b480      	push	{r7}
 80021bc:	b085      	sub	sp, #20
 80021be:	af00      	add	r7, sp, #0
 80021c0:	6078      	str	r0, [r7, #4]
 80021c2:	460b      	mov	r3, r1
 80021c4:	807b      	strh	r3, [r7, #2]
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80021cc:	b2da      	uxtb	r2, r3
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	701a      	strb	r2, [r3, #0]
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	781a      	ldrb	r2, [r3, #0]
 80021d6:	887b      	ldrh	r3, [r7, #2]
 80021d8:	b2db      	uxtb	r3, r3
 80021da:	fb12 f303 	smulbb	r3, r2, r3
 80021de:	b2da      	uxtb	r2, r3
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	701a      	strb	r2, [r3, #0]
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80021ea:	b29a      	uxth	r2, r3
 80021ec:	887b      	ldrh	r3, [r7, #2]
 80021ee:	fb12 f303 	smulbb	r3, r2, r3
 80021f2:	b29a      	uxth	r2, r3
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80021fa:	0fd9      	lsrs	r1, r3, #31
 80021fc:	440b      	add	r3, r1
 80021fe:	105b      	asrs	r3, r3, #1
 8002200:	b21b      	sxth	r3, r3
 8002202:	b29b      	uxth	r3, r3
 8002204:	4413      	add	r3, r2
 8002206:	b29b      	uxth	r3, r3
 8002208:	81fb      	strh	r3, [r7, #14]
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002210:	2b00      	cmp	r3, #0
 8002212:	db0e      	blt.n	8002232 <ucg_ccs_seek+0x78>
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	781a      	ldrb	r2, [r3, #0]
 8002218:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800221c:	6879      	ldr	r1, [r7, #4]
 800221e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002222:	fb93 f3f1 	sdiv	r3, r3, r1
 8002226:	b2db      	uxtb	r3, r3
 8002228:	4413      	add	r3, r2
 800222a:	b2da      	uxtb	r2, r3
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	701a      	strb	r2, [r3, #0]
 8002230:	e00d      	b.n	800224e <ucg_ccs_seek+0x94>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	781a      	ldrb	r2, [r3, #0]
 8002236:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800223a:	6879      	ldr	r1, [r7, #4]
 800223c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002240:	fb93 f3f1 	sdiv	r3, r3, r1
 8002244:	b2db      	uxtb	r3, r3
 8002246:	1ad3      	subs	r3, r2, r3
 8002248:	b2da      	uxtb	r2, r3
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	701a      	strb	r2, [r3, #0]
 800224e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002252:	687a      	ldr	r2, [r7, #4]
 8002254:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002258:	fb93 f1f2 	sdiv	r1, r3, r2
 800225c:	fb02 f201 	mul.w	r2, r2, r1
 8002260:	1a9b      	subs	r3, r3, r2
 8002262:	b21a      	sxth	r2, r3
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	819a      	strh	r2, [r3, #12]
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	781a      	ldrb	r2, [r3, #0]
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	785b      	ldrb	r3, [r3, #1]
 8002270:	4413      	add	r3, r2
 8002272:	b2da      	uxtb	r2, r3
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	701a      	strb	r2, [r3, #0]
 8002278:	bf00      	nop
 800227a:	3714      	adds	r7, #20
 800227c:	46bd      	mov	sp, r7
 800227e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002282:	4770      	bx	lr

08002284 <ucg_dev_default_cb>:
 8002284:	b580      	push	{r7, lr}
 8002286:	b084      	sub	sp, #16
 8002288:	af00      	add	r7, sp, #0
 800228a:	60f8      	str	r0, [r7, #12]
 800228c:	460b      	mov	r3, r1
 800228e:	607a      	str	r2, [r7, #4]
 8002290:	817b      	strh	r3, [r7, #10]
 8002292:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002296:	2b0c      	cmp	r3, #12
 8002298:	d00a      	beq.n	80022b0 <ucg_dev_default_cb+0x2c>
 800229a:	2b17      	cmp	r3, #23
 800229c:	d10f      	bne.n	80022be <ucg_dev_default_cb+0x3a>
 800229e:	68fb      	ldr	r3, [r7, #12]
 80022a0:	68db      	ldr	r3, [r3, #12]
 80022a2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80022a6:	687a      	ldr	r2, [r7, #4]
 80022a8:	68f8      	ldr	r0, [r7, #12]
 80022aa:	4798      	blx	r3
 80022ac:	4603      	mov	r3, r0
 80022ae:	e007      	b.n	80022c0 <ucg_dev_default_cb+0x3c>
 80022b0:	68fb      	ldr	r3, [r7, #12]
 80022b2:	687a      	ldr	r2, [r7, #4]
 80022b4:	3370      	adds	r3, #112	; 0x70
 80022b6:	6810      	ldr	r0, [r2, #0]
 80022b8:	6851      	ldr	r1, [r2, #4]
 80022ba:	c303      	stmia	r3!, {r0, r1}
 80022bc:	bf00      	nop
 80022be:	2301      	movs	r3, #1
 80022c0:	4618      	mov	r0, r3
 80022c2:	3710      	adds	r7, #16
 80022c4:	46bd      	mov	sp, r7
 80022c6:	bd80      	pop	{r7, pc}

080022c8 <ucg_ext_none>:
 80022c8:	b480      	push	{r7}
 80022ca:	b085      	sub	sp, #20
 80022cc:	af00      	add	r7, sp, #0
 80022ce:	60f8      	str	r0, [r7, #12]
 80022d0:	460b      	mov	r3, r1
 80022d2:	607a      	str	r2, [r7, #4]
 80022d4:	817b      	strh	r3, [r7, #10]
 80022d6:	2301      	movs	r3, #1
 80022d8:	4618      	mov	r0, r3
 80022da:	3714      	adds	r7, #20
 80022dc:	46bd      	mov	sp, r7
 80022de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e2:	4770      	bx	lr

080022e4 <ucg_handle_st7735_l90fx>:
 80022e4:	b590      	push	{r4, r7, lr}
 80022e6:	b085      	sub	sp, #20
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	6078      	str	r0, [r7, #4]
 80022ec:	6878      	ldr	r0, [r7, #4]
 80022ee:	f001 fbdd 	bl	8003aac <ucg_clip_l90fx>
 80022f2:	4603      	mov	r3, r0
 80022f4:	2b00      	cmp	r3, #0
 80022f6:	d053      	beq.n	80023a0 <ucg_handle_st7735_l90fx+0xbc>
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80022fe:	2b01      	cmp	r3, #1
 8002300:	d008      	beq.n	8002314 <ucg_handle_st7735_l90fx+0x30>
 8002302:	2b02      	cmp	r3, #2
 8002304:	d00b      	beq.n	800231e <ucg_handle_st7735_l90fx+0x3a>
 8002306:	2b00      	cmp	r3, #0
 8002308:	d11b      	bne.n	8002342 <ucg_handle_st7735_l90fx+0x5e>
 800230a:	4928      	ldr	r1, [pc, #160]	; (80023ac <ucg_handle_st7735_l90fx+0xc8>)
 800230c:	6878      	ldr	r0, [r7, #4]
 800230e:	f001 fefb 	bl	8004108 <ucg_com_SendCmdSeq>
 8002312:	e028      	b.n	8002366 <ucg_handle_st7735_l90fx+0x82>
 8002314:	4926      	ldr	r1, [pc, #152]	; (80023b0 <ucg_handle_st7735_l90fx+0xcc>)
 8002316:	6878      	ldr	r0, [r7, #4]
 8002318:	f001 fef6 	bl	8004108 <ucg_com_SendCmdSeq>
 800231c:	e023      	b.n	8002366 <ucg_handle_st7735_l90fx+0x82>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002322:	81fb      	strh	r3, [r7, #14]
 8002324:	89fb      	ldrh	r3, [r7, #14]
 8002326:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 800232a:	b29b      	uxth	r3, r3
 800232c:	b21a      	sxth	r2, r3
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	849a      	strh	r2, [r3, #36]	; 0x24
 8002332:	4920      	ldr	r1, [pc, #128]	; (80023b4 <ucg_handle_st7735_l90fx+0xd0>)
 8002334:	6878      	ldr	r0, [r7, #4]
 8002336:	f001 fee7 	bl	8004108 <ucg_com_SendCmdSeq>
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	89fa      	ldrh	r2, [r7, #14]
 800233e:	849a      	strh	r2, [r3, #36]	; 0x24
 8002340:	e011      	b.n	8002366 <ucg_handle_st7735_l90fx+0x82>
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002346:	81fb      	strh	r3, [r7, #14]
 8002348:	89fb      	ldrh	r3, [r7, #14]
 800234a:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 800234e:	b29b      	uxth	r3, r3
 8002350:	b21a      	sxth	r2, r3
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	84da      	strh	r2, [r3, #38]	; 0x26
 8002356:	4918      	ldr	r1, [pc, #96]	; (80023b8 <ucg_handle_st7735_l90fx+0xd4>)
 8002358:	6878      	ldr	r0, [r7, #4]
 800235a:	f001 fed5 	bl	8004108 <ucg_com_SendCmdSeq>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	89fa      	ldrh	r2, [r7, #14]
 8002362:	84da      	strh	r2, [r3, #38]	; 0x26
 8002364:	bf00      	nop
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800236c:	723b      	strb	r3, [r7, #8]
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8002374:	727b      	strb	r3, [r7, #9]
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 800237c:	72bb      	strb	r3, [r7, #10]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	69dc      	ldr	r4, [r3, #28]
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002388:	b29a      	uxth	r2, r3
 800238a:	f107 0308 	add.w	r3, r7, #8
 800238e:	2113      	movs	r1, #19
 8002390:	6878      	ldr	r0, [r7, #4]
 8002392:	47a0      	blx	r4
 8002394:	2101      	movs	r1, #1
 8002396:	6878      	ldr	r0, [r7, #4]
 8002398:	f001 fe02 	bl	8003fa0 <ucg_com_SetCSLineStatus>
 800239c:	2301      	movs	r3, #1
 800239e:	e000      	b.n	80023a2 <ucg_handle_st7735_l90fx+0xbe>
 80023a0:	2300      	movs	r3, #0
 80023a2:	4618      	mov	r0, r3
 80023a4:	3714      	adds	r7, #20
 80023a6:	46bd      	mov	sp, r7
 80023a8:	bd90      	pop	{r4, r7, pc}
 80023aa:	bf00      	nop
 80023ac:	08004d98 	.word	0x08004d98
 80023b0:	08004db8 	.word	0x08004db8
 80023b4:	08004ddc 	.word	0x08004ddc
 80023b8:	08004e00 	.word	0x08004e00

080023bc <ucg_handle_st7735_l90se>:
 80023bc:	b590      	push	{r4, r7, lr}
 80023be:	b087      	sub	sp, #28
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	2300      	movs	r3, #0
 80023c6:	75fb      	strb	r3, [r7, #23]
 80023c8:	e01a      	b.n	8002400 <ucg_handle_st7735_l90se+0x44>
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	f103 0146 	add.w	r1, r3, #70	; 0x46
 80023d0:	7dfa      	ldrb	r2, [r7, #23]
 80023d2:	4613      	mov	r3, r2
 80023d4:	00db      	lsls	r3, r3, #3
 80023d6:	1a9b      	subs	r3, r3, r2
 80023d8:	005b      	lsls	r3, r3, #1
 80023da:	18c8      	adds	r0, r1, r3
 80023dc:	7dfb      	ldrb	r3, [r7, #23]
 80023de:	687a      	ldr	r2, [r7, #4]
 80023e0:	4413      	add	r3, r2
 80023e2:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 80023e6:	7dfb      	ldrb	r3, [r7, #23]
 80023e8:	687a      	ldr	r2, [r7, #4]
 80023ea:	4413      	add	r3, r2
 80023ec:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80023f6:	f7ff fe40 	bl	800207a <ucg_ccs_init>
 80023fa:	7dfb      	ldrb	r3, [r7, #23]
 80023fc:	3301      	adds	r3, #1
 80023fe:	75fb      	strb	r3, [r7, #23]
 8002400:	7dfb      	ldrb	r3, [r7, #23]
 8002402:	2b02      	cmp	r3, #2
 8002404:	d9e1      	bls.n	80023ca <ucg_handle_st7735_l90se+0xe>
 8002406:	6878      	ldr	r0, [r7, #4]
 8002408:	f001 fcd0 	bl	8003dac <ucg_clip_l90se>
 800240c:	4603      	mov	r3, r0
 800240e:	2b00      	cmp	r3, #0
 8002410:	d071      	beq.n	80024f6 <ucg_handle_st7735_l90se+0x13a>
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002418:	2b01      	cmp	r3, #1
 800241a:	d008      	beq.n	800242e <ucg_handle_st7735_l90se+0x72>
 800241c:	2b02      	cmp	r3, #2
 800241e:	d00b      	beq.n	8002438 <ucg_handle_st7735_l90se+0x7c>
 8002420:	2b00      	cmp	r3, #0
 8002422:	d11b      	bne.n	800245c <ucg_handle_st7735_l90se+0xa0>
 8002424:	4936      	ldr	r1, [pc, #216]	; (8002500 <ucg_handle_st7735_l90se+0x144>)
 8002426:	6878      	ldr	r0, [r7, #4]
 8002428:	f001 fe6e 	bl	8004108 <ucg_com_SendCmdSeq>
 800242c:	e028      	b.n	8002480 <ucg_handle_st7735_l90se+0xc4>
 800242e:	4935      	ldr	r1, [pc, #212]	; (8002504 <ucg_handle_st7735_l90se+0x148>)
 8002430:	6878      	ldr	r0, [r7, #4]
 8002432:	f001 fe69 	bl	8004108 <ucg_com_SendCmdSeq>
 8002436:	e023      	b.n	8002480 <ucg_handle_st7735_l90se+0xc4>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800243c:	827b      	strh	r3, [r7, #18]
 800243e:	8a7b      	ldrh	r3, [r7, #18]
 8002440:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002444:	b29b      	uxth	r3, r3
 8002446:	b21a      	sxth	r2, r3
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	849a      	strh	r2, [r3, #36]	; 0x24
 800244c:	492e      	ldr	r1, [pc, #184]	; (8002508 <ucg_handle_st7735_l90se+0x14c>)
 800244e:	6878      	ldr	r0, [r7, #4]
 8002450:	f001 fe5a 	bl	8004108 <ucg_com_SendCmdSeq>
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	8a7a      	ldrh	r2, [r7, #18]
 8002458:	849a      	strh	r2, [r3, #36]	; 0x24
 800245a:	e011      	b.n	8002480 <ucg_handle_st7735_l90se+0xc4>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002460:	827b      	strh	r3, [r7, #18]
 8002462:	8a7b      	ldrh	r3, [r7, #18]
 8002464:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002468:	b29b      	uxth	r3, r3
 800246a:	b21a      	sxth	r2, r3
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	84da      	strh	r2, [r3, #38]	; 0x26
 8002470:	4926      	ldr	r1, [pc, #152]	; (800250c <ucg_handle_st7735_l90se+0x150>)
 8002472:	6878      	ldr	r0, [r7, #4]
 8002474:	f001 fe48 	bl	8004108 <ucg_com_SendCmdSeq>
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	8a7a      	ldrh	r2, [r7, #18]
 800247c:	84da      	strh	r2, [r3, #38]	; 0x26
 800247e:	bf00      	nop
 8002480:	2300      	movs	r3, #0
 8002482:	82bb      	strh	r3, [r7, #20]
 8002484:	e02a      	b.n	80024dc <ucg_handle_st7735_l90se+0x120>
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 800248c:	733b      	strb	r3, [r7, #12]
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8002494:	737b      	strb	r3, [r7, #13]
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 800249c:	73bb      	strb	r3, [r7, #14]
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	69dc      	ldr	r4, [r3, #28]
 80024a2:	f107 030c 	add.w	r3, r7, #12
 80024a6:	2201      	movs	r2, #1
 80024a8:	2113      	movs	r1, #19
 80024aa:	6878      	ldr	r0, [r7, #4]
 80024ac:	47a0      	blx	r4
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	3346      	adds	r3, #70	; 0x46
 80024b2:	4618      	mov	r0, r3
 80024b4:	f7ff fe41 	bl	800213a <ucg_ccs_step>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	3346      	adds	r3, #70	; 0x46
 80024bc:	330e      	adds	r3, #14
 80024be:	4618      	mov	r0, r3
 80024c0:	f7ff fe3b 	bl	800213a <ucg_ccs_step>
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	3346      	adds	r3, #70	; 0x46
 80024c8:	331c      	adds	r3, #28
 80024ca:	4618      	mov	r0, r3
 80024cc:	f7ff fe35 	bl	800213a <ucg_ccs_step>
 80024d0:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80024d4:	b29b      	uxth	r3, r3
 80024d6:	3301      	adds	r3, #1
 80024d8:	b29b      	uxth	r3, r3
 80024da:	82bb      	strh	r3, [r7, #20]
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80024e2:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80024e6:	429a      	cmp	r2, r3
 80024e8:	dbcd      	blt.n	8002486 <ucg_handle_st7735_l90se+0xca>
 80024ea:	2101      	movs	r1, #1
 80024ec:	6878      	ldr	r0, [r7, #4]
 80024ee:	f001 fd57 	bl	8003fa0 <ucg_com_SetCSLineStatus>
 80024f2:	2301      	movs	r3, #1
 80024f4:	e000      	b.n	80024f8 <ucg_handle_st7735_l90se+0x13c>
 80024f6:	2300      	movs	r3, #0
 80024f8:	4618      	mov	r0, r3
 80024fa:	371c      	adds	r7, #28
 80024fc:	46bd      	mov	sp, r7
 80024fe:	bd90      	pop	{r4, r7, pc}
 8002500:	08004d98 	.word	0x08004d98
 8002504:	08004db8 	.word	0x08004db8
 8002508:	08004ddc 	.word	0x08004ddc
 800250c:	08004e00 	.word	0x08004e00

08002510 <ucg_dev_ic_st7735_18>:
 8002510:	b590      	push	{r4, r7, lr}
 8002512:	b087      	sub	sp, #28
 8002514:	af00      	add	r7, sp, #0
 8002516:	60f8      	str	r0, [r7, #12]
 8002518:	460b      	mov	r3, r1
 800251a:	607a      	str	r2, [r7, #4]
 800251c:	817b      	strh	r3, [r7, #10]
 800251e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002522:	3b0a      	subs	r3, #10
 8002524:	2b0b      	cmp	r3, #11
 8002526:	d85f      	bhi.n	80025e8 <ucg_dev_ic_st7735_18+0xd8>
 8002528:	a201      	add	r2, pc, #4	; (adr r2, 8002530 <ucg_dev_ic_st7735_18+0x20>)
 800252a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800252e:	bf00      	nop
 8002530:	08002561 	.word	0x08002561
 8002534:	0800257b 	.word	0x0800257b
 8002538:	080025e9 	.word	0x080025e9
 800253c:	080025e9 	.word	0x080025e9
 8002540:	080025e9 	.word	0x080025e9
 8002544:	08002587 	.word	0x08002587
 8002548:	080025e9 	.word	0x080025e9
 800254c:	080025e9 	.word	0x080025e9
 8002550:	080025e9 	.word	0x080025e9
 8002554:	080025e9 	.word	0x080025e9
 8002558:	08002597 	.word	0x08002597
 800255c:	080025df 	.word	0x080025df
 8002560:	68fb      	ldr	r3, [r7, #12]
 8002562:	2202      	movs	r2, #2
 8002564:	841a      	strh	r2, [r3, #32]
 8002566:	68fb      	ldr	r3, [r7, #12]
 8002568:	2201      	movs	r2, #1
 800256a:	845a      	strh	r2, [r3, #34]	; 0x22
 800256c:	2242      	movs	r2, #66	; 0x42
 800256e:	2164      	movs	r1, #100	; 0x64
 8002570:	68f8      	ldr	r0, [r7, #12]
 8002572:	f001 fc64 	bl	8003e3e <ucg_com_PowerUp>
 8002576:	4603      	mov	r3, r0
 8002578:	e03e      	b.n	80025f8 <ucg_dev_ic_st7735_18+0xe8>
 800257a:	4921      	ldr	r1, [pc, #132]	; (8002600 <ucg_dev_ic_st7735_18+0xf0>)
 800257c:	68f8      	ldr	r0, [r7, #12]
 800257e:	f001 fdc3 	bl	8004108 <ucg_com_SendCmdSeq>
 8002582:	2301      	movs	r3, #1
 8002584:	e038      	b.n	80025f8 <ucg_dev_ic_st7735_18+0xe8>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	2280      	movs	r2, #128	; 0x80
 800258a:	801a      	strh	r2, [r3, #0]
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	2280      	movs	r2, #128	; 0x80
 8002590:	805a      	strh	r2, [r3, #2]
 8002592:	2301      	movs	r3, #1
 8002594:	e030      	b.n	80025f8 <ucg_dev_ic_st7735_18+0xe8>
 8002596:	68f8      	ldr	r0, [r7, #12]
 8002598:	f001 fa6f 	bl	8003a7a <ucg_clip_is_pixel_visible>
 800259c:	4603      	mov	r3, r0
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d01b      	beq.n	80025da <ucg_dev_ic_st7735_18+0xca>
 80025a2:	4918      	ldr	r1, [pc, #96]	; (8002604 <ucg_dev_ic_st7735_18+0xf4>)
 80025a4:	68f8      	ldr	r0, [r7, #12]
 80025a6:	f001 fdaf 	bl	8004108 <ucg_com_SendCmdSeq>
 80025aa:	68fb      	ldr	r3, [r7, #12]
 80025ac:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80025b0:	753b      	strb	r3, [r7, #20]
 80025b2:	68fb      	ldr	r3, [r7, #12]
 80025b4:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80025b8:	757b      	strb	r3, [r7, #21]
 80025ba:	68fb      	ldr	r3, [r7, #12]
 80025bc:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80025c0:	75bb      	strb	r3, [r7, #22]
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	69dc      	ldr	r4, [r3, #28]
 80025c6:	f107 0314 	add.w	r3, r7, #20
 80025ca:	2201      	movs	r2, #1
 80025cc:	2113      	movs	r1, #19
 80025ce:	68f8      	ldr	r0, [r7, #12]
 80025d0:	47a0      	blx	r4
 80025d2:	2101      	movs	r1, #1
 80025d4:	68f8      	ldr	r0, [r7, #12]
 80025d6:	f001 fce3 	bl	8003fa0 <ucg_com_SetCSLineStatus>
 80025da:	2301      	movs	r3, #1
 80025dc:	e00c      	b.n	80025f8 <ucg_dev_ic_st7735_18+0xe8>
 80025de:	68f8      	ldr	r0, [r7, #12]
 80025e0:	f7ff fe80 	bl	80022e4 <ucg_handle_st7735_l90fx>
 80025e4:	2301      	movs	r3, #1
 80025e6:	e007      	b.n	80025f8 <ucg_dev_ic_st7735_18+0xe8>
 80025e8:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80025ec:	687a      	ldr	r2, [r7, #4]
 80025ee:	4619      	mov	r1, r3
 80025f0:	68f8      	ldr	r0, [r7, #12]
 80025f2:	f7ff fe47 	bl	8002284 <ucg_dev_default_cb>
 80025f6:	4603      	mov	r3, r0
 80025f8:	4618      	mov	r0, r3
 80025fa:	371c      	adds	r7, #28
 80025fc:	46bd      	mov	sp, r7
 80025fe:	bd90      	pop	{r4, r7, pc}
 8002600:	08004e24 	.word	0x08004e24
 8002604:	08004d78 	.word	0x08004d78

08002608 <ucg_ext_st7735_18>:
 8002608:	b580      	push	{r7, lr}
 800260a:	b084      	sub	sp, #16
 800260c:	af00      	add	r7, sp, #0
 800260e:	60f8      	str	r0, [r7, #12]
 8002610:	460b      	mov	r3, r1
 8002612:	607a      	str	r2, [r7, #4]
 8002614:	817b      	strh	r3, [r7, #10]
 8002616:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800261a:	2b17      	cmp	r3, #23
 800261c:	d103      	bne.n	8002626 <ucg_ext_st7735_18+0x1e>
 800261e:	68f8      	ldr	r0, [r7, #12]
 8002620:	f7ff fecc 	bl	80023bc <ucg_handle_st7735_l90se>
 8002624:	bf00      	nop
 8002626:	2301      	movs	r3, #1
 8002628:	4618      	mov	r0, r3
 800262a:	3710      	adds	r7, #16
 800262c:	46bd      	mov	sp, r7
 800262e:	bd80      	pop	{r7, pc}

08002630 <ucg_PowerDown>:
 8002630:	b580      	push	{r7, lr}
 8002632:	b082      	sub	sp, #8
 8002634:	af00      	add	r7, sp, #0
 8002636:	6078      	str	r0, [r7, #4]
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	781b      	ldrb	r3, [r3, #0]
 800263c:	f003 0301 	and.w	r3, r3, #1
 8002640:	b2db      	uxtb	r3, r3
 8002642:	2b00      	cmp	r3, #0
 8002644:	d00a      	beq.n	800265c <ucg_PowerDown+0x2c>
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	689b      	ldr	r3, [r3, #8]
 800264a:	2200      	movs	r2, #0
 800264c:	210b      	movs	r1, #11
 800264e:	6878      	ldr	r0, [r7, #4]
 8002650:	4798      	blx	r3
 8002652:	687a      	ldr	r2, [r7, #4]
 8002654:	7813      	ldrb	r3, [r2, #0]
 8002656:	f36f 0300 	bfc	r3, #0, #1
 800265a:	7013      	strb	r3, [r2, #0]
 800265c:	bf00      	nop
 800265e:	3708      	adds	r7, #8
 8002660:	46bd      	mov	sp, r7
 8002662:	bd80      	pop	{r7, pc}

08002664 <ucg_PowerUp>:
 8002664:	b580      	push	{r7, lr}
 8002666:	b084      	sub	sp, #16
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
 800266c:	6878      	ldr	r0, [r7, #4]
 800266e:	f7ff ffdf 	bl	8002630 <ucg_PowerDown>
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	689b      	ldr	r3, [r3, #8]
 8002676:	2200      	movs	r2, #0
 8002678:	210a      	movs	r1, #10
 800267a:	6878      	ldr	r0, [r7, #4]
 800267c:	4798      	blx	r3
 800267e:	4603      	mov	r3, r0
 8002680:	81fb      	strh	r3, [r7, #14]
 8002682:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002686:	2b00      	cmp	r3, #0
 8002688:	d004      	beq.n	8002694 <ucg_PowerUp+0x30>
 800268a:	687a      	ldr	r2, [r7, #4]
 800268c:	7813      	ldrb	r3, [r2, #0]
 800268e:	f043 0301 	orr.w	r3, r3, #1
 8002692:	7013      	strb	r3, [r2, #0]
 8002694:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002698:	4618      	mov	r0, r3
 800269a:	3710      	adds	r7, #16
 800269c:	46bd      	mov	sp, r7
 800269e:	bd80      	pop	{r7, pc}

080026a0 <ucg_SetClipBox>:
 80026a0:	b580      	push	{r7, lr}
 80026a2:	b082      	sub	sp, #8
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	6078      	str	r0, [r7, #4]
 80026a8:	6039      	str	r1, [r7, #0]
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	689b      	ldr	r3, [r3, #8]
 80026ae:	683a      	ldr	r2, [r7, #0]
 80026b0:	210c      	movs	r1, #12
 80026b2:	6878      	ldr	r0, [r7, #4]
 80026b4:	4798      	blx	r3
 80026b6:	bf00      	nop
 80026b8:	3708      	adds	r7, #8
 80026ba:	46bd      	mov	sp, r7
 80026bc:	bd80      	pop	{r7, pc}

080026be <ucg_SetMaxClipRange>:
 80026be:	b580      	push	{r7, lr}
 80026c0:	b084      	sub	sp, #16
 80026c2:	af00      	add	r7, sp, #0
 80026c4:	6078      	str	r0, [r7, #4]
 80026c6:	687a      	ldr	r2, [r7, #4]
 80026c8:	f107 030c 	add.w	r3, r7, #12
 80026cc:	3202      	adds	r2, #2
 80026ce:	6810      	ldr	r0, [r2, #0]
 80026d0:	6018      	str	r0, [r3, #0]
 80026d2:	2300      	movs	r3, #0
 80026d4:	813b      	strh	r3, [r7, #8]
 80026d6:	2300      	movs	r3, #0
 80026d8:	817b      	strh	r3, [r7, #10]
 80026da:	f107 0308 	add.w	r3, r7, #8
 80026de:	4619      	mov	r1, r3
 80026e0:	6878      	ldr	r0, [r7, #4]
 80026e2:	f7ff ffdd 	bl	80026a0 <ucg_SetClipBox>
 80026e6:	bf00      	nop
 80026e8:	3710      	adds	r7, #16
 80026ea:	46bd      	mov	sp, r7
 80026ec:	bd80      	pop	{r7, pc}

080026ee <ucg_GetDimension>:
 80026ee:	b580      	push	{r7, lr}
 80026f0:	b082      	sub	sp, #8
 80026f2:	af00      	add	r7, sp, #0
 80026f4:	6078      	str	r0, [r7, #4]
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	689b      	ldr	r3, [r3, #8]
 80026fa:	687a      	ldr	r2, [r7, #4]
 80026fc:	3202      	adds	r2, #2
 80026fe:	210f      	movs	r1, #15
 8002700:	6878      	ldr	r0, [r7, #4]
 8002702:	4798      	blx	r3
 8002704:	6878      	ldr	r0, [r7, #4]
 8002706:	f7ff ffda 	bl	80026be <ucg_SetMaxClipRange>
 800270a:	bf00      	nop
 800270c:	3708      	adds	r7, #8
 800270e:	46bd      	mov	sp, r7
 8002710:	bd80      	pop	{r7, pc}

08002712 <ucg_DrawL90FXWithArg>:
 8002712:	b580      	push	{r7, lr}
 8002714:	b082      	sub	sp, #8
 8002716:	af00      	add	r7, sp, #0
 8002718:	6078      	str	r0, [r7, #4]
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	689b      	ldr	r3, [r3, #8]
 800271e:	687a      	ldr	r2, [r7, #4]
 8002720:	3224      	adds	r2, #36	; 0x24
 8002722:	2115      	movs	r1, #21
 8002724:	6878      	ldr	r0, [r7, #4]
 8002726:	4798      	blx	r3
 8002728:	bf00      	nop
 800272a:	3708      	adds	r7, #8
 800272c:	46bd      	mov	sp, r7
 800272e:	bd80      	pop	{r7, pc}

08002730 <ucg_dev_st7735_18x128x128>:
 8002730:	b580      	push	{r7, lr}
 8002732:	b084      	sub	sp, #16
 8002734:	af00      	add	r7, sp, #0
 8002736:	60f8      	str	r0, [r7, #12]
 8002738:	460b      	mov	r3, r1
 800273a:	607a      	str	r2, [r7, #4]
 800273c:	817b      	strh	r3, [r7, #10]
 800273e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002742:	2b0b      	cmp	r3, #11
 8002744:	d015      	beq.n	8002772 <ucg_dev_st7735_18x128x128+0x42>
 8002746:	2b0f      	cmp	r3, #15
 8002748:	d01c      	beq.n	8002784 <ucg_dev_st7735_18x128x128+0x54>
 800274a:	2b0a      	cmp	r3, #10
 800274c:	d122      	bne.n	8002794 <ucg_dev_st7735_18x128x128+0x64>
 800274e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002752:	687a      	ldr	r2, [r7, #4]
 8002754:	4619      	mov	r1, r3
 8002756:	68f8      	ldr	r0, [r7, #12]
 8002758:	f7ff feda 	bl	8002510 <ucg_dev_ic_st7735_18>
 800275c:	4603      	mov	r3, r0
 800275e:	2b00      	cmp	r3, #0
 8002760:	d101      	bne.n	8002766 <ucg_dev_st7735_18x128x128+0x36>
 8002762:	2300      	movs	r3, #0
 8002764:	e01e      	b.n	80027a4 <ucg_dev_st7735_18x128x128+0x74>
 8002766:	4911      	ldr	r1, [pc, #68]	; (80027ac <ucg_dev_st7735_18x128x128+0x7c>)
 8002768:	68f8      	ldr	r0, [r7, #12]
 800276a:	f001 fccd 	bl	8004108 <ucg_com_SendCmdSeq>
 800276e:	2301      	movs	r3, #1
 8002770:	e018      	b.n	80027a4 <ucg_dev_st7735_18x128x128+0x74>
 8002772:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002776:	687a      	ldr	r2, [r7, #4]
 8002778:	4619      	mov	r1, r3
 800277a:	68f8      	ldr	r0, [r7, #12]
 800277c:	f7ff fec8 	bl	8002510 <ucg_dev_ic_st7735_18>
 8002780:	4603      	mov	r3, r0
 8002782:	e00f      	b.n	80027a4 <ucg_dev_st7735_18x128x128+0x74>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	2280      	movs	r2, #128	; 0x80
 8002788:	801a      	strh	r2, [r3, #0]
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	2280      	movs	r2, #128	; 0x80
 800278e:	805a      	strh	r2, [r3, #2]
 8002790:	2301      	movs	r3, #1
 8002792:	e007      	b.n	80027a4 <ucg_dev_st7735_18x128x128+0x74>
 8002794:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002798:	687a      	ldr	r2, [r7, #4]
 800279a:	4619      	mov	r1, r3
 800279c:	68f8      	ldr	r0, [r7, #12]
 800279e:	f7ff feb7 	bl	8002510 <ucg_dev_ic_st7735_18>
 80027a2:	4603      	mov	r3, r0
 80027a4:	4618      	mov	r0, r3
 80027a6:	3710      	adds	r7, #16
 80027a8:	46bd      	mov	sp, r7
 80027aa:	bd80      	pop	{r7, pc}
 80027ac:	08004e2c 	.word	0x08004e2c

080027b0 <ucg_font_get_byte>:
 80027b0:	b480      	push	{r7}
 80027b2:	b083      	sub	sp, #12
 80027b4:	af00      	add	r7, sp, #0
 80027b6:	6078      	str	r0, [r7, #4]
 80027b8:	460b      	mov	r3, r1
 80027ba:	70fb      	strb	r3, [r7, #3]
 80027bc:	78fb      	ldrb	r3, [r7, #3]
 80027be:	687a      	ldr	r2, [r7, #4]
 80027c0:	4413      	add	r3, r2
 80027c2:	607b      	str	r3, [r7, #4]
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	781b      	ldrb	r3, [r3, #0]
 80027c8:	4618      	mov	r0, r3
 80027ca:	370c      	adds	r7, #12
 80027cc:	46bd      	mov	sp, r7
 80027ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d2:	4770      	bx	lr

080027d4 <ucg_font_get_word>:
 80027d4:	b480      	push	{r7}
 80027d6:	b085      	sub	sp, #20
 80027d8:	af00      	add	r7, sp, #0
 80027da:	6078      	str	r0, [r7, #4]
 80027dc:	460b      	mov	r3, r1
 80027de:	70fb      	strb	r3, [r7, #3]
 80027e0:	78fb      	ldrb	r3, [r7, #3]
 80027e2:	687a      	ldr	r2, [r7, #4]
 80027e4:	4413      	add	r3, r2
 80027e6:	607b      	str	r3, [r7, #4]
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	781b      	ldrb	r3, [r3, #0]
 80027ec:	81fb      	strh	r3, [r7, #14]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	3301      	adds	r3, #1
 80027f2:	607b      	str	r3, [r7, #4]
 80027f4:	89fb      	ldrh	r3, [r7, #14]
 80027f6:	021b      	lsls	r3, r3, #8
 80027f8:	81fb      	strh	r3, [r7, #14]
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	781b      	ldrb	r3, [r3, #0]
 80027fe:	b29a      	uxth	r2, r3
 8002800:	89fb      	ldrh	r3, [r7, #14]
 8002802:	4413      	add	r3, r2
 8002804:	81fb      	strh	r3, [r7, #14]
 8002806:	89fb      	ldrh	r3, [r7, #14]
 8002808:	4618      	mov	r0, r3
 800280a:	3714      	adds	r7, #20
 800280c:	46bd      	mov	sp, r7
 800280e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002812:	4770      	bx	lr

08002814 <ucg_read_font_info>:
 8002814:	b580      	push	{r7, lr}
 8002816:	b082      	sub	sp, #8
 8002818:	af00      	add	r7, sp, #0
 800281a:	6078      	str	r0, [r7, #4]
 800281c:	6039      	str	r1, [r7, #0]
 800281e:	2100      	movs	r1, #0
 8002820:	6838      	ldr	r0, [r7, #0]
 8002822:	f7ff ffc5 	bl	80027b0 <ucg_font_get_byte>
 8002826:	4603      	mov	r3, r0
 8002828:	461a      	mov	r2, r3
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	701a      	strb	r2, [r3, #0]
 800282e:	2101      	movs	r1, #1
 8002830:	6838      	ldr	r0, [r7, #0]
 8002832:	f7ff ffbd 	bl	80027b0 <ucg_font_get_byte>
 8002836:	4603      	mov	r3, r0
 8002838:	461a      	mov	r2, r3
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	705a      	strb	r2, [r3, #1]
 800283e:	2102      	movs	r1, #2
 8002840:	6838      	ldr	r0, [r7, #0]
 8002842:	f7ff ffb5 	bl	80027b0 <ucg_font_get_byte>
 8002846:	4603      	mov	r3, r0
 8002848:	461a      	mov	r2, r3
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	709a      	strb	r2, [r3, #2]
 800284e:	2103      	movs	r1, #3
 8002850:	6838      	ldr	r0, [r7, #0]
 8002852:	f7ff ffad 	bl	80027b0 <ucg_font_get_byte>
 8002856:	4603      	mov	r3, r0
 8002858:	461a      	mov	r2, r3
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	70da      	strb	r2, [r3, #3]
 800285e:	2104      	movs	r1, #4
 8002860:	6838      	ldr	r0, [r7, #0]
 8002862:	f7ff ffa5 	bl	80027b0 <ucg_font_get_byte>
 8002866:	4603      	mov	r3, r0
 8002868:	461a      	mov	r2, r3
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	711a      	strb	r2, [r3, #4]
 800286e:	2105      	movs	r1, #5
 8002870:	6838      	ldr	r0, [r7, #0]
 8002872:	f7ff ff9d 	bl	80027b0 <ucg_font_get_byte>
 8002876:	4603      	mov	r3, r0
 8002878:	461a      	mov	r2, r3
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	715a      	strb	r2, [r3, #5]
 800287e:	2106      	movs	r1, #6
 8002880:	6838      	ldr	r0, [r7, #0]
 8002882:	f7ff ff95 	bl	80027b0 <ucg_font_get_byte>
 8002886:	4603      	mov	r3, r0
 8002888:	461a      	mov	r2, r3
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	719a      	strb	r2, [r3, #6]
 800288e:	2107      	movs	r1, #7
 8002890:	6838      	ldr	r0, [r7, #0]
 8002892:	f7ff ff8d 	bl	80027b0 <ucg_font_get_byte>
 8002896:	4603      	mov	r3, r0
 8002898:	461a      	mov	r2, r3
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	71da      	strb	r2, [r3, #7]
 800289e:	2108      	movs	r1, #8
 80028a0:	6838      	ldr	r0, [r7, #0]
 80028a2:	f7ff ff85 	bl	80027b0 <ucg_font_get_byte>
 80028a6:	4603      	mov	r3, r0
 80028a8:	461a      	mov	r2, r3
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	721a      	strb	r2, [r3, #8]
 80028ae:	2109      	movs	r1, #9
 80028b0:	6838      	ldr	r0, [r7, #0]
 80028b2:	f7ff ff7d 	bl	80027b0 <ucg_font_get_byte>
 80028b6:	4603      	mov	r3, r0
 80028b8:	b25a      	sxtb	r2, r3
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	725a      	strb	r2, [r3, #9]
 80028be:	210a      	movs	r1, #10
 80028c0:	6838      	ldr	r0, [r7, #0]
 80028c2:	f7ff ff75 	bl	80027b0 <ucg_font_get_byte>
 80028c6:	4603      	mov	r3, r0
 80028c8:	b25a      	sxtb	r2, r3
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	729a      	strb	r2, [r3, #10]
 80028ce:	210b      	movs	r1, #11
 80028d0:	6838      	ldr	r0, [r7, #0]
 80028d2:	f7ff ff6d 	bl	80027b0 <ucg_font_get_byte>
 80028d6:	4603      	mov	r3, r0
 80028d8:	b25a      	sxtb	r2, r3
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	72da      	strb	r2, [r3, #11]
 80028de:	210c      	movs	r1, #12
 80028e0:	6838      	ldr	r0, [r7, #0]
 80028e2:	f7ff ff65 	bl	80027b0 <ucg_font_get_byte>
 80028e6:	4603      	mov	r3, r0
 80028e8:	b25a      	sxtb	r2, r3
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	731a      	strb	r2, [r3, #12]
 80028ee:	210d      	movs	r1, #13
 80028f0:	6838      	ldr	r0, [r7, #0]
 80028f2:	f7ff ff5d 	bl	80027b0 <ucg_font_get_byte>
 80028f6:	4603      	mov	r3, r0
 80028f8:	b25a      	sxtb	r2, r3
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	735a      	strb	r2, [r3, #13]
 80028fe:	210e      	movs	r1, #14
 8002900:	6838      	ldr	r0, [r7, #0]
 8002902:	f7ff ff55 	bl	80027b0 <ucg_font_get_byte>
 8002906:	4603      	mov	r3, r0
 8002908:	b25a      	sxtb	r2, r3
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	739a      	strb	r2, [r3, #14]
 800290e:	210f      	movs	r1, #15
 8002910:	6838      	ldr	r0, [r7, #0]
 8002912:	f7ff ff4d 	bl	80027b0 <ucg_font_get_byte>
 8002916:	4603      	mov	r3, r0
 8002918:	b25a      	sxtb	r2, r3
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	73da      	strb	r2, [r3, #15]
 800291e:	2110      	movs	r1, #16
 8002920:	6838      	ldr	r0, [r7, #0]
 8002922:	f7ff ff45 	bl	80027b0 <ucg_font_get_byte>
 8002926:	4603      	mov	r3, r0
 8002928:	b25a      	sxtb	r2, r3
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	741a      	strb	r2, [r3, #16]
 800292e:	2111      	movs	r1, #17
 8002930:	6838      	ldr	r0, [r7, #0]
 8002932:	f7ff ff4f 	bl	80027d4 <ucg_font_get_word>
 8002936:	4603      	mov	r3, r0
 8002938:	461a      	mov	r2, r3
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	825a      	strh	r2, [r3, #18]
 800293e:	2113      	movs	r1, #19
 8002940:	6838      	ldr	r0, [r7, #0]
 8002942:	f7ff ff47 	bl	80027d4 <ucg_font_get_word>
 8002946:	4603      	mov	r3, r0
 8002948:	461a      	mov	r2, r3
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	829a      	strh	r2, [r3, #20]
 800294e:	bf00      	nop
 8002950:	3708      	adds	r7, #8
 8002952:	46bd      	mov	sp, r7
 8002954:	bd80      	pop	{r7, pc}

08002956 <ucg_font_decode_get_unsigned_bits>:
 8002956:	b480      	push	{r7}
 8002958:	b085      	sub	sp, #20
 800295a:	af00      	add	r7, sp, #0
 800295c:	6078      	str	r0, [r7, #4]
 800295e:	460b      	mov	r3, r1
 8002960:	70fb      	strb	r3, [r7, #3]
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	7b1b      	ldrb	r3, [r3, #12]
 8002966:	737b      	strb	r3, [r7, #13]
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	781b      	ldrb	r3, [r3, #0]
 800296e:	73fb      	strb	r3, [r7, #15]
 8002970:	7bfa      	ldrb	r2, [r7, #15]
 8002972:	7b7b      	ldrb	r3, [r7, #13]
 8002974:	fa42 f303 	asr.w	r3, r2, r3
 8002978:	73fb      	strb	r3, [r7, #15]
 800297a:	7b7b      	ldrb	r3, [r7, #13]
 800297c:	73bb      	strb	r3, [r7, #14]
 800297e:	7bba      	ldrb	r2, [r7, #14]
 8002980:	78fb      	ldrb	r3, [r7, #3]
 8002982:	4413      	add	r3, r2
 8002984:	73bb      	strb	r3, [r7, #14]
 8002986:	7bbb      	ldrb	r3, [r7, #14]
 8002988:	2b07      	cmp	r3, #7
 800298a:	d91a      	bls.n	80029c2 <ucg_font_decode_get_unsigned_bits+0x6c>
 800298c:	2308      	movs	r3, #8
 800298e:	733b      	strb	r3, [r7, #12]
 8002990:	7b3a      	ldrb	r2, [r7, #12]
 8002992:	7b7b      	ldrb	r3, [r7, #13]
 8002994:	1ad3      	subs	r3, r2, r3
 8002996:	733b      	strb	r3, [r7, #12]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	1c5a      	adds	r2, r3, #1
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	601a      	str	r2, [r3, #0]
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	681b      	ldr	r3, [r3, #0]
 80029a6:	781b      	ldrb	r3, [r3, #0]
 80029a8:	461a      	mov	r2, r3
 80029aa:	7b3b      	ldrb	r3, [r7, #12]
 80029ac:	fa02 f303 	lsl.w	r3, r2, r3
 80029b0:	b25a      	sxtb	r2, r3
 80029b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80029b6:	4313      	orrs	r3, r2
 80029b8:	b25b      	sxtb	r3, r3
 80029ba:	73fb      	strb	r3, [r7, #15]
 80029bc:	7bbb      	ldrb	r3, [r7, #14]
 80029be:	3b08      	subs	r3, #8
 80029c0:	73bb      	strb	r3, [r7, #14]
 80029c2:	78fb      	ldrb	r3, [r7, #3]
 80029c4:	f04f 32ff 	mov.w	r2, #4294967295
 80029c8:	fa02 f303 	lsl.w	r3, r2, r3
 80029cc:	b2db      	uxtb	r3, r3
 80029ce:	43db      	mvns	r3, r3
 80029d0:	b2da      	uxtb	r2, r3
 80029d2:	7bfb      	ldrb	r3, [r7, #15]
 80029d4:	4013      	ands	r3, r2
 80029d6:	73fb      	strb	r3, [r7, #15]
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	7bba      	ldrb	r2, [r7, #14]
 80029dc:	731a      	strb	r2, [r3, #12]
 80029de:	7bfb      	ldrb	r3, [r7, #15]
 80029e0:	4618      	mov	r0, r3
 80029e2:	3714      	adds	r7, #20
 80029e4:	46bd      	mov	sp, r7
 80029e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ea:	4770      	bx	lr

080029ec <ucg_font_decode_get_signed_bits>:
 80029ec:	b580      	push	{r7, lr}
 80029ee:	b084      	sub	sp, #16
 80029f0:	af00      	add	r7, sp, #0
 80029f2:	6078      	str	r0, [r7, #4]
 80029f4:	460b      	mov	r3, r1
 80029f6:	70fb      	strb	r3, [r7, #3]
 80029f8:	78fb      	ldrb	r3, [r7, #3]
 80029fa:	4619      	mov	r1, r3
 80029fc:	6878      	ldr	r0, [r7, #4]
 80029fe:	f7ff ffaa 	bl	8002956 <ucg_font_decode_get_unsigned_bits>
 8002a02:	4603      	mov	r3, r0
 8002a04:	73fb      	strb	r3, [r7, #15]
 8002a06:	2301      	movs	r3, #1
 8002a08:	73bb      	strb	r3, [r7, #14]
 8002a0a:	78fb      	ldrb	r3, [r7, #3]
 8002a0c:	3b01      	subs	r3, #1
 8002a0e:	70fb      	strb	r3, [r7, #3]
 8002a10:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8002a14:	78fb      	ldrb	r3, [r7, #3]
 8002a16:	fa02 f303 	lsl.w	r3, r2, r3
 8002a1a:	73bb      	strb	r3, [r7, #14]
 8002a1c:	7bfa      	ldrb	r2, [r7, #15]
 8002a1e:	7bbb      	ldrb	r3, [r7, #14]
 8002a20:	1ad3      	subs	r3, r2, r3
 8002a22:	b2db      	uxtb	r3, r3
 8002a24:	73fb      	strb	r3, [r7, #15]
 8002a26:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002a2a:	4618      	mov	r0, r3
 8002a2c:	3710      	adds	r7, #16
 8002a2e:	46bd      	mov	sp, r7
 8002a30:	bd80      	pop	{r7, pc}

08002a32 <ucg_add_vector_y>:
 8002a32:	b490      	push	{r4, r7}
 8002a34:	b082      	sub	sp, #8
 8002a36:	af00      	add	r7, sp, #0
 8002a38:	4604      	mov	r4, r0
 8002a3a:	4608      	mov	r0, r1
 8002a3c:	4611      	mov	r1, r2
 8002a3e:	461a      	mov	r2, r3
 8002a40:	4623      	mov	r3, r4
 8002a42:	80fb      	strh	r3, [r7, #6]
 8002a44:	4603      	mov	r3, r0
 8002a46:	717b      	strb	r3, [r7, #5]
 8002a48:	460b      	mov	r3, r1
 8002a4a:	713b      	strb	r3, [r7, #4]
 8002a4c:	4613      	mov	r3, r2
 8002a4e:	70fb      	strb	r3, [r7, #3]
 8002a50:	78fb      	ldrb	r3, [r7, #3]
 8002a52:	2b01      	cmp	r3, #1
 8002a54:	d00b      	beq.n	8002a6e <ucg_add_vector_y+0x3c>
 8002a56:	2b02      	cmp	r3, #2
 8002a58:	d011      	beq.n	8002a7e <ucg_add_vector_y+0x4c>
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d117      	bne.n	8002a8e <ucg_add_vector_y+0x5c>
 8002a5e:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002a62:	b29a      	uxth	r2, r3
 8002a64:	88fb      	ldrh	r3, [r7, #6]
 8002a66:	4413      	add	r3, r2
 8002a68:	b29b      	uxth	r3, r3
 8002a6a:	80fb      	strh	r3, [r7, #6]
 8002a6c:	e017      	b.n	8002a9e <ucg_add_vector_y+0x6c>
 8002a6e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002a72:	b29a      	uxth	r2, r3
 8002a74:	88fb      	ldrh	r3, [r7, #6]
 8002a76:	4413      	add	r3, r2
 8002a78:	b29b      	uxth	r3, r3
 8002a7a:	80fb      	strh	r3, [r7, #6]
 8002a7c:	e00f      	b.n	8002a9e <ucg_add_vector_y+0x6c>
 8002a7e:	88fa      	ldrh	r2, [r7, #6]
 8002a80:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002a84:	b29b      	uxth	r3, r3
 8002a86:	1ad3      	subs	r3, r2, r3
 8002a88:	b29b      	uxth	r3, r3
 8002a8a:	80fb      	strh	r3, [r7, #6]
 8002a8c:	e007      	b.n	8002a9e <ucg_add_vector_y+0x6c>
 8002a8e:	88fa      	ldrh	r2, [r7, #6]
 8002a90:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002a94:	b29b      	uxth	r3, r3
 8002a96:	1ad3      	subs	r3, r2, r3
 8002a98:	b29b      	uxth	r3, r3
 8002a9a:	80fb      	strh	r3, [r7, #6]
 8002a9c:	bf00      	nop
 8002a9e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002aa2:	4618      	mov	r0, r3
 8002aa4:	3708      	adds	r7, #8
 8002aa6:	46bd      	mov	sp, r7
 8002aa8:	bc90      	pop	{r4, r7}
 8002aaa:	4770      	bx	lr

08002aac <ucg_add_vector_x>:
 8002aac:	b490      	push	{r4, r7}
 8002aae:	b082      	sub	sp, #8
 8002ab0:	af00      	add	r7, sp, #0
 8002ab2:	4604      	mov	r4, r0
 8002ab4:	4608      	mov	r0, r1
 8002ab6:	4611      	mov	r1, r2
 8002ab8:	461a      	mov	r2, r3
 8002aba:	4623      	mov	r3, r4
 8002abc:	80fb      	strh	r3, [r7, #6]
 8002abe:	4603      	mov	r3, r0
 8002ac0:	717b      	strb	r3, [r7, #5]
 8002ac2:	460b      	mov	r3, r1
 8002ac4:	713b      	strb	r3, [r7, #4]
 8002ac6:	4613      	mov	r3, r2
 8002ac8:	70fb      	strb	r3, [r7, #3]
 8002aca:	78fb      	ldrb	r3, [r7, #3]
 8002acc:	2b01      	cmp	r3, #1
 8002ace:	d00b      	beq.n	8002ae8 <ucg_add_vector_x+0x3c>
 8002ad0:	2b02      	cmp	r3, #2
 8002ad2:	d011      	beq.n	8002af8 <ucg_add_vector_x+0x4c>
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d117      	bne.n	8002b08 <ucg_add_vector_x+0x5c>
 8002ad8:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002adc:	b29a      	uxth	r2, r3
 8002ade:	88fb      	ldrh	r3, [r7, #6]
 8002ae0:	4413      	add	r3, r2
 8002ae2:	b29b      	uxth	r3, r3
 8002ae4:	80fb      	strh	r3, [r7, #6]
 8002ae6:	e017      	b.n	8002b18 <ucg_add_vector_x+0x6c>
 8002ae8:	88fa      	ldrh	r2, [r7, #6]
 8002aea:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002aee:	b29b      	uxth	r3, r3
 8002af0:	1ad3      	subs	r3, r2, r3
 8002af2:	b29b      	uxth	r3, r3
 8002af4:	80fb      	strh	r3, [r7, #6]
 8002af6:	e00f      	b.n	8002b18 <ucg_add_vector_x+0x6c>
 8002af8:	88fa      	ldrh	r2, [r7, #6]
 8002afa:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002afe:	b29b      	uxth	r3, r3
 8002b00:	1ad3      	subs	r3, r2, r3
 8002b02:	b29b      	uxth	r3, r3
 8002b04:	80fb      	strh	r3, [r7, #6]
 8002b06:	e007      	b.n	8002b18 <ucg_add_vector_x+0x6c>
 8002b08:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002b0c:	b29a      	uxth	r2, r3
 8002b0e:	88fb      	ldrh	r3, [r7, #6]
 8002b10:	4413      	add	r3, r2
 8002b12:	b29b      	uxth	r3, r3
 8002b14:	80fb      	strh	r3, [r7, #6]
 8002b16:	bf00      	nop
 8002b18:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002b1c:	4618      	mov	r0, r3
 8002b1e:	3708      	adds	r7, #8
 8002b20:	46bd      	mov	sp, r7
 8002b22:	bc90      	pop	{r4, r7}
 8002b24:	4770      	bx	lr

08002b26 <ucg_font_decode_len>:
 8002b26:	b590      	push	{r4, r7, lr}
 8002b28:	b089      	sub	sp, #36	; 0x24
 8002b2a:	af02      	add	r7, sp, #8
 8002b2c:	6078      	str	r0, [r7, #4]
 8002b2e:	460b      	mov	r3, r1
 8002b30:	70fb      	strb	r3, [r7, #3]
 8002b32:	4613      	mov	r3, r2
 8002b34:	70bb      	strb	r3, [r7, #2]
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	3380      	adds	r3, #128	; 0x80
 8002b3a:	613b      	str	r3, [r7, #16]
 8002b3c:	78fb      	ldrb	r3, [r7, #3]
 8002b3e:	75fb      	strb	r3, [r7, #23]
 8002b40:	693b      	ldr	r3, [r7, #16]
 8002b42:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8002b46:	757b      	strb	r3, [r7, #21]
 8002b48:	693b      	ldr	r3, [r7, #16]
 8002b4a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8002b4e:	753b      	strb	r3, [r7, #20]
 8002b50:	693b      	ldr	r3, [r7, #16]
 8002b52:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8002b56:	73fb      	strb	r3, [r7, #15]
 8002b58:	7bfa      	ldrb	r2, [r7, #15]
 8002b5a:	7d7b      	ldrb	r3, [r7, #21]
 8002b5c:	1ad3      	subs	r3, r2, r3
 8002b5e:	73fb      	strb	r3, [r7, #15]
 8002b60:	7bfb      	ldrb	r3, [r7, #15]
 8002b62:	75bb      	strb	r3, [r7, #22]
 8002b64:	7dfa      	ldrb	r2, [r7, #23]
 8002b66:	7bfb      	ldrb	r3, [r7, #15]
 8002b68:	429a      	cmp	r2, r3
 8002b6a:	d201      	bcs.n	8002b70 <ucg_font_decode_len+0x4a>
 8002b6c:	7dfb      	ldrb	r3, [r7, #23]
 8002b6e:	75bb      	strb	r3, [r7, #22]
 8002b70:	693b      	ldr	r3, [r7, #16]
 8002b72:	889b      	ldrh	r3, [r3, #4]
 8002b74:	81bb      	strh	r3, [r7, #12]
 8002b76:	693b      	ldr	r3, [r7, #16]
 8002b78:	88db      	ldrh	r3, [r3, #6]
 8002b7a:	817b      	strh	r3, [r7, #10]
 8002b7c:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8002b80:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002b84:	693b      	ldr	r3, [r7, #16]
 8002b86:	7b9b      	ldrb	r3, [r3, #14]
 8002b88:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8002b8c:	f7ff ff8e 	bl	8002aac <ucg_add_vector_x>
 8002b90:	4603      	mov	r3, r0
 8002b92:	81bb      	strh	r3, [r7, #12]
 8002b94:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8002b98:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002b9c:	693b      	ldr	r3, [r7, #16]
 8002b9e:	7b9b      	ldrb	r3, [r3, #14]
 8002ba0:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002ba4:	f7ff ff45 	bl	8002a32 <ucg_add_vector_y>
 8002ba8:	4603      	mov	r3, r0
 8002baa:	817b      	strh	r3, [r7, #10]
 8002bac:	78bb      	ldrb	r3, [r7, #2]
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d011      	beq.n	8002bd6 <ucg_font_decode_len+0xb0>
 8002bb2:	7dbb      	ldrb	r3, [r7, #22]
 8002bb4:	b21c      	sxth	r4, r3
 8002bb6:	693b      	ldr	r3, [r7, #16]
 8002bb8:	7b9b      	ldrb	r3, [r3, #14]
 8002bba:	b21b      	sxth	r3, r3
 8002bbc:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002bc0:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002bc4:	2200      	movs	r2, #0
 8002bc6:	9201      	str	r2, [sp, #4]
 8002bc8:	9300      	str	r3, [sp, #0]
 8002bca:	4623      	mov	r3, r4
 8002bcc:	4602      	mov	r2, r0
 8002bce:	6878      	ldr	r0, [r7, #4]
 8002bd0:	f000 fbc0 	bl	8003354 <ucg_Draw90Line>
 8002bd4:	e014      	b.n	8002c00 <ucg_font_decode_len+0xda>
 8002bd6:	693b      	ldr	r3, [r7, #16]
 8002bd8:	7b5b      	ldrb	r3, [r3, #13]
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d110      	bne.n	8002c00 <ucg_font_decode_len+0xda>
 8002bde:	7dbb      	ldrb	r3, [r7, #22]
 8002be0:	b21c      	sxth	r4, r3
 8002be2:	693b      	ldr	r3, [r7, #16]
 8002be4:	7b9b      	ldrb	r3, [r3, #14]
 8002be6:	b21b      	sxth	r3, r3
 8002be8:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002bec:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002bf0:	2201      	movs	r2, #1
 8002bf2:	9201      	str	r2, [sp, #4]
 8002bf4:	9300      	str	r3, [sp, #0]
 8002bf6:	4623      	mov	r3, r4
 8002bf8:	4602      	mov	r2, r0
 8002bfa:	6878      	ldr	r0, [r7, #4]
 8002bfc:	f000 fbaa 	bl	8003354 <ucg_Draw90Line>
 8002c00:	7dfa      	ldrb	r2, [r7, #23]
 8002c02:	7bfb      	ldrb	r3, [r7, #15]
 8002c04:	429a      	cmp	r2, r3
 8002c06:	d309      	bcc.n	8002c1c <ucg_font_decode_len+0xf6>
 8002c08:	7dfa      	ldrb	r2, [r7, #23]
 8002c0a:	7bfb      	ldrb	r3, [r7, #15]
 8002c0c:	1ad3      	subs	r3, r2, r3
 8002c0e:	75fb      	strb	r3, [r7, #23]
 8002c10:	2300      	movs	r3, #0
 8002c12:	757b      	strb	r3, [r7, #21]
 8002c14:	7d3b      	ldrb	r3, [r7, #20]
 8002c16:	3301      	adds	r3, #1
 8002c18:	753b      	strb	r3, [r7, #20]
 8002c1a:	e799      	b.n	8002b50 <ucg_font_decode_len+0x2a>
 8002c1c:	bf00      	nop
 8002c1e:	7d7a      	ldrb	r2, [r7, #21]
 8002c20:	7dfb      	ldrb	r3, [r7, #23]
 8002c22:	4413      	add	r3, r2
 8002c24:	757b      	strb	r3, [r7, #21]
 8002c26:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8002c2a:	693b      	ldr	r3, [r7, #16]
 8002c2c:	721a      	strb	r2, [r3, #8]
 8002c2e:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002c32:	693b      	ldr	r3, [r7, #16]
 8002c34:	725a      	strb	r2, [r3, #9]
 8002c36:	bf00      	nop
 8002c38:	371c      	adds	r7, #28
 8002c3a:	46bd      	mov	sp, r7
 8002c3c:	bd90      	pop	{r4, r7, pc}

08002c3e <ucg_font_setup_decode>:
 8002c3e:	b580      	push	{r7, lr}
 8002c40:	b084      	sub	sp, #16
 8002c42:	af00      	add	r7, sp, #0
 8002c44:	6078      	str	r0, [r7, #4]
 8002c46:	6039      	str	r1, [r7, #0]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	3380      	adds	r3, #128	; 0x80
 8002c4c:	60fb      	str	r3, [r7, #12]
 8002c4e:	68fb      	ldr	r3, [r7, #12]
 8002c50:	683a      	ldr	r2, [r7, #0]
 8002c52:	601a      	str	r2, [r3, #0]
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	2200      	movs	r2, #0
 8002c58:	731a      	strb	r2, [r3, #12]
 8002c5a:	68fb      	ldr	r3, [r7, #12]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	1c5a      	adds	r2, r3, #1
 8002c60:	68fb      	ldr	r3, [r7, #12]
 8002c62:	601a      	str	r2, [r3, #0]
 8002c64:	68fb      	ldr	r3, [r7, #12]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	1c5a      	adds	r2, r3, #1
 8002c6a:	68fb      	ldr	r3, [r7, #12]
 8002c6c:	601a      	str	r2, [r3, #0]
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8002c74:	4619      	mov	r1, r3
 8002c76:	68f8      	ldr	r0, [r7, #12]
 8002c78:	f7ff fe6d 	bl	8002956 <ucg_font_decode_get_unsigned_bits>
 8002c7c:	4603      	mov	r3, r0
 8002c7e:	b25a      	sxtb	r2, r3
 8002c80:	68fb      	ldr	r3, [r7, #12]
 8002c82:	729a      	strb	r2, [r3, #10]
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 8002c8a:	4619      	mov	r1, r3
 8002c8c:	68f8      	ldr	r0, [r7, #12]
 8002c8e:	f7ff fe62 	bl	8002956 <ucg_font_decode_get_unsigned_bits>
 8002c92:	4603      	mov	r3, r0
 8002c94:	b25a      	sxtb	r2, r3
 8002c96:	68fb      	ldr	r3, [r7, #12]
 8002c98:	72da      	strb	r2, [r3, #11]
 8002c9a:	bf00      	nop
 8002c9c:	3710      	adds	r7, #16
 8002c9e:	46bd      	mov	sp, r7
 8002ca0:	bd80      	pop	{r7, pc}

08002ca2 <ucg_font_decode_glyph>:
 8002ca2:	b580      	push	{r7, lr}
 8002ca4:	b084      	sub	sp, #16
 8002ca6:	af00      	add	r7, sp, #0
 8002ca8:	6078      	str	r0, [r7, #4]
 8002caa:	6039      	str	r1, [r7, #0]
 8002cac:	6839      	ldr	r1, [r7, #0]
 8002cae:	6878      	ldr	r0, [r7, #4]
 8002cb0:	f7ff ffc5 	bl	8002c3e <ucg_font_setup_decode>
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 8002cba:	73fb      	strb	r3, [r7, #15]
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8002cc8:	4619      	mov	r1, r3
 8002cca:	4610      	mov	r0, r2
 8002ccc:	f7ff fe8e 	bl	80029ec <ucg_font_decode_get_signed_bits>
 8002cd0:	4603      	mov	r3, r0
 8002cd2:	73bb      	strb	r3, [r7, #14]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 8002ce0:	4619      	mov	r1, r3
 8002ce2:	4610      	mov	r0, r2
 8002ce4:	f7ff fe82 	bl	80029ec <ucg_font_decode_get_signed_bits>
 8002ce8:	4603      	mov	r3, r0
 8002cea:	737b      	strb	r3, [r7, #13]
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8002cf8:	4619      	mov	r1, r3
 8002cfa:	4610      	mov	r0, r2
 8002cfc:	f7ff fe76 	bl	80029ec <ucg_font_decode_get_signed_bits>
 8002d00:	4603      	mov	r3, r0
 8002d02:	733b      	strb	r3, [r7, #12]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	dd69      	ble.n	8002de2 <ucg_font_decode_glyph+0x140>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8002d14:	7bfa      	ldrb	r2, [r7, #15]
 8002d16:	7b7b      	ldrb	r3, [r7, #13]
 8002d18:	4413      	add	r3, r2
 8002d1a:	b2db      	uxtb	r3, r3
 8002d1c:	425b      	negs	r3, r3
 8002d1e:	b2db      	uxtb	r3, r3
 8002d20:	b25a      	sxtb	r2, r3
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002d28:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002d2c:	f7ff febe 	bl	8002aac <ucg_add_vector_x>
 8002d30:	4603      	mov	r3, r0
 8002d32:	461a      	mov	r2, r3
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 8002d40:	7bfa      	ldrb	r2, [r7, #15]
 8002d42:	7b7b      	ldrb	r3, [r7, #13]
 8002d44:	4413      	add	r3, r2
 8002d46:	b2db      	uxtb	r3, r3
 8002d48:	425b      	negs	r3, r3
 8002d4a:	b2db      	uxtb	r3, r3
 8002d4c:	b25a      	sxtb	r2, r3
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002d54:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002d58:	f7ff fe6b 	bl	8002a32 <ucg_add_vector_y>
 8002d5c:	4603      	mov	r3, r0
 8002d5e:	461a      	mov	r2, r3
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	2200      	movs	r2, #0
 8002d6a:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	2200      	movs	r2, #0
 8002d72:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 8002d82:	4619      	mov	r1, r3
 8002d84:	4610      	mov	r0, r2
 8002d86:	f7ff fde6 	bl	8002956 <ucg_font_decode_get_unsigned_bits>
 8002d8a:	4603      	mov	r3, r0
 8002d8c:	72fb      	strb	r3, [r7, #11]
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8002d9a:	4619      	mov	r1, r3
 8002d9c:	4610      	mov	r0, r2
 8002d9e:	f7ff fdda 	bl	8002956 <ucg_font_decode_get_unsigned_bits>
 8002da2:	4603      	mov	r3, r0
 8002da4:	72bb      	strb	r3, [r7, #10]
 8002da6:	7afb      	ldrb	r3, [r7, #11]
 8002da8:	2200      	movs	r2, #0
 8002daa:	4619      	mov	r1, r3
 8002dac:	6878      	ldr	r0, [r7, #4]
 8002dae:	f7ff feba 	bl	8002b26 <ucg_font_decode_len>
 8002db2:	7abb      	ldrb	r3, [r7, #10]
 8002db4:	2201      	movs	r2, #1
 8002db6:	4619      	mov	r1, r3
 8002db8:	6878      	ldr	r0, [r7, #4]
 8002dba:	f7ff feb4 	bl	8002b26 <ucg_font_decode_len>
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	3380      	adds	r3, #128	; 0x80
 8002dc2:	2101      	movs	r1, #1
 8002dc4:	4618      	mov	r0, r3
 8002dc6:	f7ff fdc6 	bl	8002956 <ucg_font_decode_get_unsigned_bits>
 8002dca:	4603      	mov	r3, r0
 8002dcc:	2b00      	cmp	r3, #0
 8002dce:	d1ea      	bne.n	8002da6 <ucg_font_decode_glyph+0x104>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 8002dd6:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8002dda:	429a      	cmp	r2, r3
 8002ddc:	dd00      	ble.n	8002de0 <ucg_font_decode_glyph+0x13e>
 8002dde:	e7ca      	b.n	8002d76 <ucg_font_decode_glyph+0xd4>
 8002de0:	bf00      	nop
 8002de2:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8002de6:	4618      	mov	r0, r3
 8002de8:	3710      	adds	r7, #16
 8002dea:	46bd      	mov	sp, r7
 8002dec:	bd80      	pop	{r7, pc}

08002dee <ucg_font_get_glyph_data>:
 8002dee:	b480      	push	{r7}
 8002df0:	b085      	sub	sp, #20
 8002df2:	af00      	add	r7, sp, #0
 8002df4:	6078      	str	r0, [r7, #4]
 8002df6:	460b      	mov	r3, r1
 8002df8:	70fb      	strb	r3, [r7, #3]
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002dfe:	60fb      	str	r3, [r7, #12]
 8002e00:	68fb      	ldr	r3, [r7, #12]
 8002e02:	3315      	adds	r3, #21
 8002e04:	60fb      	str	r3, [r7, #12]
 8002e06:	78fb      	ldrb	r3, [r7, #3]
 8002e08:	2b60      	cmp	r3, #96	; 0x60
 8002e0a:	d907      	bls.n	8002e1c <ucg_font_get_glyph_data+0x2e>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 8002e12:	461a      	mov	r2, r3
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	4413      	add	r3, r2
 8002e18:	60fb      	str	r3, [r7, #12]
 8002e1a:	e009      	b.n	8002e30 <ucg_font_get_glyph_data+0x42>
 8002e1c:	78fb      	ldrb	r3, [r7, #3]
 8002e1e:	2b40      	cmp	r3, #64	; 0x40
 8002e20:	d906      	bls.n	8002e30 <ucg_font_get_glyph_data+0x42>
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 8002e28:	461a      	mov	r2, r3
 8002e2a:	68fb      	ldr	r3, [r7, #12]
 8002e2c:	4413      	add	r3, r2
 8002e2e:	60fb      	str	r3, [r7, #12]
 8002e30:	68fb      	ldr	r3, [r7, #12]
 8002e32:	3301      	adds	r3, #1
 8002e34:	781b      	ldrb	r3, [r3, #0]
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d00e      	beq.n	8002e58 <ucg_font_get_glyph_data+0x6a>
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	781b      	ldrb	r3, [r3, #0]
 8002e3e:	78fa      	ldrb	r2, [r7, #3]
 8002e40:	429a      	cmp	r2, r3
 8002e42:	d101      	bne.n	8002e48 <ucg_font_get_glyph_data+0x5a>
 8002e44:	68fb      	ldr	r3, [r7, #12]
 8002e46:	e009      	b.n	8002e5c <ucg_font_get_glyph_data+0x6e>
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	3301      	adds	r3, #1
 8002e4c:	781b      	ldrb	r3, [r3, #0]
 8002e4e:	461a      	mov	r2, r3
 8002e50:	68fb      	ldr	r3, [r7, #12]
 8002e52:	4413      	add	r3, r2
 8002e54:	60fb      	str	r3, [r7, #12]
 8002e56:	e7eb      	b.n	8002e30 <ucg_font_get_glyph_data+0x42>
 8002e58:	bf00      	nop
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	3714      	adds	r7, #20
 8002e60:	46bd      	mov	sp, r7
 8002e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e66:	4770      	bx	lr

08002e68 <ucg_font_draw_glyph>:
 8002e68:	b580      	push	{r7, lr}
 8002e6a:	b086      	sub	sp, #24
 8002e6c:	af00      	add	r7, sp, #0
 8002e6e:	60f8      	str	r0, [r7, #12]
 8002e70:	4608      	mov	r0, r1
 8002e72:	4611      	mov	r1, r2
 8002e74:	461a      	mov	r2, r3
 8002e76:	4603      	mov	r3, r0
 8002e78:	817b      	strh	r3, [r7, #10]
 8002e7a:	460b      	mov	r3, r1
 8002e7c:	813b      	strh	r3, [r7, #8]
 8002e7e:	4613      	mov	r3, r2
 8002e80:	71fb      	strb	r3, [r7, #7]
 8002e82:	2300      	movs	r3, #0
 8002e84:	82fb      	strh	r3, [r7, #22]
 8002e86:	68fb      	ldr	r3, [r7, #12]
 8002e88:	897a      	ldrh	r2, [r7, #10]
 8002e8a:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	893a      	ldrh	r2, [r7, #8]
 8002e92:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8002e96:	68fb      	ldr	r3, [r7, #12]
 8002e98:	79fa      	ldrb	r2, [r7, #7]
 8002e9a:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 8002e9e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002ea2:	4619      	mov	r1, r3
 8002ea4:	68f8      	ldr	r0, [r7, #12]
 8002ea6:	f7ff ffa2 	bl	8002dee <ucg_font_get_glyph_data>
 8002eaa:	6138      	str	r0, [r7, #16]
 8002eac:	693b      	ldr	r3, [r7, #16]
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d005      	beq.n	8002ebe <ucg_font_draw_glyph+0x56>
 8002eb2:	6939      	ldr	r1, [r7, #16]
 8002eb4:	68f8      	ldr	r0, [r7, #12]
 8002eb6:	f7ff fef4 	bl	8002ca2 <ucg_font_decode_glyph>
 8002eba:	4603      	mov	r3, r0
 8002ebc:	82fb      	strh	r3, [r7, #22]
 8002ebe:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	3718      	adds	r7, #24
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	bd80      	pop	{r7, pc}

08002eca <ucg_SetFontMode>:
 8002eca:	b480      	push	{r7}
 8002ecc:	b083      	sub	sp, #12
 8002ece:	af00      	add	r7, sp, #0
 8002ed0:	6078      	str	r0, [r7, #4]
 8002ed2:	460b      	mov	r3, r1
 8002ed4:	70fb      	strb	r3, [r7, #3]
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	78fa      	ldrb	r2, [r7, #3]
 8002eda:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8002ede:	bf00      	nop
 8002ee0:	370c      	adds	r7, #12
 8002ee2:	46bd      	mov	sp, r7
 8002ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ee8:	4770      	bx	lr
	...

08002eec <ucg_DrawGlyph>:
 8002eec:	b580      	push	{r7, lr}
 8002eee:	b086      	sub	sp, #24
 8002ef0:	af02      	add	r7, sp, #8
 8002ef2:	60f8      	str	r0, [r7, #12]
 8002ef4:	4608      	mov	r0, r1
 8002ef6:	4611      	mov	r1, r2
 8002ef8:	461a      	mov	r2, r3
 8002efa:	4603      	mov	r3, r0
 8002efc:	817b      	strh	r3, [r7, #10]
 8002efe:	460b      	mov	r3, r1
 8002f00:	813b      	strh	r3, [r7, #8]
 8002f02:	4613      	mov	r3, r2
 8002f04:	71fb      	strb	r3, [r7, #7]
 8002f06:	79fb      	ldrb	r3, [r7, #7]
 8002f08:	2b03      	cmp	r3, #3
 8002f0a:	d837      	bhi.n	8002f7c <ucg_DrawGlyph+0x90>
 8002f0c:	a201      	add	r2, pc, #4	; (adr r2, 8002f14 <ucg_DrawGlyph+0x28>)
 8002f0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f12:	bf00      	nop
 8002f14:	08002f25 	.word	0x08002f25
 8002f18:	08002f3b 	.word	0x08002f3b
 8002f1c:	08002f51 	.word	0x08002f51
 8002f20:	08002f67 	.word	0x08002f67
 8002f24:	68fb      	ldr	r3, [r7, #12]
 8002f26:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f28:	68f8      	ldr	r0, [r7, #12]
 8002f2a:	4798      	blx	r3
 8002f2c:	4603      	mov	r3, r0
 8002f2e:	b29a      	uxth	r2, r3
 8002f30:	893b      	ldrh	r3, [r7, #8]
 8002f32:	4413      	add	r3, r2
 8002f34:	b29b      	uxth	r3, r3
 8002f36:	813b      	strh	r3, [r7, #8]
 8002f38:	e020      	b.n	8002f7c <ucg_DrawGlyph+0x90>
 8002f3a:	68fb      	ldr	r3, [r7, #12]
 8002f3c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f3e:	68f8      	ldr	r0, [r7, #12]
 8002f40:	4798      	blx	r3
 8002f42:	4603      	mov	r3, r0
 8002f44:	897a      	ldrh	r2, [r7, #10]
 8002f46:	b29b      	uxth	r3, r3
 8002f48:	1ad3      	subs	r3, r2, r3
 8002f4a:	b29b      	uxth	r3, r3
 8002f4c:	817b      	strh	r3, [r7, #10]
 8002f4e:	e015      	b.n	8002f7c <ucg_DrawGlyph+0x90>
 8002f50:	68fb      	ldr	r3, [r7, #12]
 8002f52:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f54:	68f8      	ldr	r0, [r7, #12]
 8002f56:	4798      	blx	r3
 8002f58:	4603      	mov	r3, r0
 8002f5a:	893a      	ldrh	r2, [r7, #8]
 8002f5c:	b29b      	uxth	r3, r3
 8002f5e:	1ad3      	subs	r3, r2, r3
 8002f60:	b29b      	uxth	r3, r3
 8002f62:	813b      	strh	r3, [r7, #8]
 8002f64:	e00a      	b.n	8002f7c <ucg_DrawGlyph+0x90>
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f6a:	68f8      	ldr	r0, [r7, #12]
 8002f6c:	4798      	blx	r3
 8002f6e:	4603      	mov	r3, r0
 8002f70:	b29a      	uxth	r2, r3
 8002f72:	897b      	ldrh	r3, [r7, #10]
 8002f74:	4413      	add	r3, r2
 8002f76:	b29b      	uxth	r3, r3
 8002f78:	817b      	strh	r3, [r7, #10]
 8002f7a:	bf00      	nop
 8002f7c:	79f8      	ldrb	r0, [r7, #7]
 8002f7e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002f82:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002f86:	7e3b      	ldrb	r3, [r7, #24]
 8002f88:	9300      	str	r3, [sp, #0]
 8002f8a:	4603      	mov	r3, r0
 8002f8c:	68f8      	ldr	r0, [r7, #12]
 8002f8e:	f7ff ff6b 	bl	8002e68 <ucg_font_draw_glyph>
 8002f92:	4603      	mov	r3, r0
 8002f94:	4618      	mov	r0, r3
 8002f96:	3710      	adds	r7, #16
 8002f98:	46bd      	mov	sp, r7
 8002f9a:	bd80      	pop	{r7, pc}

08002f9c <task_drawString>:
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	b086      	sub	sp, #24
 8002fa0:	af02      	add	r7, sp, #8
 8002fa2:	6078      	str	r0, [r7, #4]
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	81fb      	strh	r3, [r7, #14]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	60bb      	str	r3, [r7, #8]
 8002fac:	4b45      	ldr	r3, [pc, #276]	; (80030c4 <task_drawString+0x128>)
 8002fae:	781b      	ldrb	r3, [r3, #0]
 8002fb0:	2b00      	cmp	r3, #0
 8002fb2:	d002      	beq.n	8002fba <task_drawString+0x1e>
 8002fb4:	2b01      	cmp	r3, #1
 8002fb6:	d01e      	beq.n	8002ff6 <task_drawString+0x5a>
 8002fb8:	e07b      	b.n	80030b2 <task_drawString+0x116>
 8002fba:	4843      	ldr	r0, [pc, #268]	; (80030c8 <task_drawString+0x12c>)
 8002fbc:	f000 fb5d 	bl	800367a <bufNumItems>
 8002fc0:	4603      	mov	r3, r0
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d007      	beq.n	8002fd6 <task_drawString+0x3a>
 8002fc6:	4941      	ldr	r1, [pc, #260]	; (80030cc <task_drawString+0x130>)
 8002fc8:	483f      	ldr	r0, [pc, #252]	; (80030c8 <task_drawString+0x12c>)
 8002fca:	f000 fbef 	bl	80037ac <bufDeDat>
 8002fce:	4b3d      	ldr	r3, [pc, #244]	; (80030c4 <task_drawString+0x128>)
 8002fd0:	2201      	movs	r2, #1
 8002fd2:	701a      	strb	r2, [r3, #0]
 8002fd4:	e071      	b.n	80030ba <task_drawString+0x11e>
 8002fd6:	4b3e      	ldr	r3, [pc, #248]	; (80030d0 <task_drawString+0x134>)
 8002fd8:	781b      	ldrb	r3, [r3, #0]
 8002fda:	2bff      	cmp	r3, #255	; 0xff
 8002fdc:	d007      	beq.n	8002fee <task_drawString+0x52>
 8002fde:	4b3c      	ldr	r3, [pc, #240]	; (80030d0 <task_drawString+0x134>)
 8002fe0:	781b      	ldrb	r3, [r3, #0]
 8002fe2:	4618      	mov	r0, r3
 8002fe4:	f7fe fcb0 	bl	8001948 <TimerStop>
 8002fe8:	4b39      	ldr	r3, [pc, #228]	; (80030d0 <task_drawString+0x134>)
 8002fea:	22ff      	movs	r2, #255	; 0xff
 8002fec:	701a      	strb	r2, [r3, #0]
 8002fee:	4b35      	ldr	r3, [pc, #212]	; (80030c4 <task_drawString+0x128>)
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	701a      	strb	r2, [r3, #0]
 8002ff4:	e061      	b.n	80030ba <task_drawString+0x11e>
 8002ff6:	4b35      	ldr	r3, [pc, #212]	; (80030cc <task_drawString+0x130>)
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	781b      	ldrb	r3, [r3, #0]
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	d054      	beq.n	80030aa <task_drawString+0x10e>
 8003000:	4b32      	ldr	r3, [pc, #200]	; (80030cc <task_drawString+0x130>)
 8003002:	f9b3 1000 	ldrsh.w	r1, [r3]
 8003006:	4b31      	ldr	r3, [pc, #196]	; (80030cc <task_drawString+0x130>)
 8003008:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800300c:	4b2f      	ldr	r3, [pc, #188]	; (80030cc <task_drawString+0x130>)
 800300e:	7918      	ldrb	r0, [r3, #4]
 8003010:	4b2e      	ldr	r3, [pc, #184]	; (80030cc <task_drawString+0x130>)
 8003012:	689b      	ldr	r3, [r3, #8]
 8003014:	781b      	ldrb	r3, [r3, #0]
 8003016:	9300      	str	r3, [sp, #0]
 8003018:	4603      	mov	r3, r0
 800301a:	68b8      	ldr	r0, [r7, #8]
 800301c:	f7ff ff66 	bl	8002eec <ucg_DrawGlyph>
 8003020:	4603      	mov	r3, r0
 8003022:	81fb      	strh	r3, [r7, #14]
 8003024:	4b29      	ldr	r3, [pc, #164]	; (80030cc <task_drawString+0x130>)
 8003026:	791b      	ldrb	r3, [r3, #4]
 8003028:	2b03      	cmp	r3, #3
 800302a:	d837      	bhi.n	800309c <task_drawString+0x100>
 800302c:	a201      	add	r2, pc, #4	; (adr r2, 8003034 <task_drawString+0x98>)
 800302e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003032:	bf00      	nop
 8003034:	08003045 	.word	0x08003045
 8003038:	0800305b 	.word	0x0800305b
 800303c:	08003071 	.word	0x08003071
 8003040:	08003087 	.word	0x08003087
 8003044:	4b21      	ldr	r3, [pc, #132]	; (80030cc <task_drawString+0x130>)
 8003046:	f9b3 3000 	ldrsh.w	r3, [r3]
 800304a:	b29a      	uxth	r2, r3
 800304c:	89fb      	ldrh	r3, [r7, #14]
 800304e:	4413      	add	r3, r2
 8003050:	b29b      	uxth	r3, r3
 8003052:	b21a      	sxth	r2, r3
 8003054:	4b1d      	ldr	r3, [pc, #116]	; (80030cc <task_drawString+0x130>)
 8003056:	801a      	strh	r2, [r3, #0]
 8003058:	e021      	b.n	800309e <task_drawString+0x102>
 800305a:	4b1c      	ldr	r3, [pc, #112]	; (80030cc <task_drawString+0x130>)
 800305c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003060:	b29a      	uxth	r2, r3
 8003062:	89fb      	ldrh	r3, [r7, #14]
 8003064:	4413      	add	r3, r2
 8003066:	b29b      	uxth	r3, r3
 8003068:	b21a      	sxth	r2, r3
 800306a:	4b18      	ldr	r3, [pc, #96]	; (80030cc <task_drawString+0x130>)
 800306c:	805a      	strh	r2, [r3, #2]
 800306e:	e016      	b.n	800309e <task_drawString+0x102>
 8003070:	4b16      	ldr	r3, [pc, #88]	; (80030cc <task_drawString+0x130>)
 8003072:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003076:	b29a      	uxth	r2, r3
 8003078:	89fb      	ldrh	r3, [r7, #14]
 800307a:	1ad3      	subs	r3, r2, r3
 800307c:	b29b      	uxth	r3, r3
 800307e:	b21a      	sxth	r2, r3
 8003080:	4b12      	ldr	r3, [pc, #72]	; (80030cc <task_drawString+0x130>)
 8003082:	801a      	strh	r2, [r3, #0]
 8003084:	e00b      	b.n	800309e <task_drawString+0x102>
 8003086:	4b11      	ldr	r3, [pc, #68]	; (80030cc <task_drawString+0x130>)
 8003088:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800308c:	b29a      	uxth	r2, r3
 800308e:	89fb      	ldrh	r3, [r7, #14]
 8003090:	1ad3      	subs	r3, r2, r3
 8003092:	b29b      	uxth	r3, r3
 8003094:	b21a      	sxth	r2, r3
 8003096:	4b0d      	ldr	r3, [pc, #52]	; (80030cc <task_drawString+0x130>)
 8003098:	805a      	strh	r2, [r3, #2]
 800309a:	e000      	b.n	800309e <task_drawString+0x102>
 800309c:	bf00      	nop
 800309e:	4b0b      	ldr	r3, [pc, #44]	; (80030cc <task_drawString+0x130>)
 80030a0:	689b      	ldr	r3, [r3, #8]
 80030a2:	3301      	adds	r3, #1
 80030a4:	4a09      	ldr	r2, [pc, #36]	; (80030cc <task_drawString+0x130>)
 80030a6:	6093      	str	r3, [r2, #8]
 80030a8:	e007      	b.n	80030ba <task_drawString+0x11e>
 80030aa:	4b06      	ldr	r3, [pc, #24]	; (80030c4 <task_drawString+0x128>)
 80030ac:	2200      	movs	r2, #0
 80030ae:	701a      	strb	r2, [r3, #0]
 80030b0:	e003      	b.n	80030ba <task_drawString+0x11e>
 80030b2:	4b04      	ldr	r3, [pc, #16]	; (80030c4 <task_drawString+0x128>)
 80030b4:	2200      	movs	r2, #0
 80030b6:	701a      	strb	r2, [r3, #0]
 80030b8:	bf00      	nop
 80030ba:	bf00      	nop
 80030bc:	3710      	adds	r7, #16
 80030be:	46bd      	mov	sp, r7
 80030c0:	bd80      	pop	{r7, pc}
 80030c2:	bf00      	nop
 80030c4:	2000134c 	.word	0x2000134c
 80030c8:	2000033c 	.word	0x2000033c
 80030cc:	20001498 	.word	0x20001498
 80030d0:	20000024 	.word	0x20000024

080030d4 <ucg_DrawString>:
 80030d4:	b580      	push	{r7, lr}
 80030d6:	b08a      	sub	sp, #40	; 0x28
 80030d8:	af02      	add	r7, sp, #8
 80030da:	60f8      	str	r0, [r7, #12]
 80030dc:	4608      	mov	r0, r1
 80030de:	4611      	mov	r1, r2
 80030e0:	461a      	mov	r2, r3
 80030e2:	4603      	mov	r3, r0
 80030e4:	817b      	strh	r3, [r7, #10]
 80030e6:	460b      	mov	r3, r1
 80030e8:	813b      	strh	r3, [r7, #8]
 80030ea:	4613      	mov	r3, r2
 80030ec:	71fb      	strb	r3, [r7, #7]
 80030ee:	2300      	movs	r3, #0
 80030f0:	83fb      	strh	r3, [r7, #30]
 80030f2:	897b      	ldrh	r3, [r7, #10]
 80030f4:	823b      	strh	r3, [r7, #16]
 80030f6:	893b      	ldrh	r3, [r7, #8]
 80030f8:	827b      	strh	r3, [r7, #18]
 80030fa:	79fb      	ldrb	r3, [r7, #7]
 80030fc:	753b      	strb	r3, [r7, #20]
 80030fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003100:	61bb      	str	r3, [r7, #24]
 8003102:	f107 0310 	add.w	r3, r7, #16
 8003106:	4619      	mov	r1, r3
 8003108:	480c      	ldr	r0, [pc, #48]	; (800313c <ucg_DrawString+0x68>)
 800310a:	f000 fb01 	bl	8003710 <bufEnDat>
 800310e:	4b0c      	ldr	r3, [pc, #48]	; (8003140 <ucg_DrawString+0x6c>)
 8003110:	781b      	ldrb	r3, [r3, #0]
 8003112:	2bff      	cmp	r3, #255	; 0xff
 8003114:	d10b      	bne.n	800312e <ucg_DrawString+0x5a>
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	9300      	str	r3, [sp, #0]
 800311a:	4b0a      	ldr	r3, [pc, #40]	; (8003144 <ucg_DrawString+0x70>)
 800311c:	22ff      	movs	r2, #255	; 0xff
 800311e:	211e      	movs	r1, #30
 8003120:	4809      	ldr	r0, [pc, #36]	; (8003148 <ucg_DrawString+0x74>)
 8003122:	f7fe fbaf 	bl	8001884 <TimerStart>
 8003126:	4603      	mov	r3, r0
 8003128:	461a      	mov	r2, r3
 800312a:	4b05      	ldr	r3, [pc, #20]	; (8003140 <ucg_DrawString+0x6c>)
 800312c:	701a      	strb	r2, [r3, #0]
 800312e:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8003132:	4618      	mov	r0, r3
 8003134:	3720      	adds	r7, #32
 8003136:	46bd      	mov	sp, r7
 8003138:	bd80      	pop	{r7, pc}
 800313a:	bf00      	nop
 800313c:	2000033c 	.word	0x2000033c
 8003140:	20000024 	.word	0x20000024
 8003144:	08002f9d 	.word	0x08002f9d
 8003148:	08004d68 	.word	0x08004d68

0800314c <ucg_UpdateRefHeight>:
 800314c:	b480      	push	{r7}
 800314e:	b083      	sub	sp, #12
 8003150:	af00      	add	r7, sp, #0
 8003152:	6078      	str	r0, [r7, #4]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003158:	2b00      	cmp	r3, #0
 800315a:	d05d      	beq.n	8003218 <ucg_UpdateRefHeight+0xcc>
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 800317a:	2b00      	cmp	r3, #0
 800317c:	d04d      	beq.n	800321a <ucg_UpdateRefHeight+0xce>
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003184:	2b01      	cmp	r3, #1
 8003186:	d11c      	bne.n	80031c2 <ucg_UpdateRefHeight+0x76>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 8003194:	429a      	cmp	r2, r3
 8003196:	da05      	bge.n	80031a4 <ucg_UpdateRefHeight+0x58>
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 80031b0:	429a      	cmp	r2, r3
 80031b2:	dd32      	ble.n	800321a <ucg_UpdateRefHeight+0xce>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80031c0:	e02b      	b.n	800321a <ucg_UpdateRefHeight+0xce>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 80031c8:	461a      	mov	r2, r3
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 80031d0:	4619      	mov	r1, r3
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80031d8:	440b      	add	r3, r1
 80031da:	429a      	cmp	r2, r3
 80031dc:	da0d      	bge.n	80031fa <ucg_UpdateRefHeight+0xae>
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 80031e4:	b2da      	uxtb	r2, r3
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80031ec:	b2db      	uxtb	r3, r3
 80031ee:	4413      	add	r3, r2
 80031f0:	b2db      	uxtb	r3, r3
 80031f2:	b25a      	sxtb	r2, r3
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003206:	429a      	cmp	r2, r3
 8003208:	dd07      	ble.n	800321a <ucg_UpdateRefHeight+0xce>
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003216:	e000      	b.n	800321a <ucg_UpdateRefHeight+0xce>
 8003218:	bf00      	nop
 800321a:	370c      	adds	r7, #12
 800321c:	46bd      	mov	sp, r7
 800321e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003222:	4770      	bx	lr

08003224 <ucg_font_calc_vref_font>:
 8003224:	b480      	push	{r7}
 8003226:	b083      	sub	sp, #12
 8003228:	af00      	add	r7, sp, #0
 800322a:	6078      	str	r0, [r7, #4]
 800322c:	2300      	movs	r3, #0
 800322e:	4618      	mov	r0, r3
 8003230:	370c      	adds	r7, #12
 8003232:	46bd      	mov	sp, r7
 8003234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003238:	4770      	bx	lr
	...

0800323c <ucg_SetFontPosBaseline>:
 800323c:	b480      	push	{r7}
 800323e:	b083      	sub	sp, #12
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	4a04      	ldr	r2, [pc, #16]	; (8003258 <ucg_SetFontPosBaseline+0x1c>)
 8003248:	67da      	str	r2, [r3, #124]	; 0x7c
 800324a:	bf00      	nop
 800324c:	370c      	adds	r7, #12
 800324e:	46bd      	mov	sp, r7
 8003250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003254:	4770      	bx	lr
 8003256:	bf00      	nop
 8003258:	08003225 	.word	0x08003225

0800325c <ucg_SetFont>:
 800325c:	b580      	push	{r7, lr}
 800325e:	b082      	sub	sp, #8
 8003260:	af00      	add	r7, sp, #0
 8003262:	6078      	str	r0, [r7, #4]
 8003264:	6039      	str	r1, [r7, #0]
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800326a:	683a      	ldr	r2, [r7, #0]
 800326c:	429a      	cmp	r2, r3
 800326e:	d012      	beq.n	8003296 <ucg_SetFont+0x3a>
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	683a      	ldr	r2, [r7, #0]
 8003274:	679a      	str	r2, [r3, #120]	; 0x78
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	3390      	adds	r3, #144	; 0x90
 800327a:	6839      	ldr	r1, [r7, #0]
 800327c:	4618      	mov	r0, r3
 800327e:	f7ff fac9 	bl	8002814 <ucg_read_font_info>
 8003282:	6878      	ldr	r0, [r7, #4]
 8003284:	f7ff ff62 	bl	800314c <ucg_UpdateRefHeight>
 8003288:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800328c:	220c      	movs	r2, #12
 800328e:	4904      	ldr	r1, [pc, #16]	; (80032a0 <ucg_SetFont+0x44>)
 8003290:	4804      	ldr	r0, [pc, #16]	; (80032a4 <ucg_SetFont+0x48>)
 8003292:	f000 f9d7 	bl	8003644 <bufInit>
 8003296:	bf00      	nop
 8003298:	3708      	adds	r7, #8
 800329a:	46bd      	mov	sp, r7
 800329c:	bd80      	pop	{r7, pc}
 800329e:	bf00      	nop
 80032a0:	2000033c 	.word	0x2000033c
 80032a4:	2000034c 	.word	0x2000034c

080032a8 <ucg_init_struct>:
 80032a8:	b480      	push	{r7}
 80032aa:	b083      	sub	sp, #12
 80032ac:	af00      	add	r7, sp, #0
 80032ae:	6078      	str	r0, [r7, #4]
 80032b0:	687a      	ldr	r2, [r7, #4]
 80032b2:	7813      	ldrb	r3, [r2, #0]
 80032b4:	f36f 0300 	bfc	r3, #0, #1
 80032b8:	7013      	strb	r3, [r2, #0]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	2200      	movs	r2, #0
 80032be:	611a      	str	r2, [r3, #16]
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	2201      	movs	r2, #1
 80032c4:	865a      	strh	r2, [r3, #50]	; 0x32
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	2200      	movs	r2, #0
 80032ca:	679a      	str	r2, [r3, #120]	; 0x78
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	2201      	movs	r2, #1
 80032d0:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	2200      	movs	r2, #0
 80032d8:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	2200      	movs	r2, #0
 80032e0:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	2200      	movs	r2, #0
 80032e8:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 80032ec:	bf00      	nop
 80032ee:	370c      	adds	r7, #12
 80032f0:	46bd      	mov	sp, r7
 80032f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f6:	4770      	bx	lr

080032f8 <ucg_Init>:
 80032f8:	b580      	push	{r7, lr}
 80032fa:	b086      	sub	sp, #24
 80032fc:	af00      	add	r7, sp, #0
 80032fe:	60f8      	str	r0, [r7, #12]
 8003300:	60b9      	str	r1, [r7, #8]
 8003302:	607a      	str	r2, [r7, #4]
 8003304:	603b      	str	r3, [r7, #0]
 8003306:	68f8      	ldr	r0, [r7, #12]
 8003308:	f7ff ffce 	bl	80032a8 <ucg_init_struct>
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	2b00      	cmp	r3, #0
 8003310:	d103      	bne.n	800331a <ucg_Init+0x22>
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	4a0e      	ldr	r2, [pc, #56]	; (8003350 <ucg_Init+0x58>)
 8003316:	60da      	str	r2, [r3, #12]
 8003318:	e002      	b.n	8003320 <ucg_Init+0x28>
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	687a      	ldr	r2, [r7, #4]
 800331e:	60da      	str	r2, [r3, #12]
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	68ba      	ldr	r2, [r7, #8]
 8003324:	609a      	str	r2, [r3, #8]
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	683a      	ldr	r2, [r7, #0]
 800332a:	61da      	str	r2, [r3, #28]
 800332c:	68f8      	ldr	r0, [r7, #12]
 800332e:	f7ff ff85 	bl	800323c <ucg_SetFontPosBaseline>
 8003332:	68f8      	ldr	r0, [r7, #12]
 8003334:	f7ff f996 	bl	8002664 <ucg_PowerUp>
 8003338:	4603      	mov	r3, r0
 800333a:	82fb      	strh	r3, [r7, #22]
 800333c:	68f8      	ldr	r0, [r7, #12]
 800333e:	f7ff f9d6 	bl	80026ee <ucg_GetDimension>
 8003342:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8003346:	4618      	mov	r0, r3
 8003348:	3718      	adds	r7, #24
 800334a:	46bd      	mov	sp, r7
 800334c:	bd80      	pop	{r7, pc}
 800334e:	bf00      	nop
 8003350:	080022c9 	.word	0x080022c9

08003354 <ucg_Draw90Line>:
 8003354:	b580      	push	{r7, lr}
 8003356:	b084      	sub	sp, #16
 8003358:	af00      	add	r7, sp, #0
 800335a:	60f8      	str	r0, [r7, #12]
 800335c:	4608      	mov	r0, r1
 800335e:	4611      	mov	r1, r2
 8003360:	461a      	mov	r2, r3
 8003362:	4603      	mov	r3, r0
 8003364:	817b      	strh	r3, [r7, #10]
 8003366:	460b      	mov	r3, r1
 8003368:	813b      	strh	r3, [r7, #8]
 800336a:	4613      	mov	r3, r2
 800336c:	80fb      	strh	r3, [r7, #6]
 800336e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003372:	68f9      	ldr	r1, [r7, #12]
 8003374:	4613      	mov	r3, r2
 8003376:	005b      	lsls	r3, r3, #1
 8003378:	4413      	add	r3, r2
 800337a:	440b      	add	r3, r1
 800337c:	333a      	adds	r3, #58	; 0x3a
 800337e:	781a      	ldrb	r2, [r3, #0]
 8003380:	68fb      	ldr	r3, [r7, #12]
 8003382:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8003386:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800338a:	68f9      	ldr	r1, [r7, #12]
 800338c:	4613      	mov	r3, r2
 800338e:	005b      	lsls	r3, r3, #1
 8003390:	4413      	add	r3, r2
 8003392:	440b      	add	r3, r1
 8003394:	333b      	adds	r3, #59	; 0x3b
 8003396:	781a      	ldrb	r2, [r3, #0]
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800339e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 80033a2:	68f9      	ldr	r1, [r7, #12]
 80033a4:	4613      	mov	r3, r2
 80033a6:	005b      	lsls	r3, r3, #1
 80033a8:	4413      	add	r3, r2
 80033aa:	440b      	add	r3, r1
 80033ac:	333c      	adds	r3, #60	; 0x3c
 80033ae:	781a      	ldrb	r2, [r3, #0]
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	897a      	ldrh	r2, [r7, #10]
 80033ba:	849a      	strh	r2, [r3, #36]	; 0x24
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	893a      	ldrh	r2, [r7, #8]
 80033c0:	84da      	strh	r2, [r3, #38]	; 0x26
 80033c2:	68fb      	ldr	r3, [r7, #12]
 80033c4:	88fa      	ldrh	r2, [r7, #6]
 80033c6:	859a      	strh	r2, [r3, #44]	; 0x2c
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	8b3a      	ldrh	r2, [r7, #24]
 80033cc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80033ce:	68f8      	ldr	r0, [r7, #12]
 80033d0:	f7ff f99f 	bl	8002712 <ucg_DrawL90FXWithArg>
 80033d4:	bf00      	nop
 80033d6:	3710      	adds	r7, #16
 80033d8:	46bd      	mov	sp, r7
 80033da:	bd80      	pop	{r7, pc}

080033dc <ucg_DrawHLine>:
 80033dc:	b580      	push	{r7, lr}
 80033de:	b086      	sub	sp, #24
 80033e0:	af02      	add	r7, sp, #8
 80033e2:	60f8      	str	r0, [r7, #12]
 80033e4:	4608      	mov	r0, r1
 80033e6:	4611      	mov	r1, r2
 80033e8:	461a      	mov	r2, r3
 80033ea:	4603      	mov	r3, r0
 80033ec:	817b      	strh	r3, [r7, #10]
 80033ee:	460b      	mov	r3, r1
 80033f0:	813b      	strh	r3, [r7, #8]
 80033f2:	4613      	mov	r3, r2
 80033f4:	80fb      	strh	r3, [r7, #6]
 80033f6:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80033fa:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80033fe:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003402:	2300      	movs	r3, #0
 8003404:	9301      	str	r3, [sp, #4]
 8003406:	2300      	movs	r3, #0
 8003408:	9300      	str	r3, [sp, #0]
 800340a:	4603      	mov	r3, r0
 800340c:	68f8      	ldr	r0, [r7, #12]
 800340e:	f7ff ffa1 	bl	8003354 <ucg_Draw90Line>
 8003412:	bf00      	nop
 8003414:	3710      	adds	r7, #16
 8003416:	46bd      	mov	sp, r7
 8003418:	bd80      	pop	{r7, pc}

0800341a <ucg_SetColor>:
 800341a:	b480      	push	{r7}
 800341c:	b083      	sub	sp, #12
 800341e:	af00      	add	r7, sp, #0
 8003420:	6078      	str	r0, [r7, #4]
 8003422:	4608      	mov	r0, r1
 8003424:	4611      	mov	r1, r2
 8003426:	461a      	mov	r2, r3
 8003428:	4603      	mov	r3, r0
 800342a:	70fb      	strb	r3, [r7, #3]
 800342c:	460b      	mov	r3, r1
 800342e:	70bb      	strb	r3, [r7, #2]
 8003430:	4613      	mov	r3, r2
 8003432:	707b      	strb	r3, [r7, #1]
 8003434:	78fa      	ldrb	r2, [r7, #3]
 8003436:	6879      	ldr	r1, [r7, #4]
 8003438:	4613      	mov	r3, r2
 800343a:	005b      	lsls	r3, r3, #1
 800343c:	4413      	add	r3, r2
 800343e:	440b      	add	r3, r1
 8003440:	333a      	adds	r3, #58	; 0x3a
 8003442:	78ba      	ldrb	r2, [r7, #2]
 8003444:	701a      	strb	r2, [r3, #0]
 8003446:	78fa      	ldrb	r2, [r7, #3]
 8003448:	6879      	ldr	r1, [r7, #4]
 800344a:	4613      	mov	r3, r2
 800344c:	005b      	lsls	r3, r3, #1
 800344e:	4413      	add	r3, r2
 8003450:	440b      	add	r3, r1
 8003452:	333b      	adds	r3, #59	; 0x3b
 8003454:	787a      	ldrb	r2, [r7, #1]
 8003456:	701a      	strb	r2, [r3, #0]
 8003458:	78fa      	ldrb	r2, [r7, #3]
 800345a:	6879      	ldr	r1, [r7, #4]
 800345c:	4613      	mov	r3, r2
 800345e:	005b      	lsls	r3, r3, #1
 8003460:	4413      	add	r3, r2
 8003462:	440b      	add	r3, r1
 8003464:	333c      	adds	r3, #60	; 0x3c
 8003466:	7c3a      	ldrb	r2, [r7, #16]
 8003468:	701a      	strb	r2, [r3, #0]
 800346a:	bf00      	nop
 800346c:	370c      	adds	r7, #12
 800346e:	46bd      	mov	sp, r7
 8003470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003474:	4770      	bx	lr

08003476 <ucg_UndoRotate>:
 8003476:	b580      	push	{r7, lr}
 8003478:	b082      	sub	sp, #8
 800347a:	af00      	add	r7, sp, #0
 800347c:	6078      	str	r0, [r7, #4]
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	691b      	ldr	r3, [r3, #16]
 8003482:	2b00      	cmp	r3, #0
 8003484:	d006      	beq.n	8003494 <ucg_UndoRotate+0x1e>
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	691a      	ldr	r2, [r3, #16]
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	609a      	str	r2, [r3, #8]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	2200      	movs	r2, #0
 8003492:	611a      	str	r2, [r3, #16]
 8003494:	6878      	ldr	r0, [r7, #4]
 8003496:	f7ff f92a 	bl	80026ee <ucg_GetDimension>
 800349a:	6878      	ldr	r0, [r7, #4]
 800349c:	f7ff f90f 	bl	80026be <ucg_SetMaxClipRange>
 80034a0:	bf00      	nop
 80034a2:	3708      	adds	r7, #8
 80034a4:	46bd      	mov	sp, r7
 80034a6:	bd80      	pop	{r7, pc}

080034a8 <ucg_rotate_180_xy>:
 80034a8:	b480      	push	{r7}
 80034aa:	b085      	sub	sp, #20
 80034ac:	af00      	add	r7, sp, #0
 80034ae:	6078      	str	r0, [r7, #4]
 80034b0:	6039      	str	r1, [r7, #0]
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	8adb      	ldrh	r3, [r3, #22]
 80034b6:	81fb      	strh	r3, [r7, #14]
 80034b8:	89fa      	ldrh	r2, [r7, #14]
 80034ba:	683b      	ldr	r3, [r7, #0]
 80034bc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80034c0:	b29b      	uxth	r3, r3
 80034c2:	1ad3      	subs	r3, r2, r3
 80034c4:	b29b      	uxth	r3, r3
 80034c6:	81fb      	strh	r3, [r7, #14]
 80034c8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80034cc:	b29b      	uxth	r3, r3
 80034ce:	3b01      	subs	r3, #1
 80034d0:	b29b      	uxth	r3, r3
 80034d2:	81fb      	strh	r3, [r7, #14]
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	89fa      	ldrh	r2, [r7, #14]
 80034d8:	805a      	strh	r2, [r3, #2]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	8a9b      	ldrh	r3, [r3, #20]
 80034de:	81bb      	strh	r3, [r7, #12]
 80034e0:	89ba      	ldrh	r2, [r7, #12]
 80034e2:	683b      	ldr	r3, [r7, #0]
 80034e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80034e8:	b29b      	uxth	r3, r3
 80034ea:	1ad3      	subs	r3, r2, r3
 80034ec:	b29b      	uxth	r3, r3
 80034ee:	81bb      	strh	r3, [r7, #12]
 80034f0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80034f4:	b29b      	uxth	r3, r3
 80034f6:	3b01      	subs	r3, #1
 80034f8:	b29b      	uxth	r3, r3
 80034fa:	81bb      	strh	r3, [r7, #12]
 80034fc:	683b      	ldr	r3, [r7, #0]
 80034fe:	89ba      	ldrh	r2, [r7, #12]
 8003500:	801a      	strh	r2, [r3, #0]
 8003502:	bf00      	nop
 8003504:	3714      	adds	r7, #20
 8003506:	46bd      	mov	sp, r7
 8003508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800350c:	4770      	bx	lr
	...

08003510 <ucg_dev_rotate180>:
 8003510:	b580      	push	{r7, lr}
 8003512:	b084      	sub	sp, #16
 8003514:	af00      	add	r7, sp, #0
 8003516:	60f8      	str	r0, [r7, #12]
 8003518:	460b      	mov	r3, r1
 800351a:	607a      	str	r2, [r7, #4]
 800351c:	817b      	strh	r3, [r7, #10]
 800351e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003522:	3b0c      	subs	r3, #12
 8003524:	2b0b      	cmp	r3, #11
 8003526:	d866      	bhi.n	80035f6 <ucg_dev_rotate180+0xe6>
 8003528:	a201      	add	r2, pc, #4	; (adr r2, 8003530 <ucg_dev_rotate180+0x20>)
 800352a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800352e:	bf00      	nop
 8003530:	0800357f 	.word	0x0800357f
 8003534:	080035f7 	.word	0x080035f7
 8003538:	080035f7 	.word	0x080035f7
 800353c:	08003561 	.word	0x08003561
 8003540:	080035f7 	.word	0x080035f7
 8003544:	080035f7 	.word	0x080035f7
 8003548:	080035f7 	.word	0x080035f7
 800354c:	080035f7 	.word	0x080035f7
 8003550:	080035c7 	.word	0x080035c7
 8003554:	080035c7 	.word	0x080035c7
 8003558:	080035f7 	.word	0x080035f7
 800355c:	080035c7 	.word	0x080035c7
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	691b      	ldr	r3, [r3, #16]
 8003564:	68fa      	ldr	r2, [r7, #12]
 8003566:	3214      	adds	r2, #20
 8003568:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800356c:	68f8      	ldr	r0, [r7, #12]
 800356e:	4798      	blx	r3
 8003570:	687a      	ldr	r2, [r7, #4]
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	3314      	adds	r3, #20
 8003576:	6818      	ldr	r0, [r3, #0]
 8003578:	6010      	str	r0, [r2, #0]
 800357a:	2301      	movs	r3, #1
 800357c:	e043      	b.n	8003606 <ucg_dev_rotate180+0xf6>
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003584:	b29a      	uxth	r2, r3
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800358c:	b29b      	uxth	r3, r3
 800358e:	4413      	add	r3, r2
 8003590:	b29b      	uxth	r3, r3
 8003592:	3b01      	subs	r3, #1
 8003594:	b29b      	uxth	r3, r3
 8003596:	b21a      	sxth	r2, r3
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	805a      	strh	r2, [r3, #2]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	f9b3 3000 	ldrsh.w	r3, [r3]
 80035a2:	b29a      	uxth	r2, r3
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80035aa:	b29b      	uxth	r3, r3
 80035ac:	4413      	add	r3, r2
 80035ae:	b29b      	uxth	r3, r3
 80035b0:	3b01      	subs	r3, #1
 80035b2:	b29b      	uxth	r3, r3
 80035b4:	b21a      	sxth	r2, r3
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	801a      	strh	r2, [r3, #0]
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	4619      	mov	r1, r3
 80035be:	68f8      	ldr	r0, [r7, #12]
 80035c0:	f7ff ff72 	bl	80034a8 <ucg_rotate_180_xy>
 80035c4:	e017      	b.n	80035f6 <ucg_dev_rotate180+0xe6>
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80035cc:	b29b      	uxth	r3, r3
 80035ce:	3302      	adds	r3, #2
 80035d0:	b29b      	uxth	r3, r3
 80035d2:	b21a      	sxth	r2, r3
 80035d4:	68fb      	ldr	r3, [r7, #12]
 80035d6:	85da      	strh	r2, [r3, #46]	; 0x2e
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80035de:	f003 0303 	and.w	r3, r3, #3
 80035e2:	b21a      	sxth	r2, r3
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	85da      	strh	r2, [r3, #46]	; 0x2e
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	3324      	adds	r3, #36	; 0x24
 80035ec:	4619      	mov	r1, r3
 80035ee:	68f8      	ldr	r0, [r7, #12]
 80035f0:	f7ff ff5a 	bl	80034a8 <ucg_rotate_180_xy>
 80035f4:	bf00      	nop
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	691b      	ldr	r3, [r3, #16]
 80035fa:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80035fe:	687a      	ldr	r2, [r7, #4]
 8003600:	68f8      	ldr	r0, [r7, #12]
 8003602:	4798      	blx	r3
 8003604:	4603      	mov	r3, r0
 8003606:	4618      	mov	r0, r3
 8003608:	3710      	adds	r7, #16
 800360a:	46bd      	mov	sp, r7
 800360c:	bd80      	pop	{r7, pc}
 800360e:	bf00      	nop

08003610 <ucg_SetRotate180>:
 8003610:	b580      	push	{r7, lr}
 8003612:	b082      	sub	sp, #8
 8003614:	af00      	add	r7, sp, #0
 8003616:	6078      	str	r0, [r7, #4]
 8003618:	6878      	ldr	r0, [r7, #4]
 800361a:	f7ff ff2c 	bl	8003476 <ucg_UndoRotate>
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	689a      	ldr	r2, [r3, #8]
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	611a      	str	r2, [r3, #16]
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	4a05      	ldr	r2, [pc, #20]	; (8003640 <ucg_SetRotate180+0x30>)
 800362a:	609a      	str	r2, [r3, #8]
 800362c:	6878      	ldr	r0, [r7, #4]
 800362e:	f7ff f85e 	bl	80026ee <ucg_GetDimension>
 8003632:	6878      	ldr	r0, [r7, #4]
 8003634:	f7ff f843 	bl	80026be <ucg_SetMaxClipRange>
 8003638:	bf00      	nop
 800363a:	3708      	adds	r7, #8
 800363c:	46bd      	mov	sp, r7
 800363e:	bd80      	pop	{r7, pc}
 8003640:	08003511 	.word	0x08003511

08003644 <bufInit>:
 8003644:	b580      	push	{r7, lr}
 8003646:	b084      	sub	sp, #16
 8003648:	af00      	add	r7, sp, #0
 800364a:	60f8      	str	r0, [r7, #12]
 800364c:	60b9      	str	r1, [r7, #8]
 800364e:	4611      	mov	r1, r2
 8003650:	461a      	mov	r2, r3
 8003652:	460b      	mov	r3, r1
 8003654:	71fb      	strb	r3, [r7, #7]
 8003656:	4613      	mov	r3, r2
 8003658:	80bb      	strh	r3, [r7, #4]
 800365a:	68bb      	ldr	r3, [r7, #8]
 800365c:	88ba      	ldrh	r2, [r7, #4]
 800365e:	801a      	strh	r2, [r3, #0]
 8003660:	68bb      	ldr	r3, [r7, #8]
 8003662:	79fa      	ldrb	r2, [r7, #7]
 8003664:	711a      	strb	r2, [r3, #4]
 8003666:	68bb      	ldr	r3, [r7, #8]
 8003668:	68fa      	ldr	r2, [r7, #12]
 800366a:	60da      	str	r2, [r3, #12]
 800366c:	68b8      	ldr	r0, [r7, #8]
 800366e:	f000 f836 	bl	80036de <bufFlush>
 8003672:	bf00      	nop
 8003674:	3710      	adds	r7, #16
 8003676:	46bd      	mov	sp, r7
 8003678:	bd80      	pop	{r7, pc}

0800367a <bufNumItems>:
 800367a:	b480      	push	{r7}
 800367c:	b083      	sub	sp, #12
 800367e:	af00      	add	r7, sp, #0
 8003680:	6078      	str	r0, [r7, #4]
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	885b      	ldrh	r3, [r3, #2]
 8003686:	4618      	mov	r0, r3
 8003688:	370c      	adds	r7, #12
 800368a:	46bd      	mov	sp, r7
 800368c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003690:	4770      	bx	lr

08003692 <bufIsFull>:
 8003692:	b480      	push	{r7}
 8003694:	b083      	sub	sp, #12
 8003696:	af00      	add	r7, sp, #0
 8003698:	6078      	str	r0, [r7, #4]
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	885a      	ldrh	r2, [r3, #2]
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	881b      	ldrh	r3, [r3, #0]
 80036a2:	429a      	cmp	r2, r3
 80036a4:	bf2c      	ite	cs
 80036a6:	2301      	movcs	r3, #1
 80036a8:	2300      	movcc	r3, #0
 80036aa:	b2db      	uxtb	r3, r3
 80036ac:	4618      	mov	r0, r3
 80036ae:	370c      	adds	r7, #12
 80036b0:	46bd      	mov	sp, r7
 80036b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036b6:	4770      	bx	lr

080036b8 <bufIsEmpty>:
 80036b8:	b480      	push	{r7}
 80036ba:	b083      	sub	sp, #12
 80036bc:	af00      	add	r7, sp, #0
 80036be:	6078      	str	r0, [r7, #4]
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	88da      	ldrh	r2, [r3, #6]
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	891b      	ldrh	r3, [r3, #8]
 80036c8:	429a      	cmp	r2, r3
 80036ca:	bf0c      	ite	eq
 80036cc:	2301      	moveq	r3, #1
 80036ce:	2300      	movne	r3, #0
 80036d0:	b2db      	uxtb	r3, r3
 80036d2:	4618      	mov	r0, r3
 80036d4:	370c      	adds	r7, #12
 80036d6:	46bd      	mov	sp, r7
 80036d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036dc:	4770      	bx	lr

080036de <bufFlush>:
 80036de:	b580      	push	{r7, lr}
 80036e0:	b082      	sub	sp, #8
 80036e2:	af00      	add	r7, sp, #0
 80036e4:	6078      	str	r0, [r7, #4]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	2200      	movs	r2, #0
 80036ea:	80da      	strh	r2, [r3, #6]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	2200      	movs	r2, #0
 80036f0:	811a      	strh	r2, [r3, #8]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	2200      	movs	r2, #0
 80036f6:	805a      	strh	r2, [r3, #2]
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	68d8      	ldr	r0, [r3, #12]
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	881b      	ldrh	r3, [r3, #0]
 8003700:	461a      	mov	r2, r3
 8003702:	2100      	movs	r1, #0
 8003704:	f000 f894 	bl	8003830 <memsetl>
 8003708:	bf00      	nop
 800370a:	3708      	adds	r7, #8
 800370c:	46bd      	mov	sp, r7
 800370e:	bd80      	pop	{r7, pc}

08003710 <bufEnDat>:
 8003710:	b580      	push	{r7, lr}
 8003712:	b084      	sub	sp, #16
 8003714:	af00      	add	r7, sp, #0
 8003716:	6078      	str	r0, [r7, #4]
 8003718:	6039      	str	r1, [r7, #0]
 800371a:	b672      	cpsid	i
 800371c:	2300      	movs	r3, #0
 800371e:	73fb      	strb	r3, [r7, #15]
 8003720:	e021      	b.n	8003766 <bufEnDat+0x56>
 8003722:	7bfb      	ldrb	r3, [r7, #15]
 8003724:	683a      	ldr	r2, [r7, #0]
 8003726:	441a      	add	r2, r3
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	68db      	ldr	r3, [r3, #12]
 800372c:	6879      	ldr	r1, [r7, #4]
 800372e:	88c9      	ldrh	r1, [r1, #6]
 8003730:	440b      	add	r3, r1
 8003732:	7812      	ldrb	r2, [r2, #0]
 8003734:	701a      	strb	r2, [r3, #0]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	88db      	ldrh	r3, [r3, #6]
 800373a:	3301      	adds	r3, #1
 800373c:	b29b      	uxth	r3, r3
 800373e:	b21a      	sxth	r2, r3
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	881b      	ldrh	r3, [r3, #0]
 8003744:	3b01      	subs	r3, #1
 8003746:	b29b      	uxth	r3, r3
 8003748:	b21b      	sxth	r3, r3
 800374a:	4013      	ands	r3, r2
 800374c:	b21b      	sxth	r3, r3
 800374e:	b29a      	uxth	r2, r3
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	80da      	strh	r2, [r3, #6]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	885b      	ldrh	r3, [r3, #2]
 8003758:	3301      	adds	r3, #1
 800375a:	b29a      	uxth	r2, r3
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	805a      	strh	r2, [r3, #2]
 8003760:	7bfb      	ldrb	r3, [r7, #15]
 8003762:	3301      	adds	r3, #1
 8003764:	73fb      	strb	r3, [r7, #15]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	791b      	ldrb	r3, [r3, #4]
 800376a:	7bfa      	ldrb	r2, [r7, #15]
 800376c:	429a      	cmp	r2, r3
 800376e:	d3d8      	bcc.n	8003722 <bufEnDat+0x12>
 8003770:	6878      	ldr	r0, [r7, #4]
 8003772:	f7ff ff8e 	bl	8003692 <bufIsFull>
 8003776:	4603      	mov	r3, r0
 8003778:	2b00      	cmp	r3, #0
 800377a:	d011      	beq.n	80037a0 <bufEnDat+0x90>
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	891a      	ldrh	r2, [r3, #8]
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	791b      	ldrb	r3, [r3, #4]
 8003784:	b29b      	uxth	r3, r3
 8003786:	4413      	add	r3, r2
 8003788:	b29b      	uxth	r3, r3
 800378a:	b21a      	sxth	r2, r3
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	881b      	ldrh	r3, [r3, #0]
 8003790:	3b01      	subs	r3, #1
 8003792:	b29b      	uxth	r3, r3
 8003794:	b21b      	sxth	r3, r3
 8003796:	4013      	ands	r3, r2
 8003798:	b21b      	sxth	r3, r3
 800379a:	b29a      	uxth	r2, r3
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	811a      	strh	r2, [r3, #8]
 80037a0:	b662      	cpsie	i
 80037a2:	2300      	movs	r3, #0
 80037a4:	4618      	mov	r0, r3
 80037a6:	3710      	adds	r7, #16
 80037a8:	46bd      	mov	sp, r7
 80037aa:	bd80      	pop	{r7, pc}

080037ac <bufDeDat>:
 80037ac:	b580      	push	{r7, lr}
 80037ae:	b084      	sub	sp, #16
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	6078      	str	r0, [r7, #4]
 80037b4:	6039      	str	r1, [r7, #0]
 80037b6:	b672      	cpsid	i
 80037b8:	6878      	ldr	r0, [r7, #4]
 80037ba:	f7ff ff7d 	bl	80036b8 <bufIsEmpty>
 80037be:	4603      	mov	r3, r0
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	d005      	beq.n	80037d0 <bufDeDat+0x24>
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	2200      	movs	r2, #0
 80037c8:	805a      	strh	r2, [r3, #2]
 80037ca:	b662      	cpsie	i
 80037cc:	2302      	movs	r3, #2
 80037ce:	e02b      	b.n	8003828 <bufDeDat+0x7c>
 80037d0:	2300      	movs	r3, #0
 80037d2:	73fb      	strb	r3, [r7, #15]
 80037d4:	e021      	b.n	800381a <bufDeDat+0x6e>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	68db      	ldr	r3, [r3, #12]
 80037da:	687a      	ldr	r2, [r7, #4]
 80037dc:	8912      	ldrh	r2, [r2, #8]
 80037de:	441a      	add	r2, r3
 80037e0:	7bfb      	ldrb	r3, [r7, #15]
 80037e2:	6839      	ldr	r1, [r7, #0]
 80037e4:	440b      	add	r3, r1
 80037e6:	7812      	ldrb	r2, [r2, #0]
 80037e8:	701a      	strb	r2, [r3, #0]
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	891b      	ldrh	r3, [r3, #8]
 80037ee:	3301      	adds	r3, #1
 80037f0:	b29b      	uxth	r3, r3
 80037f2:	b21a      	sxth	r2, r3
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	881b      	ldrh	r3, [r3, #0]
 80037f8:	3b01      	subs	r3, #1
 80037fa:	b29b      	uxth	r3, r3
 80037fc:	b21b      	sxth	r3, r3
 80037fe:	4013      	ands	r3, r2
 8003800:	b21b      	sxth	r3, r3
 8003802:	b29a      	uxth	r2, r3
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	811a      	strh	r2, [r3, #8]
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	885b      	ldrh	r3, [r3, #2]
 800380c:	3b01      	subs	r3, #1
 800380e:	b29a      	uxth	r2, r3
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	805a      	strh	r2, [r3, #2]
 8003814:	7bfb      	ldrb	r3, [r7, #15]
 8003816:	3301      	adds	r3, #1
 8003818:	73fb      	strb	r3, [r7, #15]
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	791b      	ldrb	r3, [r3, #4]
 800381e:	7bfa      	ldrb	r2, [r7, #15]
 8003820:	429a      	cmp	r2, r3
 8003822:	d3d8      	bcc.n	80037d6 <bufDeDat+0x2a>
 8003824:	b662      	cpsie	i
 8003826:	2300      	movs	r3, #0
 8003828:	4618      	mov	r0, r3
 800382a:	3710      	adds	r7, #16
 800382c:	46bd      	mov	sp, r7
 800382e:	bd80      	pop	{r7, pc}

08003830 <memsetl>:
 8003830:	b480      	push	{r7}
 8003832:	b083      	sub	sp, #12
 8003834:	af00      	add	r7, sp, #0
 8003836:	6078      	str	r0, [r7, #4]
 8003838:	460b      	mov	r3, r1
 800383a:	70fb      	strb	r3, [r7, #3]
 800383c:	4613      	mov	r3, r2
 800383e:	803b      	strh	r3, [r7, #0]
 8003840:	e004      	b.n	800384c <memsetl+0x1c>
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	1c5a      	adds	r2, r3, #1
 8003846:	607a      	str	r2, [r7, #4]
 8003848:	78fa      	ldrb	r2, [r7, #3]
 800384a:	701a      	strb	r2, [r3, #0]
 800384c:	883b      	ldrh	r3, [r7, #0]
 800384e:	1e5a      	subs	r2, r3, #1
 8003850:	803a      	strh	r2, [r7, #0]
 8003852:	2b00      	cmp	r3, #0
 8003854:	d1f5      	bne.n	8003842 <memsetl+0x12>
 8003856:	bf00      	nop
 8003858:	370c      	adds	r7, #12
 800385a:	46bd      	mov	sp, r7
 800385c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003860:	4770      	bx	lr

08003862 <USART_ReceiveData>:
 8003862:	b480      	push	{r7}
 8003864:	b083      	sub	sp, #12
 8003866:	af00      	add	r7, sp, #0
 8003868:	6078      	str	r0, [r7, #4]
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	889b      	ldrh	r3, [r3, #4]
 800386e:	b29b      	uxth	r3, r3
 8003870:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003874:	b29b      	uxth	r3, r3
 8003876:	4618      	mov	r0, r3
 8003878:	370c      	adds	r7, #12
 800387a:	46bd      	mov	sp, r7
 800387c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003880:	4770      	bx	lr

08003882 <USART_GetITStatus>:
 8003882:	b480      	push	{r7}
 8003884:	b087      	sub	sp, #28
 8003886:	af00      	add	r7, sp, #0
 8003888:	6078      	str	r0, [r7, #4]
 800388a:	460b      	mov	r3, r1
 800388c:	807b      	strh	r3, [r7, #2]
 800388e:	2300      	movs	r3, #0
 8003890:	60fb      	str	r3, [r7, #12]
 8003892:	2300      	movs	r3, #0
 8003894:	617b      	str	r3, [r7, #20]
 8003896:	2300      	movs	r3, #0
 8003898:	60bb      	str	r3, [r7, #8]
 800389a:	2300      	movs	r3, #0
 800389c:	74fb      	strb	r3, [r7, #19]
 800389e:	887b      	ldrh	r3, [r7, #2]
 80038a0:	b2db      	uxtb	r3, r3
 80038a2:	095b      	lsrs	r3, r3, #5
 80038a4:	b2db      	uxtb	r3, r3
 80038a6:	60bb      	str	r3, [r7, #8]
 80038a8:	887b      	ldrh	r3, [r7, #2]
 80038aa:	f003 031f 	and.w	r3, r3, #31
 80038ae:	617b      	str	r3, [r7, #20]
 80038b0:	2201      	movs	r2, #1
 80038b2:	697b      	ldr	r3, [r7, #20]
 80038b4:	fa02 f303 	lsl.w	r3, r2, r3
 80038b8:	617b      	str	r3, [r7, #20]
 80038ba:	68bb      	ldr	r3, [r7, #8]
 80038bc:	2b01      	cmp	r3, #1
 80038be:	d107      	bne.n	80038d0 <USART_GetITStatus+0x4e>
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	899b      	ldrh	r3, [r3, #12]
 80038c4:	b29b      	uxth	r3, r3
 80038c6:	461a      	mov	r2, r3
 80038c8:	697b      	ldr	r3, [r7, #20]
 80038ca:	4013      	ands	r3, r2
 80038cc:	617b      	str	r3, [r7, #20]
 80038ce:	e011      	b.n	80038f4 <USART_GetITStatus+0x72>
 80038d0:	68bb      	ldr	r3, [r7, #8]
 80038d2:	2b02      	cmp	r3, #2
 80038d4:	d107      	bne.n	80038e6 <USART_GetITStatus+0x64>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	8a1b      	ldrh	r3, [r3, #16]
 80038da:	b29b      	uxth	r3, r3
 80038dc:	461a      	mov	r2, r3
 80038de:	697b      	ldr	r3, [r7, #20]
 80038e0:	4013      	ands	r3, r2
 80038e2:	617b      	str	r3, [r7, #20]
 80038e4:	e006      	b.n	80038f4 <USART_GetITStatus+0x72>
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	8a9b      	ldrh	r3, [r3, #20]
 80038ea:	b29b      	uxth	r3, r3
 80038ec:	461a      	mov	r2, r3
 80038ee:	697b      	ldr	r3, [r7, #20]
 80038f0:	4013      	ands	r3, r2
 80038f2:	617b      	str	r3, [r7, #20]
 80038f4:	887b      	ldrh	r3, [r7, #2]
 80038f6:	0a1b      	lsrs	r3, r3, #8
 80038f8:	b29b      	uxth	r3, r3
 80038fa:	60fb      	str	r3, [r7, #12]
 80038fc:	2201      	movs	r2, #1
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	fa02 f303 	lsl.w	r3, r2, r3
 8003904:	60fb      	str	r3, [r7, #12]
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	881b      	ldrh	r3, [r3, #0]
 800390a:	b29b      	uxth	r3, r3
 800390c:	461a      	mov	r2, r3
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	4013      	ands	r3, r2
 8003912:	60fb      	str	r3, [r7, #12]
 8003914:	697b      	ldr	r3, [r7, #20]
 8003916:	2b00      	cmp	r3, #0
 8003918:	d005      	beq.n	8003926 <USART_GetITStatus+0xa4>
 800391a:	68fb      	ldr	r3, [r7, #12]
 800391c:	2b00      	cmp	r3, #0
 800391e:	d002      	beq.n	8003926 <USART_GetITStatus+0xa4>
 8003920:	2301      	movs	r3, #1
 8003922:	74fb      	strb	r3, [r7, #19]
 8003924:	e001      	b.n	800392a <USART_GetITStatus+0xa8>
 8003926:	2300      	movs	r3, #0
 8003928:	74fb      	strb	r3, [r7, #19]
 800392a:	7cfb      	ldrb	r3, [r7, #19]
 800392c:	4618      	mov	r0, r3
 800392e:	371c      	adds	r7, #28
 8003930:	46bd      	mov	sp, r7
 8003932:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003936:	4770      	bx	lr

08003938 <USART_ClearITPendingBit>:
 8003938:	b480      	push	{r7}
 800393a:	b085      	sub	sp, #20
 800393c:	af00      	add	r7, sp, #0
 800393e:	6078      	str	r0, [r7, #4]
 8003940:	460b      	mov	r3, r1
 8003942:	807b      	strh	r3, [r7, #2]
 8003944:	2300      	movs	r3, #0
 8003946:	81fb      	strh	r3, [r7, #14]
 8003948:	2300      	movs	r3, #0
 800394a:	81bb      	strh	r3, [r7, #12]
 800394c:	887b      	ldrh	r3, [r7, #2]
 800394e:	0a1b      	lsrs	r3, r3, #8
 8003950:	81fb      	strh	r3, [r7, #14]
 8003952:	89fb      	ldrh	r3, [r7, #14]
 8003954:	2201      	movs	r2, #1
 8003956:	fa02 f303 	lsl.w	r3, r2, r3
 800395a:	81bb      	strh	r3, [r7, #12]
 800395c:	89bb      	ldrh	r3, [r7, #12]
 800395e:	43db      	mvns	r3, r3
 8003960:	b29a      	uxth	r2, r3
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	801a      	strh	r2, [r3, #0]
 8003966:	bf00      	nop
 8003968:	3714      	adds	r7, #20
 800396a:	46bd      	mov	sp, r7
 800396c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003970:	4770      	bx	lr

08003972 <ucg_clip_is_x_visible>:
 8003972:	b480      	push	{r7}
 8003974:	b085      	sub	sp, #20
 8003976:	af00      	add	r7, sp, #0
 8003978:	6078      	str	r0, [r7, #4]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800397e:	81fb      	strh	r3, [r7, #14]
 8003980:	89fa      	ldrh	r2, [r7, #14]
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003988:	b29b      	uxth	r3, r3
 800398a:	1ad3      	subs	r3, r2, r3
 800398c:	b29b      	uxth	r3, r3
 800398e:	81fb      	strh	r3, [r7, #14]
 8003990:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003994:	2b00      	cmp	r3, #0
 8003996:	da01      	bge.n	800399c <ucg_clip_is_x_visible+0x2a>
 8003998:	2300      	movs	r3, #0
 800399a:	e009      	b.n	80039b0 <ucg_clip_is_x_visible+0x3e>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80039a2:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80039a6:	429a      	cmp	r2, r3
 80039a8:	db01      	blt.n	80039ae <ucg_clip_is_x_visible+0x3c>
 80039aa:	2300      	movs	r3, #0
 80039ac:	e000      	b.n	80039b0 <ucg_clip_is_x_visible+0x3e>
 80039ae:	2301      	movs	r3, #1
 80039b0:	4618      	mov	r0, r3
 80039b2:	3714      	adds	r7, #20
 80039b4:	46bd      	mov	sp, r7
 80039b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ba:	4770      	bx	lr

080039bc <ucg_clip_is_y_visible>:
 80039bc:	b480      	push	{r7}
 80039be:	b085      	sub	sp, #20
 80039c0:	af00      	add	r7, sp, #0
 80039c2:	6078      	str	r0, [r7, #4]
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80039c8:	81fb      	strh	r3, [r7, #14]
 80039ca:	89fa      	ldrh	r2, [r7, #14]
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 80039d2:	b29b      	uxth	r3, r3
 80039d4:	1ad3      	subs	r3, r2, r3
 80039d6:	b29b      	uxth	r3, r3
 80039d8:	81fb      	strh	r3, [r7, #14]
 80039da:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80039de:	2b00      	cmp	r3, #0
 80039e0:	da01      	bge.n	80039e6 <ucg_clip_is_y_visible+0x2a>
 80039e2:	2300      	movs	r3, #0
 80039e4:	e009      	b.n	80039fa <ucg_clip_is_y_visible+0x3e>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 80039ec:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80039f0:	429a      	cmp	r2, r3
 80039f2:	db01      	blt.n	80039f8 <ucg_clip_is_y_visible+0x3c>
 80039f4:	2300      	movs	r3, #0
 80039f6:	e000      	b.n	80039fa <ucg_clip_is_y_visible+0x3e>
 80039f8:	2301      	movs	r3, #1
 80039fa:	4618      	mov	r0, r3
 80039fc:	3714      	adds	r7, #20
 80039fe:	46bd      	mov	sp, r7
 8003a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a04:	4770      	bx	lr

08003a06 <ucg_clip_intersection>:
 8003a06:	b480      	push	{r7}
 8003a08:	b087      	sub	sp, #28
 8003a0a:	af00      	add	r7, sp, #0
 8003a0c:	60f8      	str	r0, [r7, #12]
 8003a0e:	60b9      	str	r1, [r7, #8]
 8003a10:	4611      	mov	r1, r2
 8003a12:	461a      	mov	r2, r3
 8003a14:	460b      	mov	r3, r1
 8003a16:	80fb      	strh	r3, [r7, #6]
 8003a18:	4613      	mov	r3, r2
 8003a1a:	80bb      	strh	r3, [r7, #4]
 8003a1c:	68fb      	ldr	r3, [r7, #12]
 8003a1e:	881b      	ldrh	r3, [r3, #0]
 8003a20:	82fb      	strh	r3, [r7, #22]
 8003a22:	68bb      	ldr	r3, [r7, #8]
 8003a24:	881b      	ldrh	r3, [r3, #0]
 8003a26:	82bb      	strh	r3, [r7, #20]
 8003a28:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003a2c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8003a30:	429a      	cmp	r2, r3
 8003a32:	db01      	blt.n	8003a38 <ucg_clip_intersection+0x32>
 8003a34:	2300      	movs	r3, #0
 8003a36:	e01a      	b.n	8003a6e <ucg_clip_intersection+0x68>
 8003a38:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003a3c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003a40:	429a      	cmp	r2, r3
 8003a42:	dc01      	bgt.n	8003a48 <ucg_clip_intersection+0x42>
 8003a44:	2300      	movs	r3, #0
 8003a46:	e012      	b.n	8003a6e <ucg_clip_intersection+0x68>
 8003a48:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003a4c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003a50:	429a      	cmp	r2, r3
 8003a52:	da02      	bge.n	8003a5a <ucg_clip_intersection+0x54>
 8003a54:	68fb      	ldr	r3, [r7, #12]
 8003a56:	88fa      	ldrh	r2, [r7, #6]
 8003a58:	801a      	strh	r2, [r3, #0]
 8003a5a:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003a5e:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8003a62:	429a      	cmp	r2, r3
 8003a64:	dd02      	ble.n	8003a6c <ucg_clip_intersection+0x66>
 8003a66:	68bb      	ldr	r3, [r7, #8]
 8003a68:	88ba      	ldrh	r2, [r7, #4]
 8003a6a:	801a      	strh	r2, [r3, #0]
 8003a6c:	2301      	movs	r3, #1
 8003a6e:	4618      	mov	r0, r3
 8003a70:	371c      	adds	r7, #28
 8003a72:	46bd      	mov	sp, r7
 8003a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a78:	4770      	bx	lr

08003a7a <ucg_clip_is_pixel_visible>:
 8003a7a:	b580      	push	{r7, lr}
 8003a7c:	b082      	sub	sp, #8
 8003a7e:	af00      	add	r7, sp, #0
 8003a80:	6078      	str	r0, [r7, #4]
 8003a82:	6878      	ldr	r0, [r7, #4]
 8003a84:	f7ff ff75 	bl	8003972 <ucg_clip_is_x_visible>
 8003a88:	4603      	mov	r3, r0
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d101      	bne.n	8003a92 <ucg_clip_is_pixel_visible+0x18>
 8003a8e:	2300      	movs	r3, #0
 8003a90:	e008      	b.n	8003aa4 <ucg_clip_is_pixel_visible+0x2a>
 8003a92:	6878      	ldr	r0, [r7, #4]
 8003a94:	f7ff ff92 	bl	80039bc <ucg_clip_is_y_visible>
 8003a98:	4603      	mov	r3, r0
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d101      	bne.n	8003aa2 <ucg_clip_is_pixel_visible+0x28>
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	e000      	b.n	8003aa4 <ucg_clip_is_pixel_visible+0x2a>
 8003aa2:	2301      	movs	r3, #1
 8003aa4:	4618      	mov	r0, r3
 8003aa6:	3708      	adds	r7, #8
 8003aa8:	46bd      	mov	sp, r7
 8003aaa:	bd80      	pop	{r7, pc}

08003aac <ucg_clip_l90fx>:
 8003aac:	b590      	push	{r4, r7, lr}
 8003aae:	b085      	sub	sp, #20
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	6078      	str	r0, [r7, #4]
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	2200      	movs	r2, #0
 8003ab8:	861a      	strh	r2, [r3, #48]	; 0x30
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003ac0:	2b03      	cmp	r3, #3
 8003ac2:	f200 816d 	bhi.w	8003da0 <ucg_clip_l90fx+0x2f4>
 8003ac6:	a201      	add	r2, pc, #4	; (adr r2, 8003acc <ucg_clip_l90fx+0x20>)
 8003ac8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003acc:	08003add 	.word	0x08003add
 8003ad0:	08003b83 	.word	0x08003b83
 8003ad4:	08003c29 	.word	0x08003c29
 8003ad8:	08003ce5 	.word	0x08003ce5
 8003adc:	6878      	ldr	r0, [r7, #4]
 8003ade:	f7ff ff6d 	bl	80039bc <ucg_clip_is_y_visible>
 8003ae2:	4603      	mov	r3, r0
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	d101      	bne.n	8003aec <ucg_clip_l90fx+0x40>
 8003ae8:	2300      	movs	r3, #0
 8003aea:	e15a      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003af2:	81fb      	strh	r3, [r7, #14]
 8003af4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003af8:	81bb      	strh	r3, [r7, #12]
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003b00:	b29a      	uxth	r2, r3
 8003b02:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003b06:	b29b      	uxth	r3, r3
 8003b08:	4413      	add	r3, r2
 8003b0a:	b29b      	uxth	r3, r3
 8003b0c:	b21b      	sxth	r3, r3
 8003b0e:	81bb      	strh	r3, [r7, #12]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003b1c:	b29a      	uxth	r2, r3
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003b24:	b29b      	uxth	r3, r3
 8003b26:	4413      	add	r3, r2
 8003b28:	b29b      	uxth	r3, r3
 8003b2a:	b21b      	sxth	r3, r3
 8003b2c:	f107 010c 	add.w	r1, r7, #12
 8003b30:	f107 000e 	add.w	r0, r7, #14
 8003b34:	4622      	mov	r2, r4
 8003b36:	f7ff ff66 	bl	8003a06 <ucg_clip_intersection>
 8003b3a:	4603      	mov	r3, r0
 8003b3c:	2b00      	cmp	r3, #0
 8003b3e:	d101      	bne.n	8003b44 <ucg_clip_l90fx+0x98>
 8003b40:	2300      	movs	r3, #0
 8003b42:	e12e      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003b44:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003b48:	b29a      	uxth	r2, r3
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003b50:	b29b      	uxth	r3, r3
 8003b52:	1ad3      	subs	r3, r2, r3
 8003b54:	b29b      	uxth	r3, r3
 8003b56:	b21a      	sxth	r2, r3
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	861a      	strh	r2, [r3, #48]	; 0x30
 8003b5c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	849a      	strh	r2, [r3, #36]	; 0x24
 8003b64:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003b68:	b29a      	uxth	r2, r3
 8003b6a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003b6e:	b29b      	uxth	r3, r3
 8003b70:	1ad3      	subs	r3, r2, r3
 8003b72:	b29b      	uxth	r3, r3
 8003b74:	b21b      	sxth	r3, r3
 8003b76:	81bb      	strh	r3, [r7, #12]
 8003b78:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003b80:	e10e      	b.n	8003da0 <ucg_clip_l90fx+0x2f4>
 8003b82:	6878      	ldr	r0, [r7, #4]
 8003b84:	f7ff fef5 	bl	8003972 <ucg_clip_is_x_visible>
 8003b88:	4603      	mov	r3, r0
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d101      	bne.n	8003b92 <ucg_clip_l90fx+0xe6>
 8003b8e:	2300      	movs	r3, #0
 8003b90:	e107      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003b98:	81fb      	strh	r3, [r7, #14]
 8003b9a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003b9e:	81bb      	strh	r3, [r7, #12]
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003ba6:	b29a      	uxth	r2, r3
 8003ba8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003bac:	b29b      	uxth	r3, r3
 8003bae:	4413      	add	r3, r2
 8003bb0:	b29b      	uxth	r3, r3
 8003bb2:	b21b      	sxth	r3, r3
 8003bb4:	81bb      	strh	r3, [r7, #12]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003bc2:	b29a      	uxth	r2, r3
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003bca:	b29b      	uxth	r3, r3
 8003bcc:	4413      	add	r3, r2
 8003bce:	b29b      	uxth	r3, r3
 8003bd0:	b21b      	sxth	r3, r3
 8003bd2:	f107 010c 	add.w	r1, r7, #12
 8003bd6:	f107 000e 	add.w	r0, r7, #14
 8003bda:	4622      	mov	r2, r4
 8003bdc:	f7ff ff13 	bl	8003a06 <ucg_clip_intersection>
 8003be0:	4603      	mov	r3, r0
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d101      	bne.n	8003bea <ucg_clip_l90fx+0x13e>
 8003be6:	2300      	movs	r3, #0
 8003be8:	e0db      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003bea:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003bee:	b29a      	uxth	r2, r3
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003bf6:	b29b      	uxth	r3, r3
 8003bf8:	1ad3      	subs	r3, r2, r3
 8003bfa:	b29b      	uxth	r3, r3
 8003bfc:	b21a      	sxth	r2, r3
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	861a      	strh	r2, [r3, #48]	; 0x30
 8003c02:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	84da      	strh	r2, [r3, #38]	; 0x26
 8003c0a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003c0e:	b29a      	uxth	r2, r3
 8003c10:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c14:	b29b      	uxth	r3, r3
 8003c16:	1ad3      	subs	r3, r2, r3
 8003c18:	b29b      	uxth	r3, r3
 8003c1a:	b21b      	sxth	r3, r3
 8003c1c:	81bb      	strh	r3, [r7, #12]
 8003c1e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003c26:	e0bb      	b.n	8003da0 <ucg_clip_l90fx+0x2f4>
 8003c28:	6878      	ldr	r0, [r7, #4]
 8003c2a:	f7ff fec7 	bl	80039bc <ucg_clip_is_y_visible>
 8003c2e:	4603      	mov	r3, r0
 8003c30:	2b00      	cmp	r3, #0
 8003c32:	d101      	bne.n	8003c38 <ucg_clip_l90fx+0x18c>
 8003c34:	2300      	movs	r3, #0
 8003c36:	e0b4      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003c3e:	81bb      	strh	r3, [r7, #12]
 8003c40:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003c44:	b29b      	uxth	r3, r3
 8003c46:	3301      	adds	r3, #1
 8003c48:	b29b      	uxth	r3, r3
 8003c4a:	b21b      	sxth	r3, r3
 8003c4c:	81bb      	strh	r3, [r7, #12]
 8003c4e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003c52:	81fb      	strh	r3, [r7, #14]
 8003c54:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c58:	b29a      	uxth	r2, r3
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003c60:	b29b      	uxth	r3, r3
 8003c62:	1ad3      	subs	r3, r2, r3
 8003c64:	b29b      	uxth	r3, r3
 8003c66:	b21b      	sxth	r3, r3
 8003c68:	81fb      	strh	r3, [r7, #14]
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003c76:	b29a      	uxth	r2, r3
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003c7e:	b29b      	uxth	r3, r3
 8003c80:	4413      	add	r3, r2
 8003c82:	b29b      	uxth	r3, r3
 8003c84:	b21b      	sxth	r3, r3
 8003c86:	f107 010c 	add.w	r1, r7, #12
 8003c8a:	f107 000e 	add.w	r0, r7, #14
 8003c8e:	4622      	mov	r2, r4
 8003c90:	f7ff feb9 	bl	8003a06 <ucg_clip_intersection>
 8003c94:	4603      	mov	r3, r0
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	d101      	bne.n	8003c9e <ucg_clip_l90fx+0x1f2>
 8003c9a:	2300      	movs	r3, #0
 8003c9c:	e081      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003c9e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003ca2:	b29a      	uxth	r2, r3
 8003ca4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003ca8:	b29b      	uxth	r3, r3
 8003caa:	1ad3      	subs	r3, r2, r3
 8003cac:	b29b      	uxth	r3, r3
 8003cae:	b21a      	sxth	r2, r3
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003cb4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003cb8:	b29b      	uxth	r3, r3
 8003cba:	3b01      	subs	r3, #1
 8003cbc:	b29b      	uxth	r3, r3
 8003cbe:	b21b      	sxth	r3, r3
 8003cc0:	81bb      	strh	r3, [r7, #12]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003cc8:	b29a      	uxth	r2, r3
 8003cca:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003cce:	b29b      	uxth	r3, r3
 8003cd0:	1ad3      	subs	r3, r2, r3
 8003cd2:	b29b      	uxth	r3, r3
 8003cd4:	b21a      	sxth	r2, r3
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	861a      	strh	r2, [r3, #48]	; 0x30
 8003cda:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	849a      	strh	r2, [r3, #36]	; 0x24
 8003ce2:	e05d      	b.n	8003da0 <ucg_clip_l90fx+0x2f4>
 8003ce4:	6878      	ldr	r0, [r7, #4]
 8003ce6:	f7ff fe44 	bl	8003972 <ucg_clip_is_x_visible>
 8003cea:	4603      	mov	r3, r0
 8003cec:	2b00      	cmp	r3, #0
 8003cee:	d101      	bne.n	8003cf4 <ucg_clip_l90fx+0x248>
 8003cf0:	2300      	movs	r3, #0
 8003cf2:	e056      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003cfa:	81bb      	strh	r3, [r7, #12]
 8003cfc:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d00:	b29b      	uxth	r3, r3
 8003d02:	3301      	adds	r3, #1
 8003d04:	b29b      	uxth	r3, r3
 8003d06:	b21b      	sxth	r3, r3
 8003d08:	81bb      	strh	r3, [r7, #12]
 8003d0a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d0e:	81fb      	strh	r3, [r7, #14]
 8003d10:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003d14:	b29a      	uxth	r2, r3
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003d1c:	b29b      	uxth	r3, r3
 8003d1e:	1ad3      	subs	r3, r2, r3
 8003d20:	b29b      	uxth	r3, r3
 8003d22:	b21b      	sxth	r3, r3
 8003d24:	81fb      	strh	r3, [r7, #14]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003d32:	b29a      	uxth	r2, r3
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003d3a:	b29b      	uxth	r3, r3
 8003d3c:	4413      	add	r3, r2
 8003d3e:	b29b      	uxth	r3, r3
 8003d40:	b21b      	sxth	r3, r3
 8003d42:	f107 010c 	add.w	r1, r7, #12
 8003d46:	f107 000e 	add.w	r0, r7, #14
 8003d4a:	4622      	mov	r2, r4
 8003d4c:	f7ff fe5b 	bl	8003a06 <ucg_clip_intersection>
 8003d50:	4603      	mov	r3, r0
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	d101      	bne.n	8003d5a <ucg_clip_l90fx+0x2ae>
 8003d56:	2300      	movs	r3, #0
 8003d58:	e023      	b.n	8003da2 <ucg_clip_l90fx+0x2f6>
 8003d5a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d5e:	b29a      	uxth	r2, r3
 8003d60:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003d64:	b29b      	uxth	r3, r3
 8003d66:	1ad3      	subs	r3, r2, r3
 8003d68:	b29b      	uxth	r3, r3
 8003d6a:	b21a      	sxth	r2, r3
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003d70:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d74:	b29b      	uxth	r3, r3
 8003d76:	3b01      	subs	r3, #1
 8003d78:	b29b      	uxth	r3, r3
 8003d7a:	b21b      	sxth	r3, r3
 8003d7c:	81bb      	strh	r3, [r7, #12]
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003d84:	b29a      	uxth	r2, r3
 8003d86:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d8a:	b29b      	uxth	r3, r3
 8003d8c:	1ad3      	subs	r3, r2, r3
 8003d8e:	b29b      	uxth	r3, r3
 8003d90:	b21a      	sxth	r2, r3
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	861a      	strh	r2, [r3, #48]	; 0x30
 8003d96:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	84da      	strh	r2, [r3, #38]	; 0x26
 8003d9e:	bf00      	nop
 8003da0:	2301      	movs	r3, #1
 8003da2:	4618      	mov	r0, r3
 8003da4:	3714      	adds	r7, #20
 8003da6:	46bd      	mov	sp, r7
 8003da8:	bd90      	pop	{r4, r7, pc}
 8003daa:	bf00      	nop

08003dac <ucg_clip_l90se>:
 8003dac:	b580      	push	{r7, lr}
 8003dae:	b084      	sub	sp, #16
 8003db0:	af00      	add	r7, sp, #0
 8003db2:	6078      	str	r0, [r7, #4]
 8003db4:	6878      	ldr	r0, [r7, #4]
 8003db6:	f7ff fe79 	bl	8003aac <ucg_clip_l90fx>
 8003dba:	4603      	mov	r3, r0
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d101      	bne.n	8003dc4 <ucg_clip_l90se+0x18>
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	e019      	b.n	8003df8 <ucg_clip_l90se+0x4c>
 8003dc4:	2300      	movs	r3, #0
 8003dc6:	73fb      	strb	r3, [r7, #15]
 8003dc8:	e012      	b.n	8003df0 <ucg_clip_l90se+0x44>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8003dd0:	7bfa      	ldrb	r2, [r7, #15]
 8003dd2:	4613      	mov	r3, r2
 8003dd4:	00db      	lsls	r3, r3, #3
 8003dd6:	1a9b      	subs	r3, r3, r2
 8003dd8:	005b      	lsls	r3, r3, #1
 8003dda:	18ca      	adds	r2, r1, r3
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8003de2:	4619      	mov	r1, r3
 8003de4:	4610      	mov	r0, r2
 8003de6:	f7fe f9e8 	bl	80021ba <ucg_ccs_seek>
 8003dea:	7bfb      	ldrb	r3, [r7, #15]
 8003dec:	3301      	adds	r3, #1
 8003dee:	73fb      	strb	r3, [r7, #15]
 8003df0:	7bfb      	ldrb	r3, [r7, #15]
 8003df2:	2b02      	cmp	r3, #2
 8003df4:	d9e9      	bls.n	8003dca <ucg_clip_l90se+0x1e>
 8003df6:	2301      	movs	r3, #1
 8003df8:	4618      	mov	r0, r3
 8003dfa:	3710      	adds	r7, #16
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	bd80      	pop	{r7, pc}

08003e00 <ucg_com_PowerDown>:
 8003e00:	b590      	push	{r4, r7, lr}
 8003e02:	b083      	sub	sp, #12
 8003e04:	af00      	add	r7, sp, #0
 8003e06:	6078      	str	r0, [r7, #4]
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003e0e:	f003 0308 	and.w	r3, r3, #8
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d006      	beq.n	8003e24 <ucg_com_PowerDown+0x24>
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	69dc      	ldr	r4, [r3, #28]
 8003e1a:	2300      	movs	r3, #0
 8003e1c:	2200      	movs	r2, #0
 8003e1e:	210b      	movs	r1, #11
 8003e20:	6878      	ldr	r0, [r7, #4]
 8003e22:	47a0      	blx	r4
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003e2a:	f023 0308 	bic.w	r3, r3, #8
 8003e2e:	b2da      	uxtb	r2, r3
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003e36:	bf00      	nop
 8003e38:	370c      	adds	r7, #12
 8003e3a:	46bd      	mov	sp, r7
 8003e3c:	bd90      	pop	{r4, r7, pc}

08003e3e <ucg_com_PowerUp>:
 8003e3e:	b590      	push	{r4, r7, lr}
 8003e40:	b085      	sub	sp, #20
 8003e42:	af00      	add	r7, sp, #0
 8003e44:	6078      	str	r0, [r7, #4]
 8003e46:	460b      	mov	r3, r1
 8003e48:	807b      	strh	r3, [r7, #2]
 8003e4a:	4613      	mov	r3, r2
 8003e4c:	803b      	strh	r3, [r7, #0]
 8003e4e:	887b      	ldrh	r3, [r7, #2]
 8003e50:	813b      	strh	r3, [r7, #8]
 8003e52:	883b      	ldrh	r3, [r7, #0]
 8003e54:	817b      	strh	r3, [r7, #10]
 8003e56:	6878      	ldr	r0, [r7, #4]
 8003e58:	f7ff ffd2 	bl	8003e00 <ucg_com_PowerDown>
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	2200      	movs	r2, #0
 8003e60:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	69dc      	ldr	r4, [r3, #28]
 8003e68:	f107 0308 	add.w	r3, r7, #8
 8003e6c:	2200      	movs	r2, #0
 8003e6e:	210a      	movs	r1, #10
 8003e70:	6878      	ldr	r0, [r7, #4]
 8003e72:	47a0      	blx	r4
 8003e74:	4603      	mov	r3, r0
 8003e76:	81fb      	strh	r3, [r7, #14]
 8003e78:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003e7c:	2b00      	cmp	r3, #0
 8003e7e:	d008      	beq.n	8003e92 <ucg_com_PowerUp+0x54>
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003e86:	f043 0308 	orr.w	r3, r3, #8
 8003e8a:	b2da      	uxtb	r2, r3
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003e92:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003e96:	4618      	mov	r0, r3
 8003e98:	3714      	adds	r7, #20
 8003e9a:	46bd      	mov	sp, r7
 8003e9c:	bd90      	pop	{r4, r7, pc}

08003e9e <ucg_com_SetLineStatus>:
 8003e9e:	b590      	push	{r4, r7, lr}
 8003ea0:	b083      	sub	sp, #12
 8003ea2:	af00      	add	r7, sp, #0
 8003ea4:	6078      	str	r0, [r7, #4]
 8003ea6:	4608      	mov	r0, r1
 8003ea8:	4611      	mov	r1, r2
 8003eaa:	461a      	mov	r2, r3
 8003eac:	4603      	mov	r3, r0
 8003eae:	70fb      	strb	r3, [r7, #3]
 8003eb0:	460b      	mov	r3, r1
 8003eb2:	70bb      	strb	r3, [r7, #2]
 8003eb4:	4613      	mov	r3, r2
 8003eb6:	707b      	strb	r3, [r7, #1]
 8003eb8:	78fb      	ldrb	r3, [r7, #3]
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d131      	bne.n	8003f22 <ucg_com_SetLineStatus+0x84>
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003ec4:	78bb      	ldrb	r3, [r7, #2]
 8003ec6:	4013      	ands	r3, r2
 8003ec8:	b2db      	uxtb	r3, r3
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	d008      	beq.n	8003ee0 <ucg_com_SetLineStatus+0x42>
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003ed4:	78bb      	ldrb	r3, [r7, #2]
 8003ed6:	4013      	ands	r3, r2
 8003ed8:	b2db      	uxtb	r3, r3
 8003eda:	78ba      	ldrb	r2, [r7, #2]
 8003edc:	429a      	cmp	r2, r3
 8003ede:	d14b      	bne.n	8003f78 <ucg_com_SetLineStatus+0xda>
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	69dc      	ldr	r4, [r3, #28]
 8003ee4:	787b      	ldrb	r3, [r7, #1]
 8003ee6:	b219      	sxth	r1, r3
 8003ee8:	78fb      	ldrb	r3, [r7, #3]
 8003eea:	b29a      	uxth	r2, r3
 8003eec:	2300      	movs	r3, #0
 8003eee:	6878      	ldr	r0, [r7, #4]
 8003ef0:	47a0      	blx	r4
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003ef8:	b25a      	sxtb	r2, r3
 8003efa:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8003efe:	43db      	mvns	r3, r3
 8003f00:	b25b      	sxtb	r3, r3
 8003f02:	4013      	ands	r3, r2
 8003f04:	b25b      	sxtb	r3, r3
 8003f06:	b2da      	uxtb	r2, r3
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003f14:	78bb      	ldrb	r3, [r7, #2]
 8003f16:	4313      	orrs	r3, r2
 8003f18:	b2da      	uxtb	r2, r3
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003f20:	e02a      	b.n	8003f78 <ucg_com_SetLineStatus+0xda>
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003f28:	78bb      	ldrb	r3, [r7, #2]
 8003f2a:	4013      	ands	r3, r2
 8003f2c:	b2db      	uxtb	r3, r3
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d007      	beq.n	8003f42 <ucg_com_SetLineStatus+0xa4>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003f38:	78bb      	ldrb	r3, [r7, #2]
 8003f3a:	4013      	ands	r3, r2
 8003f3c:	b2db      	uxtb	r3, r3
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	d11a      	bne.n	8003f78 <ucg_com_SetLineStatus+0xda>
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	69dc      	ldr	r4, [r3, #28]
 8003f46:	787b      	ldrb	r3, [r7, #1]
 8003f48:	b219      	sxth	r1, r3
 8003f4a:	78fb      	ldrb	r3, [r7, #3]
 8003f4c:	b29a      	uxth	r2, r3
 8003f4e:	2300      	movs	r3, #0
 8003f50:	6878      	ldr	r0, [r7, #4]
 8003f52:	47a0      	blx	r4
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003f5a:	78bb      	ldrb	r3, [r7, #2]
 8003f5c:	4313      	orrs	r3, r2
 8003f5e:	b2da      	uxtb	r2, r3
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003f6c:	78bb      	ldrb	r3, [r7, #2]
 8003f6e:	4313      	orrs	r3, r2
 8003f70:	b2da      	uxtb	r2, r3
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003f78:	bf00      	nop
 8003f7a:	370c      	adds	r7, #12
 8003f7c:	46bd      	mov	sp, r7
 8003f7e:	bd90      	pop	{r4, r7, pc}

08003f80 <ucg_com_SetResetLineStatus>:
 8003f80:	b580      	push	{r7, lr}
 8003f82:	b082      	sub	sp, #8
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	6078      	str	r0, [r7, #4]
 8003f88:	460b      	mov	r3, r1
 8003f8a:	70fb      	strb	r3, [r7, #3]
 8003f8c:	78f9      	ldrb	r1, [r7, #3]
 8003f8e:	230d      	movs	r3, #13
 8003f90:	2204      	movs	r2, #4
 8003f92:	6878      	ldr	r0, [r7, #4]
 8003f94:	f7ff ff83 	bl	8003e9e <ucg_com_SetLineStatus>
 8003f98:	bf00      	nop
 8003f9a:	3708      	adds	r7, #8
 8003f9c:	46bd      	mov	sp, r7
 8003f9e:	bd80      	pop	{r7, pc}

08003fa0 <ucg_com_SetCSLineStatus>:
 8003fa0:	b580      	push	{r7, lr}
 8003fa2:	b082      	sub	sp, #8
 8003fa4:	af00      	add	r7, sp, #0
 8003fa6:	6078      	str	r0, [r7, #4]
 8003fa8:	460b      	mov	r3, r1
 8003faa:	70fb      	strb	r3, [r7, #3]
 8003fac:	78f9      	ldrb	r1, [r7, #3]
 8003fae:	230e      	movs	r3, #14
 8003fb0:	2202      	movs	r2, #2
 8003fb2:	6878      	ldr	r0, [r7, #4]
 8003fb4:	f7ff ff73 	bl	8003e9e <ucg_com_SetLineStatus>
 8003fb8:	bf00      	nop
 8003fba:	3708      	adds	r7, #8
 8003fbc:	46bd      	mov	sp, r7
 8003fbe:	bd80      	pop	{r7, pc}

08003fc0 <ucg_com_SetCDLineStatus>:
 8003fc0:	b580      	push	{r7, lr}
 8003fc2:	b082      	sub	sp, #8
 8003fc4:	af00      	add	r7, sp, #0
 8003fc6:	6078      	str	r0, [r7, #4]
 8003fc8:	460b      	mov	r3, r1
 8003fca:	70fb      	strb	r3, [r7, #3]
 8003fcc:	78f9      	ldrb	r1, [r7, #3]
 8003fce:	230f      	movs	r3, #15
 8003fd0:	2201      	movs	r2, #1
 8003fd2:	6878      	ldr	r0, [r7, #4]
 8003fd4:	f7ff ff63 	bl	8003e9e <ucg_com_SetLineStatus>
 8003fd8:	bf00      	nop
 8003fda:	3708      	adds	r7, #8
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	bd80      	pop	{r7, pc}

08003fe0 <ucg_com_DelayMicroseconds>:
 8003fe0:	b590      	push	{r4, r7, lr}
 8003fe2:	b083      	sub	sp, #12
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	6078      	str	r0, [r7, #4]
 8003fe8:	460b      	mov	r3, r1
 8003fea:	807b      	strh	r3, [r7, #2]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	69dc      	ldr	r4, [r3, #28]
 8003ff0:	887a      	ldrh	r2, [r7, #2]
 8003ff2:	2300      	movs	r3, #0
 8003ff4:	210c      	movs	r1, #12
 8003ff6:	6878      	ldr	r0, [r7, #4]
 8003ff8:	47a0      	blx	r4
 8003ffa:	bf00      	nop
 8003ffc:	370c      	adds	r7, #12
 8003ffe:	46bd      	mov	sp, r7
 8004000:	bd90      	pop	{r4, r7, pc}

08004002 <ucg_com_DelayMilliseconds>:
 8004002:	b580      	push	{r7, lr}
 8004004:	b082      	sub	sp, #8
 8004006:	af00      	add	r7, sp, #0
 8004008:	6078      	str	r0, [r7, #4]
 800400a:	460b      	mov	r3, r1
 800400c:	807b      	strh	r3, [r7, #2]
 800400e:	e007      	b.n	8004020 <ucg_com_DelayMilliseconds+0x1e>
 8004010:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004014:	6878      	ldr	r0, [r7, #4]
 8004016:	f7ff ffe3 	bl	8003fe0 <ucg_com_DelayMicroseconds>
 800401a:	887b      	ldrh	r3, [r7, #2]
 800401c:	3b01      	subs	r3, #1
 800401e:	807b      	strh	r3, [r7, #2]
 8004020:	887b      	ldrh	r3, [r7, #2]
 8004022:	2b00      	cmp	r3, #0
 8004024:	d1f4      	bne.n	8004010 <ucg_com_DelayMilliseconds+0xe>
 8004026:	bf00      	nop
 8004028:	3708      	adds	r7, #8
 800402a:	46bd      	mov	sp, r7
 800402c:	bd80      	pop	{r7, pc}

0800402e <ucg_com_SendByte>:
 800402e:	b590      	push	{r4, r7, lr}
 8004030:	b083      	sub	sp, #12
 8004032:	af00      	add	r7, sp, #0
 8004034:	6078      	str	r0, [r7, #4]
 8004036:	460b      	mov	r3, r1
 8004038:	70fb      	strb	r3, [r7, #3]
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	69dc      	ldr	r4, [r3, #28]
 800403e:	78fb      	ldrb	r3, [r7, #3]
 8004040:	b29a      	uxth	r2, r3
 8004042:	2300      	movs	r3, #0
 8004044:	2110      	movs	r1, #16
 8004046:	6878      	ldr	r0, [r7, #4]
 8004048:	47a0      	blx	r4
 800404a:	bf00      	nop
 800404c:	370c      	adds	r7, #12
 800404e:	46bd      	mov	sp, r7
 8004050:	bd90      	pop	{r4, r7, pc}

08004052 <ucg_com_SendStringP>:
 8004052:	b590      	push	{r4, r7, lr}
 8004054:	b087      	sub	sp, #28
 8004056:	af00      	add	r7, sp, #0
 8004058:	60f8      	str	r0, [r7, #12]
 800405a:	460b      	mov	r3, r1
 800405c:	607a      	str	r2, [r7, #4]
 800405e:	817b      	strh	r3, [r7, #10]
 8004060:	e010      	b.n	8004084 <ucg_com_SendStringP+0x32>
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	781b      	ldrb	r3, [r3, #0]
 8004066:	75fb      	strb	r3, [r7, #23]
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	69dc      	ldr	r4, [r3, #28]
 800406c:	7dfb      	ldrb	r3, [r7, #23]
 800406e:	b29a      	uxth	r2, r3
 8004070:	2300      	movs	r3, #0
 8004072:	2110      	movs	r1, #16
 8004074:	68f8      	ldr	r0, [r7, #12]
 8004076:	47a0      	blx	r4
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	3301      	adds	r3, #1
 800407c:	607b      	str	r3, [r7, #4]
 800407e:	897b      	ldrh	r3, [r7, #10]
 8004080:	3b01      	subs	r3, #1
 8004082:	817b      	strh	r3, [r7, #10]
 8004084:	897b      	ldrh	r3, [r7, #10]
 8004086:	2b00      	cmp	r3, #0
 8004088:	d1eb      	bne.n	8004062 <ucg_com_SendStringP+0x10>
 800408a:	bf00      	nop
 800408c:	371c      	adds	r7, #28
 800408e:	46bd      	mov	sp, r7
 8004090:	bd90      	pop	{r4, r7, pc}

08004092 <ucg_com_SendCmdArg>:
 8004092:	b580      	push	{r7, lr}
 8004094:	b084      	sub	sp, #16
 8004096:	af00      	add	r7, sp, #0
 8004098:	60f8      	str	r0, [r7, #12]
 800409a:	60b9      	str	r1, [r7, #8]
 800409c:	4611      	mov	r1, r2
 800409e:	461a      	mov	r2, r3
 80040a0:	460b      	mov	r3, r1
 80040a2:	71fb      	strb	r3, [r7, #7]
 80040a4:	4613      	mov	r3, r2
 80040a6:	71bb      	strb	r3, [r7, #6]
 80040a8:	68fb      	ldr	r3, [r7, #12]
 80040aa:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80040ae:	085b      	lsrs	r3, r3, #1
 80040b0:	b2db      	uxtb	r3, r3
 80040b2:	f003 0301 	and.w	r3, r3, #1
 80040b6:	b2db      	uxtb	r3, r3
 80040b8:	4619      	mov	r1, r3
 80040ba:	68f8      	ldr	r0, [r7, #12]
 80040bc:	f7ff ff80 	bl	8003fc0 <ucg_com_SetCDLineStatus>
 80040c0:	79fb      	ldrb	r3, [r7, #7]
 80040c2:	b29b      	uxth	r3, r3
 80040c4:	68ba      	ldr	r2, [r7, #8]
 80040c6:	4619      	mov	r1, r3
 80040c8:	68f8      	ldr	r0, [r7, #12]
 80040ca:	f7ff ffc2 	bl	8004052 <ucg_com_SendStringP>
 80040ce:	79bb      	ldrb	r3, [r7, #6]
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	d014      	beq.n	80040fe <ucg_com_SendCmdArg+0x6c>
 80040d4:	79fb      	ldrb	r3, [r7, #7]
 80040d6:	68ba      	ldr	r2, [r7, #8]
 80040d8:	4413      	add	r3, r2
 80040da:	60bb      	str	r3, [r7, #8]
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80040e2:	f003 0301 	and.w	r3, r3, #1
 80040e6:	b2db      	uxtb	r3, r3
 80040e8:	4619      	mov	r1, r3
 80040ea:	68f8      	ldr	r0, [r7, #12]
 80040ec:	f7ff ff68 	bl	8003fc0 <ucg_com_SetCDLineStatus>
 80040f0:	79bb      	ldrb	r3, [r7, #6]
 80040f2:	b29b      	uxth	r3, r3
 80040f4:	68ba      	ldr	r2, [r7, #8]
 80040f6:	4619      	mov	r1, r3
 80040f8:	68f8      	ldr	r0, [r7, #12]
 80040fa:	f7ff ffaa 	bl	8004052 <ucg_com_SendStringP>
 80040fe:	bf00      	nop
 8004100:	3710      	adds	r7, #16
 8004102:	46bd      	mov	sp, r7
 8004104:	bd80      	pop	{r7, pc}
	...

08004108 <ucg_com_SendCmdSeq>:
 8004108:	b580      	push	{r7, lr}
 800410a:	b084      	sub	sp, #16
 800410c:	af00      	add	r7, sp, #0
 800410e:	6078      	str	r0, [r7, #4]
 8004110:	6039      	str	r1, [r7, #0]
 8004112:	683b      	ldr	r3, [r7, #0]
 8004114:	781b      	ldrb	r3, [r3, #0]
 8004116:	73fb      	strb	r3, [r7, #15]
 8004118:	7bfb      	ldrb	r3, [r7, #15]
 800411a:	091b      	lsrs	r3, r3, #4
 800411c:	73bb      	strb	r3, [r7, #14]
 800411e:	7bfb      	ldrb	r3, [r7, #15]
 8004120:	f003 030f 	and.w	r3, r3, #15
 8004124:	737b      	strb	r3, [r7, #13]
 8004126:	7bbb      	ldrb	r3, [r7, #14]
 8004128:	2b0f      	cmp	r3, #15
 800412a:	f200 8124 	bhi.w	8004376 <ucg_com_SendCmdSeq+0x26e>
 800412e:	a201      	add	r2, pc, #4	; (adr r2, 8004134 <ucg_com_SendCmdSeq+0x2c>)
 8004130:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004134:	08004377 	.word	0x08004377
 8004138:	08004175 	.word	0x08004175
 800413c:	08004175 	.word	0x08004175
 8004140:	08004175 	.word	0x08004175
 8004144:	08004377 	.word	0x08004377
 8004148:	08004377 	.word	0x08004377
 800414c:	08004195 	.word	0x08004195
 8004150:	080041c7 	.word	0x080041c7
 8004154:	0800420b 	.word	0x0800420b
 8004158:	08004237 	.word	0x08004237
 800415c:	08004263 	.word	0x08004263
 8004160:	080042c3 	.word	0x080042c3
 8004164:	08004377 	.word	0x08004377
 8004168:	08004377 	.word	0x08004377
 800416c:	08004377 	.word	0x08004377
 8004170:	08004323 	.word	0x08004323
 8004174:	683b      	ldr	r3, [r7, #0]
 8004176:	1c59      	adds	r1, r3, #1
 8004178:	7b7b      	ldrb	r3, [r7, #13]
 800417a:	7bba      	ldrb	r2, [r7, #14]
 800417c:	6878      	ldr	r0, [r7, #4]
 800417e:	f7ff ff88 	bl	8004092 <ucg_com_SendCmdArg>
 8004182:	7bbb      	ldrb	r3, [r7, #14]
 8004184:	1c5a      	adds	r2, r3, #1
 8004186:	7b7b      	ldrb	r3, [r7, #13]
 8004188:	4413      	add	r3, r2
 800418a:	461a      	mov	r2, r3
 800418c:	683b      	ldr	r3, [r7, #0]
 800418e:	4413      	add	r3, r2
 8004190:	603b      	str	r3, [r7, #0]
 8004192:	e0ef      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 800419a:	f003 0301 	and.w	r3, r3, #1
 800419e:	b2db      	uxtb	r3, r3
 80041a0:	4619      	mov	r1, r3
 80041a2:	6878      	ldr	r0, [r7, #4]
 80041a4:	f7ff ff0c 	bl	8003fc0 <ucg_com_SetCDLineStatus>
 80041a8:	7b7b      	ldrb	r3, [r7, #13]
 80041aa:	b299      	uxth	r1, r3
 80041ac:	683b      	ldr	r3, [r7, #0]
 80041ae:	3301      	adds	r3, #1
 80041b0:	461a      	mov	r2, r3
 80041b2:	6878      	ldr	r0, [r7, #4]
 80041b4:	f7ff ff4d 	bl	8004052 <ucg_com_SendStringP>
 80041b8:	7b7b      	ldrb	r3, [r7, #13]
 80041ba:	3301      	adds	r3, #1
 80041bc:	461a      	mov	r2, r3
 80041be:	683b      	ldr	r3, [r7, #0]
 80041c0:	4413      	add	r3, r2
 80041c2:	603b      	str	r3, [r7, #0]
 80041c4:	e0d6      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80041cc:	085b      	lsrs	r3, r3, #1
 80041ce:	b2db      	uxtb	r3, r3
 80041d0:	f003 0301 	and.w	r3, r3, #1
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	bf0c      	ite	eq
 80041d8:	2301      	moveq	r3, #1
 80041da:	2300      	movne	r3, #0
 80041dc:	b2db      	uxtb	r3, r3
 80041de:	4619      	mov	r1, r3
 80041e0:	6878      	ldr	r0, [r7, #4]
 80041e2:	f7ff feed 	bl	8003fc0 <ucg_com_SetCDLineStatus>
 80041e6:	7b7b      	ldrb	r3, [r7, #13]
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d007      	beq.n	80041fc <ucg_com_SendCmdSeq+0xf4>
 80041ec:	7b7b      	ldrb	r3, [r7, #13]
 80041ee:	b299      	uxth	r1, r3
 80041f0:	683b      	ldr	r3, [r7, #0]
 80041f2:	3301      	adds	r3, #1
 80041f4:	461a      	mov	r2, r3
 80041f6:	6878      	ldr	r0, [r7, #4]
 80041f8:	f7ff ff2b 	bl	8004052 <ucg_com_SendStringP>
 80041fc:	7b7b      	ldrb	r3, [r7, #13]
 80041fe:	3301      	adds	r3, #1
 8004200:	461a      	mov	r2, r3
 8004202:	683b      	ldr	r3, [r7, #0]
 8004204:	4413      	add	r3, r2
 8004206:	603b      	str	r3, [r7, #0]
 8004208:	e0b4      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 800420a:	683b      	ldr	r3, [r7, #0]
 800420c:	3301      	adds	r3, #1
 800420e:	603b      	str	r3, [r7, #0]
 8004210:	683b      	ldr	r3, [r7, #0]
 8004212:	781b      	ldrb	r3, [r3, #0]
 8004214:	73fb      	strb	r3, [r7, #15]
 8004216:	7b7b      	ldrb	r3, [r7, #13]
 8004218:	b29b      	uxth	r3, r3
 800421a:	021b      	lsls	r3, r3, #8
 800421c:	b29a      	uxth	r2, r3
 800421e:	7bfb      	ldrb	r3, [r7, #15]
 8004220:	b29b      	uxth	r3, r3
 8004222:	4413      	add	r3, r2
 8004224:	b29b      	uxth	r3, r3
 8004226:	4619      	mov	r1, r3
 8004228:	6878      	ldr	r0, [r7, #4]
 800422a:	f7ff feea 	bl	8004002 <ucg_com_DelayMilliseconds>
 800422e:	683b      	ldr	r3, [r7, #0]
 8004230:	3301      	adds	r3, #1
 8004232:	603b      	str	r3, [r7, #0]
 8004234:	e09e      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 8004236:	683b      	ldr	r3, [r7, #0]
 8004238:	3301      	adds	r3, #1
 800423a:	603b      	str	r3, [r7, #0]
 800423c:	683b      	ldr	r3, [r7, #0]
 800423e:	781b      	ldrb	r3, [r3, #0]
 8004240:	73fb      	strb	r3, [r7, #15]
 8004242:	7b7b      	ldrb	r3, [r7, #13]
 8004244:	b29b      	uxth	r3, r3
 8004246:	021b      	lsls	r3, r3, #8
 8004248:	b29a      	uxth	r2, r3
 800424a:	7bfb      	ldrb	r3, [r7, #15]
 800424c:	b29b      	uxth	r3, r3
 800424e:	4413      	add	r3, r2
 8004250:	b29b      	uxth	r3, r3
 8004252:	4619      	mov	r1, r3
 8004254:	6878      	ldr	r0, [r7, #4]
 8004256:	f7ff fec3 	bl	8003fe0 <ucg_com_DelayMicroseconds>
 800425a:	683b      	ldr	r3, [r7, #0]
 800425c:	3301      	adds	r3, #1
 800425e:	603b      	str	r3, [r7, #0]
 8004260:	e088      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 8004262:	683b      	ldr	r3, [r7, #0]
 8004264:	3301      	adds	r3, #1
 8004266:	603b      	str	r3, [r7, #0]
 8004268:	683b      	ldr	r3, [r7, #0]
 800426a:	781b      	ldrb	r3, [r3, #0]
 800426c:	73fb      	strb	r3, [r7, #15]
 800426e:	683b      	ldr	r3, [r7, #0]
 8004270:	3301      	adds	r3, #1
 8004272:	603b      	str	r3, [r7, #0]
 8004274:	683b      	ldr	r3, [r7, #0]
 8004276:	781b      	ldrb	r3, [r3, #0]
 8004278:	733b      	strb	r3, [r7, #12]
 800427a:	683b      	ldr	r3, [r7, #0]
 800427c:	3301      	adds	r3, #1
 800427e:	603b      	str	r3, [r7, #0]
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004286:	f003 0301 	and.w	r3, r3, #1
 800428a:	b2db      	uxtb	r3, r3
 800428c:	4619      	mov	r1, r3
 800428e:	6878      	ldr	r0, [r7, #4]
 8004290:	f7ff fe96 	bl	8003fc0 <ucg_com_SetCDLineStatus>
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800429a:	461a      	mov	r2, r3
 800429c:	687b      	ldr	r3, [r7, #4]
 800429e:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 80042a2:	441a      	add	r2, r3
 80042a4:	7b7b      	ldrb	r3, [r7, #13]
 80042a6:	fa42 f303 	asr.w	r3, r2, r3
 80042aa:	b2da      	uxtb	r2, r3
 80042ac:	7bfb      	ldrb	r3, [r7, #15]
 80042ae:	4013      	ands	r3, r2
 80042b0:	b2da      	uxtb	r2, r3
 80042b2:	7b3b      	ldrb	r3, [r7, #12]
 80042b4:	4313      	orrs	r3, r2
 80042b6:	b2db      	uxtb	r3, r3
 80042b8:	4619      	mov	r1, r3
 80042ba:	6878      	ldr	r0, [r7, #4]
 80042bc:	f7ff feb7 	bl	800402e <ucg_com_SendByte>
 80042c0:	e058      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 80042c2:	683b      	ldr	r3, [r7, #0]
 80042c4:	3301      	adds	r3, #1
 80042c6:	603b      	str	r3, [r7, #0]
 80042c8:	683b      	ldr	r3, [r7, #0]
 80042ca:	781b      	ldrb	r3, [r3, #0]
 80042cc:	73fb      	strb	r3, [r7, #15]
 80042ce:	683b      	ldr	r3, [r7, #0]
 80042d0:	3301      	adds	r3, #1
 80042d2:	603b      	str	r3, [r7, #0]
 80042d4:	683b      	ldr	r3, [r7, #0]
 80042d6:	781b      	ldrb	r3, [r3, #0]
 80042d8:	733b      	strb	r3, [r7, #12]
 80042da:	683b      	ldr	r3, [r7, #0]
 80042dc:	3301      	adds	r3, #1
 80042de:	603b      	str	r3, [r7, #0]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80042e6:	f003 0301 	and.w	r3, r3, #1
 80042ea:	b2db      	uxtb	r3, r3
 80042ec:	4619      	mov	r1, r3
 80042ee:	6878      	ldr	r0, [r7, #4]
 80042f0:	f7ff fe66 	bl	8003fc0 <ucg_com_SetCDLineStatus>
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80042fa:	461a      	mov	r2, r3
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8004302:	441a      	add	r2, r3
 8004304:	7b7b      	ldrb	r3, [r7, #13]
 8004306:	fa42 f303 	asr.w	r3, r2, r3
 800430a:	b2da      	uxtb	r2, r3
 800430c:	7bfb      	ldrb	r3, [r7, #15]
 800430e:	4013      	ands	r3, r2
 8004310:	b2da      	uxtb	r2, r3
 8004312:	7b3b      	ldrb	r3, [r7, #12]
 8004314:	4313      	orrs	r3, r2
 8004316:	b2db      	uxtb	r3, r3
 8004318:	4619      	mov	r1, r3
 800431a:	6878      	ldr	r0, [r7, #4]
 800431c:	f7ff fe87 	bl	800402e <ucg_com_SendByte>
 8004320:	e028      	b.n	8004374 <ucg_com_SendCmdSeq+0x26c>
 8004322:	7b7b      	ldrb	r3, [r7, #13]
 8004324:	089b      	lsrs	r3, r3, #2
 8004326:	73bb      	strb	r3, [r7, #14]
 8004328:	7b7b      	ldrb	r3, [r7, #13]
 800432a:	f003 0303 	and.w	r3, r3, #3
 800432e:	737b      	strb	r3, [r7, #13]
 8004330:	7bbb      	ldrb	r3, [r7, #14]
 8004332:	2b01      	cmp	r3, #1
 8004334:	d00c      	beq.n	8004350 <ucg_com_SendCmdSeq+0x248>
 8004336:	2b03      	cmp	r3, #3
 8004338:	d013      	beq.n	8004362 <ucg_com_SendCmdSeq+0x25a>
 800433a:	2b00      	cmp	r3, #0
 800433c:	d116      	bne.n	800436c <ucg_com_SendCmdSeq+0x264>
 800433e:	7b7b      	ldrb	r3, [r7, #13]
 8004340:	f003 0301 	and.w	r3, r3, #1
 8004344:	b2db      	uxtb	r3, r3
 8004346:	4619      	mov	r1, r3
 8004348:	6878      	ldr	r0, [r7, #4]
 800434a:	f7ff fe19 	bl	8003f80 <ucg_com_SetResetLineStatus>
 800434e:	e00d      	b.n	800436c <ucg_com_SendCmdSeq+0x264>
 8004350:	7b7b      	ldrb	r3, [r7, #13]
 8004352:	f003 0301 	and.w	r3, r3, #1
 8004356:	b2db      	uxtb	r3, r3
 8004358:	4619      	mov	r1, r3
 800435a:	6878      	ldr	r0, [r7, #4]
 800435c:	f7ff fe20 	bl	8003fa0 <ucg_com_SetCSLineStatus>
 8004360:	e004      	b.n	800436c <ucg_com_SendCmdSeq+0x264>
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	7b7a      	ldrb	r2, [r7, #13]
 8004366:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 800436a:	bf00      	nop
 800436c:	683b      	ldr	r3, [r7, #0]
 800436e:	3301      	adds	r3, #1
 8004370:	603b      	str	r3, [r7, #0]
 8004372:	bf00      	nop
 8004374:	e6cd      	b.n	8004112 <ucg_com_SendCmdSeq+0xa>
 8004376:	bf00      	nop
 8004378:	3710      	adds	r7, #16
 800437a:	46bd      	mov	sp, r7
 800437c:	bd80      	pop	{r7, pc}
 800437e:	bf00      	nop

08004380 <siprintf>:
 8004380:	b40e      	push	{r1, r2, r3}
 8004382:	b500      	push	{lr}
 8004384:	b09c      	sub	sp, #112	; 0x70
 8004386:	ab1d      	add	r3, sp, #116	; 0x74
 8004388:	9002      	str	r0, [sp, #8]
 800438a:	9006      	str	r0, [sp, #24]
 800438c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004390:	4809      	ldr	r0, [pc, #36]	; (80043b8 <siprintf+0x38>)
 8004392:	9107      	str	r1, [sp, #28]
 8004394:	9104      	str	r1, [sp, #16]
 8004396:	4909      	ldr	r1, [pc, #36]	; (80043bc <siprintf+0x3c>)
 8004398:	f853 2b04 	ldr.w	r2, [r3], #4
 800439c:	9105      	str	r1, [sp, #20]
 800439e:	6800      	ldr	r0, [r0, #0]
 80043a0:	9301      	str	r3, [sp, #4]
 80043a2:	a902      	add	r1, sp, #8
 80043a4:	f000 f992 	bl	80046cc <_svfiprintf_r>
 80043a8:	9b02      	ldr	r3, [sp, #8]
 80043aa:	2200      	movs	r2, #0
 80043ac:	701a      	strb	r2, [r3, #0]
 80043ae:	b01c      	add	sp, #112	; 0x70
 80043b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80043b4:	b003      	add	sp, #12
 80043b6:	4770      	bx	lr
 80043b8:	20000074 	.word	0x20000074
 80043bc:	ffff0208 	.word	0xffff0208

080043c0 <memset>:
 80043c0:	4402      	add	r2, r0
 80043c2:	4603      	mov	r3, r0
 80043c4:	4293      	cmp	r3, r2
 80043c6:	d100      	bne.n	80043ca <memset+0xa>
 80043c8:	4770      	bx	lr
 80043ca:	f803 1b01 	strb.w	r1, [r3], #1
 80043ce:	e7f9      	b.n	80043c4 <memset+0x4>

080043d0 <__errno>:
 80043d0:	4b01      	ldr	r3, [pc, #4]	; (80043d8 <__errno+0x8>)
 80043d2:	6818      	ldr	r0, [r3, #0]
 80043d4:	4770      	bx	lr
 80043d6:	bf00      	nop
 80043d8:	20000074 	.word	0x20000074

080043dc <__libc_init_array>:
 80043dc:	b570      	push	{r4, r5, r6, lr}
 80043de:	4d0d      	ldr	r5, [pc, #52]	; (8004414 <__libc_init_array+0x38>)
 80043e0:	4c0d      	ldr	r4, [pc, #52]	; (8004418 <__libc_init_array+0x3c>)
 80043e2:	1b64      	subs	r4, r4, r5
 80043e4:	10a4      	asrs	r4, r4, #2
 80043e6:	2600      	movs	r6, #0
 80043e8:	42a6      	cmp	r6, r4
 80043ea:	d109      	bne.n	8004400 <__libc_init_array+0x24>
 80043ec:	4d0b      	ldr	r5, [pc, #44]	; (800441c <__libc_init_array+0x40>)
 80043ee:	4c0c      	ldr	r4, [pc, #48]	; (8004420 <__libc_init_array+0x44>)
 80043f0:	f000 fc6a 	bl	8004cc8 <_init>
 80043f4:	1b64      	subs	r4, r4, r5
 80043f6:	10a4      	asrs	r4, r4, #2
 80043f8:	2600      	movs	r6, #0
 80043fa:	42a6      	cmp	r6, r4
 80043fc:	d105      	bne.n	800440a <__libc_init_array+0x2e>
 80043fe:	bd70      	pop	{r4, r5, r6, pc}
 8004400:	f855 3b04 	ldr.w	r3, [r5], #4
 8004404:	4798      	blx	r3
 8004406:	3601      	adds	r6, #1
 8004408:	e7ee      	b.n	80043e8 <__libc_init_array+0xc>
 800440a:	f855 3b04 	ldr.w	r3, [r5], #4
 800440e:	4798      	blx	r3
 8004410:	3601      	adds	r6, #1
 8004412:	e7f2      	b.n	80043fa <__libc_init_array+0x1e>
 8004414:	08005634 	.word	0x08005634
 8004418:	08005634 	.word	0x08005634
 800441c:	08005634 	.word	0x08005634
 8004420:	08005638 	.word	0x08005638

08004424 <__retarget_lock_acquire_recursive>:
 8004424:	4770      	bx	lr

08004426 <__retarget_lock_release_recursive>:
 8004426:	4770      	bx	lr

08004428 <_free_r>:
 8004428:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800442a:	2900      	cmp	r1, #0
 800442c:	d044      	beq.n	80044b8 <_free_r+0x90>
 800442e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004432:	9001      	str	r0, [sp, #4]
 8004434:	2b00      	cmp	r3, #0
 8004436:	f1a1 0404 	sub.w	r4, r1, #4
 800443a:	bfb8      	it	lt
 800443c:	18e4      	addlt	r4, r4, r3
 800443e:	f000 f8df 	bl	8004600 <__malloc_lock>
 8004442:	4a1e      	ldr	r2, [pc, #120]	; (80044bc <_free_r+0x94>)
 8004444:	9801      	ldr	r0, [sp, #4]
 8004446:	6813      	ldr	r3, [r2, #0]
 8004448:	b933      	cbnz	r3, 8004458 <_free_r+0x30>
 800444a:	6063      	str	r3, [r4, #4]
 800444c:	6014      	str	r4, [r2, #0]
 800444e:	b003      	add	sp, #12
 8004450:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004454:	f000 b8da 	b.w	800460c <__malloc_unlock>
 8004458:	42a3      	cmp	r3, r4
 800445a:	d908      	bls.n	800446e <_free_r+0x46>
 800445c:	6825      	ldr	r5, [r4, #0]
 800445e:	1961      	adds	r1, r4, r5
 8004460:	428b      	cmp	r3, r1
 8004462:	bf01      	itttt	eq
 8004464:	6819      	ldreq	r1, [r3, #0]
 8004466:	685b      	ldreq	r3, [r3, #4]
 8004468:	1949      	addeq	r1, r1, r5
 800446a:	6021      	streq	r1, [r4, #0]
 800446c:	e7ed      	b.n	800444a <_free_r+0x22>
 800446e:	461a      	mov	r2, r3
 8004470:	685b      	ldr	r3, [r3, #4]
 8004472:	b10b      	cbz	r3, 8004478 <_free_r+0x50>
 8004474:	42a3      	cmp	r3, r4
 8004476:	d9fa      	bls.n	800446e <_free_r+0x46>
 8004478:	6811      	ldr	r1, [r2, #0]
 800447a:	1855      	adds	r5, r2, r1
 800447c:	42a5      	cmp	r5, r4
 800447e:	d10b      	bne.n	8004498 <_free_r+0x70>
 8004480:	6824      	ldr	r4, [r4, #0]
 8004482:	4421      	add	r1, r4
 8004484:	1854      	adds	r4, r2, r1
 8004486:	42a3      	cmp	r3, r4
 8004488:	6011      	str	r1, [r2, #0]
 800448a:	d1e0      	bne.n	800444e <_free_r+0x26>
 800448c:	681c      	ldr	r4, [r3, #0]
 800448e:	685b      	ldr	r3, [r3, #4]
 8004490:	6053      	str	r3, [r2, #4]
 8004492:	440c      	add	r4, r1
 8004494:	6014      	str	r4, [r2, #0]
 8004496:	e7da      	b.n	800444e <_free_r+0x26>
 8004498:	d902      	bls.n	80044a0 <_free_r+0x78>
 800449a:	230c      	movs	r3, #12
 800449c:	6003      	str	r3, [r0, #0]
 800449e:	e7d6      	b.n	800444e <_free_r+0x26>
 80044a0:	6825      	ldr	r5, [r4, #0]
 80044a2:	1961      	adds	r1, r4, r5
 80044a4:	428b      	cmp	r3, r1
 80044a6:	bf04      	itt	eq
 80044a8:	6819      	ldreq	r1, [r3, #0]
 80044aa:	685b      	ldreq	r3, [r3, #4]
 80044ac:	6063      	str	r3, [r4, #4]
 80044ae:	bf04      	itt	eq
 80044b0:	1949      	addeq	r1, r1, r5
 80044b2:	6021      	streq	r1, [r4, #0]
 80044b4:	6054      	str	r4, [r2, #4]
 80044b6:	e7ca      	b.n	800444e <_free_r+0x26>
 80044b8:	b003      	add	sp, #12
 80044ba:	bd30      	pop	{r4, r5, pc}
 80044bc:	20001490 	.word	0x20001490

080044c0 <sbrk_aligned>:
 80044c0:	b570      	push	{r4, r5, r6, lr}
 80044c2:	4e0e      	ldr	r6, [pc, #56]	; (80044fc <sbrk_aligned+0x3c>)
 80044c4:	460c      	mov	r4, r1
 80044c6:	6831      	ldr	r1, [r6, #0]
 80044c8:	4605      	mov	r5, r0
 80044ca:	b911      	cbnz	r1, 80044d2 <sbrk_aligned+0x12>
 80044cc:	f000 fba6 	bl	8004c1c <_sbrk_r>
 80044d0:	6030      	str	r0, [r6, #0]
 80044d2:	4621      	mov	r1, r4
 80044d4:	4628      	mov	r0, r5
 80044d6:	f000 fba1 	bl	8004c1c <_sbrk_r>
 80044da:	1c43      	adds	r3, r0, #1
 80044dc:	d00a      	beq.n	80044f4 <sbrk_aligned+0x34>
 80044de:	1cc4      	adds	r4, r0, #3
 80044e0:	f024 0403 	bic.w	r4, r4, #3
 80044e4:	42a0      	cmp	r0, r4
 80044e6:	d007      	beq.n	80044f8 <sbrk_aligned+0x38>
 80044e8:	1a21      	subs	r1, r4, r0
 80044ea:	4628      	mov	r0, r5
 80044ec:	f000 fb96 	bl	8004c1c <_sbrk_r>
 80044f0:	3001      	adds	r0, #1
 80044f2:	d101      	bne.n	80044f8 <sbrk_aligned+0x38>
 80044f4:	f04f 34ff 	mov.w	r4, #4294967295
 80044f8:	4620      	mov	r0, r4
 80044fa:	bd70      	pop	{r4, r5, r6, pc}
 80044fc:	20001494 	.word	0x20001494

08004500 <_malloc_r>:
 8004500:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004504:	1ccd      	adds	r5, r1, #3
 8004506:	f025 0503 	bic.w	r5, r5, #3
 800450a:	3508      	adds	r5, #8
 800450c:	2d0c      	cmp	r5, #12
 800450e:	bf38      	it	cc
 8004510:	250c      	movcc	r5, #12
 8004512:	2d00      	cmp	r5, #0
 8004514:	4607      	mov	r7, r0
 8004516:	db01      	blt.n	800451c <_malloc_r+0x1c>
 8004518:	42a9      	cmp	r1, r5
 800451a:	d905      	bls.n	8004528 <_malloc_r+0x28>
 800451c:	230c      	movs	r3, #12
 800451e:	603b      	str	r3, [r7, #0]
 8004520:	2600      	movs	r6, #0
 8004522:	4630      	mov	r0, r6
 8004524:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004528:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80045fc <_malloc_r+0xfc>
 800452c:	f000 f868 	bl	8004600 <__malloc_lock>
 8004530:	f8d8 3000 	ldr.w	r3, [r8]
 8004534:	461c      	mov	r4, r3
 8004536:	bb5c      	cbnz	r4, 8004590 <_malloc_r+0x90>
 8004538:	4629      	mov	r1, r5
 800453a:	4638      	mov	r0, r7
 800453c:	f7ff ffc0 	bl	80044c0 <sbrk_aligned>
 8004540:	1c43      	adds	r3, r0, #1
 8004542:	4604      	mov	r4, r0
 8004544:	d155      	bne.n	80045f2 <_malloc_r+0xf2>
 8004546:	f8d8 4000 	ldr.w	r4, [r8]
 800454a:	4626      	mov	r6, r4
 800454c:	2e00      	cmp	r6, #0
 800454e:	d145      	bne.n	80045dc <_malloc_r+0xdc>
 8004550:	2c00      	cmp	r4, #0
 8004552:	d048      	beq.n	80045e6 <_malloc_r+0xe6>
 8004554:	6823      	ldr	r3, [r4, #0]
 8004556:	4631      	mov	r1, r6
 8004558:	4638      	mov	r0, r7
 800455a:	eb04 0903 	add.w	r9, r4, r3
 800455e:	f000 fb5d 	bl	8004c1c <_sbrk_r>
 8004562:	4581      	cmp	r9, r0
 8004564:	d13f      	bne.n	80045e6 <_malloc_r+0xe6>
 8004566:	6821      	ldr	r1, [r4, #0]
 8004568:	1a6d      	subs	r5, r5, r1
 800456a:	4629      	mov	r1, r5
 800456c:	4638      	mov	r0, r7
 800456e:	f7ff ffa7 	bl	80044c0 <sbrk_aligned>
 8004572:	3001      	adds	r0, #1
 8004574:	d037      	beq.n	80045e6 <_malloc_r+0xe6>
 8004576:	6823      	ldr	r3, [r4, #0]
 8004578:	442b      	add	r3, r5
 800457a:	6023      	str	r3, [r4, #0]
 800457c:	f8d8 3000 	ldr.w	r3, [r8]
 8004580:	2b00      	cmp	r3, #0
 8004582:	d038      	beq.n	80045f6 <_malloc_r+0xf6>
 8004584:	685a      	ldr	r2, [r3, #4]
 8004586:	42a2      	cmp	r2, r4
 8004588:	d12b      	bne.n	80045e2 <_malloc_r+0xe2>
 800458a:	2200      	movs	r2, #0
 800458c:	605a      	str	r2, [r3, #4]
 800458e:	e00f      	b.n	80045b0 <_malloc_r+0xb0>
 8004590:	6822      	ldr	r2, [r4, #0]
 8004592:	1b52      	subs	r2, r2, r5
 8004594:	d41f      	bmi.n	80045d6 <_malloc_r+0xd6>
 8004596:	2a0b      	cmp	r2, #11
 8004598:	d917      	bls.n	80045ca <_malloc_r+0xca>
 800459a:	1961      	adds	r1, r4, r5
 800459c:	42a3      	cmp	r3, r4
 800459e:	6025      	str	r5, [r4, #0]
 80045a0:	bf18      	it	ne
 80045a2:	6059      	strne	r1, [r3, #4]
 80045a4:	6863      	ldr	r3, [r4, #4]
 80045a6:	bf08      	it	eq
 80045a8:	f8c8 1000 	streq.w	r1, [r8]
 80045ac:	5162      	str	r2, [r4, r5]
 80045ae:	604b      	str	r3, [r1, #4]
 80045b0:	4638      	mov	r0, r7
 80045b2:	f104 060b 	add.w	r6, r4, #11
 80045b6:	f000 f829 	bl	800460c <__malloc_unlock>
 80045ba:	f026 0607 	bic.w	r6, r6, #7
 80045be:	1d23      	adds	r3, r4, #4
 80045c0:	1af2      	subs	r2, r6, r3
 80045c2:	d0ae      	beq.n	8004522 <_malloc_r+0x22>
 80045c4:	1b9b      	subs	r3, r3, r6
 80045c6:	50a3      	str	r3, [r4, r2]
 80045c8:	e7ab      	b.n	8004522 <_malloc_r+0x22>
 80045ca:	42a3      	cmp	r3, r4
 80045cc:	6862      	ldr	r2, [r4, #4]
 80045ce:	d1dd      	bne.n	800458c <_malloc_r+0x8c>
 80045d0:	f8c8 2000 	str.w	r2, [r8]
 80045d4:	e7ec      	b.n	80045b0 <_malloc_r+0xb0>
 80045d6:	4623      	mov	r3, r4
 80045d8:	6864      	ldr	r4, [r4, #4]
 80045da:	e7ac      	b.n	8004536 <_malloc_r+0x36>
 80045dc:	4634      	mov	r4, r6
 80045de:	6876      	ldr	r6, [r6, #4]
 80045e0:	e7b4      	b.n	800454c <_malloc_r+0x4c>
 80045e2:	4613      	mov	r3, r2
 80045e4:	e7cc      	b.n	8004580 <_malloc_r+0x80>
 80045e6:	230c      	movs	r3, #12
 80045e8:	603b      	str	r3, [r7, #0]
 80045ea:	4638      	mov	r0, r7
 80045ec:	f000 f80e 	bl	800460c <__malloc_unlock>
 80045f0:	e797      	b.n	8004522 <_malloc_r+0x22>
 80045f2:	6025      	str	r5, [r4, #0]
 80045f4:	e7dc      	b.n	80045b0 <_malloc_r+0xb0>
 80045f6:	605b      	str	r3, [r3, #4]
 80045f8:	deff      	udf	#255	; 0xff
 80045fa:	bf00      	nop
 80045fc:	20001490 	.word	0x20001490

08004600 <__malloc_lock>:
 8004600:	4801      	ldr	r0, [pc, #4]	; (8004608 <__malloc_lock+0x8>)
 8004602:	f7ff bf0f 	b.w	8004424 <__retarget_lock_acquire_recursive>
 8004606:	bf00      	nop
 8004608:	2000148c 	.word	0x2000148c

0800460c <__malloc_unlock>:
 800460c:	4801      	ldr	r0, [pc, #4]	; (8004614 <__malloc_unlock+0x8>)
 800460e:	f7ff bf0a 	b.w	8004426 <__retarget_lock_release_recursive>
 8004612:	bf00      	nop
 8004614:	2000148c 	.word	0x2000148c

08004618 <__ssputs_r>:
 8004618:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800461c:	688e      	ldr	r6, [r1, #8]
 800461e:	461f      	mov	r7, r3
 8004620:	42be      	cmp	r6, r7
 8004622:	680b      	ldr	r3, [r1, #0]
 8004624:	4682      	mov	sl, r0
 8004626:	460c      	mov	r4, r1
 8004628:	4690      	mov	r8, r2
 800462a:	d82c      	bhi.n	8004686 <__ssputs_r+0x6e>
 800462c:	898a      	ldrh	r2, [r1, #12]
 800462e:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004632:	d026      	beq.n	8004682 <__ssputs_r+0x6a>
 8004634:	6965      	ldr	r5, [r4, #20]
 8004636:	6909      	ldr	r1, [r1, #16]
 8004638:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800463c:	eba3 0901 	sub.w	r9, r3, r1
 8004640:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004644:	1c7b      	adds	r3, r7, #1
 8004646:	444b      	add	r3, r9
 8004648:	106d      	asrs	r5, r5, #1
 800464a:	429d      	cmp	r5, r3
 800464c:	bf38      	it	cc
 800464e:	461d      	movcc	r5, r3
 8004650:	0553      	lsls	r3, r2, #21
 8004652:	d527      	bpl.n	80046a4 <__ssputs_r+0x8c>
 8004654:	4629      	mov	r1, r5
 8004656:	f7ff ff53 	bl	8004500 <_malloc_r>
 800465a:	4606      	mov	r6, r0
 800465c:	b360      	cbz	r0, 80046b8 <__ssputs_r+0xa0>
 800465e:	6921      	ldr	r1, [r4, #16]
 8004660:	464a      	mov	r2, r9
 8004662:	f000 faeb 	bl	8004c3c <memcpy>
 8004666:	89a3      	ldrh	r3, [r4, #12]
 8004668:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800466c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004670:	81a3      	strh	r3, [r4, #12]
 8004672:	6126      	str	r6, [r4, #16]
 8004674:	6165      	str	r5, [r4, #20]
 8004676:	444e      	add	r6, r9
 8004678:	eba5 0509 	sub.w	r5, r5, r9
 800467c:	6026      	str	r6, [r4, #0]
 800467e:	60a5      	str	r5, [r4, #8]
 8004680:	463e      	mov	r6, r7
 8004682:	42be      	cmp	r6, r7
 8004684:	d900      	bls.n	8004688 <__ssputs_r+0x70>
 8004686:	463e      	mov	r6, r7
 8004688:	6820      	ldr	r0, [r4, #0]
 800468a:	4632      	mov	r2, r6
 800468c:	4641      	mov	r1, r8
 800468e:	f000 faab 	bl	8004be8 <memmove>
 8004692:	68a3      	ldr	r3, [r4, #8]
 8004694:	1b9b      	subs	r3, r3, r6
 8004696:	60a3      	str	r3, [r4, #8]
 8004698:	6823      	ldr	r3, [r4, #0]
 800469a:	4433      	add	r3, r6
 800469c:	6023      	str	r3, [r4, #0]
 800469e:	2000      	movs	r0, #0
 80046a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80046a4:	462a      	mov	r2, r5
 80046a6:	f000 fad7 	bl	8004c58 <_realloc_r>
 80046aa:	4606      	mov	r6, r0
 80046ac:	2800      	cmp	r0, #0
 80046ae:	d1e0      	bne.n	8004672 <__ssputs_r+0x5a>
 80046b0:	6921      	ldr	r1, [r4, #16]
 80046b2:	4650      	mov	r0, sl
 80046b4:	f7ff feb8 	bl	8004428 <_free_r>
 80046b8:	230c      	movs	r3, #12
 80046ba:	f8ca 3000 	str.w	r3, [sl]
 80046be:	89a3      	ldrh	r3, [r4, #12]
 80046c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80046c4:	81a3      	strh	r3, [r4, #12]
 80046c6:	f04f 30ff 	mov.w	r0, #4294967295
 80046ca:	e7e9      	b.n	80046a0 <__ssputs_r+0x88>

080046cc <_svfiprintf_r>:
 80046cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046d0:	4698      	mov	r8, r3
 80046d2:	898b      	ldrh	r3, [r1, #12]
 80046d4:	061b      	lsls	r3, r3, #24
 80046d6:	b09d      	sub	sp, #116	; 0x74
 80046d8:	4607      	mov	r7, r0
 80046da:	460d      	mov	r5, r1
 80046dc:	4614      	mov	r4, r2
 80046de:	d50e      	bpl.n	80046fe <_svfiprintf_r+0x32>
 80046e0:	690b      	ldr	r3, [r1, #16]
 80046e2:	b963      	cbnz	r3, 80046fe <_svfiprintf_r+0x32>
 80046e4:	2140      	movs	r1, #64	; 0x40
 80046e6:	f7ff ff0b 	bl	8004500 <_malloc_r>
 80046ea:	6028      	str	r0, [r5, #0]
 80046ec:	6128      	str	r0, [r5, #16]
 80046ee:	b920      	cbnz	r0, 80046fa <_svfiprintf_r+0x2e>
 80046f0:	230c      	movs	r3, #12
 80046f2:	603b      	str	r3, [r7, #0]
 80046f4:	f04f 30ff 	mov.w	r0, #4294967295
 80046f8:	e0d0      	b.n	800489c <_svfiprintf_r+0x1d0>
 80046fa:	2340      	movs	r3, #64	; 0x40
 80046fc:	616b      	str	r3, [r5, #20]
 80046fe:	2300      	movs	r3, #0
 8004700:	9309      	str	r3, [sp, #36]	; 0x24
 8004702:	2320      	movs	r3, #32
 8004704:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004708:	f8cd 800c 	str.w	r8, [sp, #12]
 800470c:	2330      	movs	r3, #48	; 0x30
 800470e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80048b4 <_svfiprintf_r+0x1e8>
 8004712:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004716:	f04f 0901 	mov.w	r9, #1
 800471a:	4623      	mov	r3, r4
 800471c:	469a      	mov	sl, r3
 800471e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004722:	b10a      	cbz	r2, 8004728 <_svfiprintf_r+0x5c>
 8004724:	2a25      	cmp	r2, #37	; 0x25
 8004726:	d1f9      	bne.n	800471c <_svfiprintf_r+0x50>
 8004728:	ebba 0b04 	subs.w	fp, sl, r4
 800472c:	d00b      	beq.n	8004746 <_svfiprintf_r+0x7a>
 800472e:	465b      	mov	r3, fp
 8004730:	4622      	mov	r2, r4
 8004732:	4629      	mov	r1, r5
 8004734:	4638      	mov	r0, r7
 8004736:	f7ff ff6f 	bl	8004618 <__ssputs_r>
 800473a:	3001      	adds	r0, #1
 800473c:	f000 80a9 	beq.w	8004892 <_svfiprintf_r+0x1c6>
 8004740:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004742:	445a      	add	r2, fp
 8004744:	9209      	str	r2, [sp, #36]	; 0x24
 8004746:	f89a 3000 	ldrb.w	r3, [sl]
 800474a:	2b00      	cmp	r3, #0
 800474c:	f000 80a1 	beq.w	8004892 <_svfiprintf_r+0x1c6>
 8004750:	2300      	movs	r3, #0
 8004752:	f04f 32ff 	mov.w	r2, #4294967295
 8004756:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800475a:	f10a 0a01 	add.w	sl, sl, #1
 800475e:	9304      	str	r3, [sp, #16]
 8004760:	9307      	str	r3, [sp, #28]
 8004762:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004766:	931a      	str	r3, [sp, #104]	; 0x68
 8004768:	4654      	mov	r4, sl
 800476a:	2205      	movs	r2, #5
 800476c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004770:	4850      	ldr	r0, [pc, #320]	; (80048b4 <_svfiprintf_r+0x1e8>)
 8004772:	f7fb fd35 	bl	80001e0 <memchr>
 8004776:	9a04      	ldr	r2, [sp, #16]
 8004778:	b9d8      	cbnz	r0, 80047b2 <_svfiprintf_r+0xe6>
 800477a:	06d0      	lsls	r0, r2, #27
 800477c:	bf44      	itt	mi
 800477e:	2320      	movmi	r3, #32
 8004780:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004784:	0711      	lsls	r1, r2, #28
 8004786:	bf44      	itt	mi
 8004788:	232b      	movmi	r3, #43	; 0x2b
 800478a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800478e:	f89a 3000 	ldrb.w	r3, [sl]
 8004792:	2b2a      	cmp	r3, #42	; 0x2a
 8004794:	d015      	beq.n	80047c2 <_svfiprintf_r+0xf6>
 8004796:	9a07      	ldr	r2, [sp, #28]
 8004798:	4654      	mov	r4, sl
 800479a:	2000      	movs	r0, #0
 800479c:	f04f 0c0a 	mov.w	ip, #10
 80047a0:	4621      	mov	r1, r4
 80047a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80047a6:	3b30      	subs	r3, #48	; 0x30
 80047a8:	2b09      	cmp	r3, #9
 80047aa:	d94d      	bls.n	8004848 <_svfiprintf_r+0x17c>
 80047ac:	b1b0      	cbz	r0, 80047dc <_svfiprintf_r+0x110>
 80047ae:	9207      	str	r2, [sp, #28]
 80047b0:	e014      	b.n	80047dc <_svfiprintf_r+0x110>
 80047b2:	eba0 0308 	sub.w	r3, r0, r8
 80047b6:	fa09 f303 	lsl.w	r3, r9, r3
 80047ba:	4313      	orrs	r3, r2
 80047bc:	9304      	str	r3, [sp, #16]
 80047be:	46a2      	mov	sl, r4
 80047c0:	e7d2      	b.n	8004768 <_svfiprintf_r+0x9c>
 80047c2:	9b03      	ldr	r3, [sp, #12]
 80047c4:	1d19      	adds	r1, r3, #4
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	9103      	str	r1, [sp, #12]
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	bfbb      	ittet	lt
 80047ce:	425b      	neglt	r3, r3
 80047d0:	f042 0202 	orrlt.w	r2, r2, #2
 80047d4:	9307      	strge	r3, [sp, #28]
 80047d6:	9307      	strlt	r3, [sp, #28]
 80047d8:	bfb8      	it	lt
 80047da:	9204      	strlt	r2, [sp, #16]
 80047dc:	7823      	ldrb	r3, [r4, #0]
 80047de:	2b2e      	cmp	r3, #46	; 0x2e
 80047e0:	d10c      	bne.n	80047fc <_svfiprintf_r+0x130>
 80047e2:	7863      	ldrb	r3, [r4, #1]
 80047e4:	2b2a      	cmp	r3, #42	; 0x2a
 80047e6:	d134      	bne.n	8004852 <_svfiprintf_r+0x186>
 80047e8:	9b03      	ldr	r3, [sp, #12]
 80047ea:	1d1a      	adds	r2, r3, #4
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	9203      	str	r2, [sp, #12]
 80047f0:	2b00      	cmp	r3, #0
 80047f2:	bfb8      	it	lt
 80047f4:	f04f 33ff 	movlt.w	r3, #4294967295
 80047f8:	3402      	adds	r4, #2
 80047fa:	9305      	str	r3, [sp, #20]
 80047fc:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 80048c4 <_svfiprintf_r+0x1f8>
 8004800:	7821      	ldrb	r1, [r4, #0]
 8004802:	2203      	movs	r2, #3
 8004804:	4650      	mov	r0, sl
 8004806:	f7fb fceb 	bl	80001e0 <memchr>
 800480a:	b138      	cbz	r0, 800481c <_svfiprintf_r+0x150>
 800480c:	9b04      	ldr	r3, [sp, #16]
 800480e:	eba0 000a 	sub.w	r0, r0, sl
 8004812:	2240      	movs	r2, #64	; 0x40
 8004814:	4082      	lsls	r2, r0
 8004816:	4313      	orrs	r3, r2
 8004818:	3401      	adds	r4, #1
 800481a:	9304      	str	r3, [sp, #16]
 800481c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004820:	4825      	ldr	r0, [pc, #148]	; (80048b8 <_svfiprintf_r+0x1ec>)
 8004822:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004826:	2206      	movs	r2, #6
 8004828:	f7fb fcda 	bl	80001e0 <memchr>
 800482c:	2800      	cmp	r0, #0
 800482e:	d038      	beq.n	80048a2 <_svfiprintf_r+0x1d6>
 8004830:	4b22      	ldr	r3, [pc, #136]	; (80048bc <_svfiprintf_r+0x1f0>)
 8004832:	bb1b      	cbnz	r3, 800487c <_svfiprintf_r+0x1b0>
 8004834:	9b03      	ldr	r3, [sp, #12]
 8004836:	3307      	adds	r3, #7
 8004838:	f023 0307 	bic.w	r3, r3, #7
 800483c:	3308      	adds	r3, #8
 800483e:	9303      	str	r3, [sp, #12]
 8004840:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004842:	4433      	add	r3, r6
 8004844:	9309      	str	r3, [sp, #36]	; 0x24
 8004846:	e768      	b.n	800471a <_svfiprintf_r+0x4e>
 8004848:	fb0c 3202 	mla	r2, ip, r2, r3
 800484c:	460c      	mov	r4, r1
 800484e:	2001      	movs	r0, #1
 8004850:	e7a6      	b.n	80047a0 <_svfiprintf_r+0xd4>
 8004852:	2300      	movs	r3, #0
 8004854:	3401      	adds	r4, #1
 8004856:	9305      	str	r3, [sp, #20]
 8004858:	4619      	mov	r1, r3
 800485a:	f04f 0c0a 	mov.w	ip, #10
 800485e:	4620      	mov	r0, r4
 8004860:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004864:	3a30      	subs	r2, #48	; 0x30
 8004866:	2a09      	cmp	r2, #9
 8004868:	d903      	bls.n	8004872 <_svfiprintf_r+0x1a6>
 800486a:	2b00      	cmp	r3, #0
 800486c:	d0c6      	beq.n	80047fc <_svfiprintf_r+0x130>
 800486e:	9105      	str	r1, [sp, #20]
 8004870:	e7c4      	b.n	80047fc <_svfiprintf_r+0x130>
 8004872:	fb0c 2101 	mla	r1, ip, r1, r2
 8004876:	4604      	mov	r4, r0
 8004878:	2301      	movs	r3, #1
 800487a:	e7f0      	b.n	800485e <_svfiprintf_r+0x192>
 800487c:	ab03      	add	r3, sp, #12
 800487e:	9300      	str	r3, [sp, #0]
 8004880:	462a      	mov	r2, r5
 8004882:	4b0f      	ldr	r3, [pc, #60]	; (80048c0 <_svfiprintf_r+0x1f4>)
 8004884:	a904      	add	r1, sp, #16
 8004886:	4638      	mov	r0, r7
 8004888:	f3af 8000 	nop.w
 800488c:	1c42      	adds	r2, r0, #1
 800488e:	4606      	mov	r6, r0
 8004890:	d1d6      	bne.n	8004840 <_svfiprintf_r+0x174>
 8004892:	89ab      	ldrh	r3, [r5, #12]
 8004894:	065b      	lsls	r3, r3, #25
 8004896:	f53f af2d 	bmi.w	80046f4 <_svfiprintf_r+0x28>
 800489a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800489c:	b01d      	add	sp, #116	; 0x74
 800489e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048a2:	ab03      	add	r3, sp, #12
 80048a4:	9300      	str	r3, [sp, #0]
 80048a6:	462a      	mov	r2, r5
 80048a8:	4b05      	ldr	r3, [pc, #20]	; (80048c0 <_svfiprintf_r+0x1f4>)
 80048aa:	a904      	add	r1, sp, #16
 80048ac:	4638      	mov	r0, r7
 80048ae:	f000 f879 	bl	80049a4 <_printf_i>
 80048b2:	e7eb      	b.n	800488c <_svfiprintf_r+0x1c0>
 80048b4:	08005600 	.word	0x08005600
 80048b8:	0800560a 	.word	0x0800560a
 80048bc:	00000000 	.word	0x00000000
 80048c0:	08004619 	.word	0x08004619
 80048c4:	08005606 	.word	0x08005606

080048c8 <_printf_common>:
 80048c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048cc:	4616      	mov	r6, r2
 80048ce:	4699      	mov	r9, r3
 80048d0:	688a      	ldr	r2, [r1, #8]
 80048d2:	690b      	ldr	r3, [r1, #16]
 80048d4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80048d8:	4293      	cmp	r3, r2
 80048da:	bfb8      	it	lt
 80048dc:	4613      	movlt	r3, r2
 80048de:	6033      	str	r3, [r6, #0]
 80048e0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80048e4:	4607      	mov	r7, r0
 80048e6:	460c      	mov	r4, r1
 80048e8:	b10a      	cbz	r2, 80048ee <_printf_common+0x26>
 80048ea:	3301      	adds	r3, #1
 80048ec:	6033      	str	r3, [r6, #0]
 80048ee:	6823      	ldr	r3, [r4, #0]
 80048f0:	0699      	lsls	r1, r3, #26
 80048f2:	bf42      	ittt	mi
 80048f4:	6833      	ldrmi	r3, [r6, #0]
 80048f6:	3302      	addmi	r3, #2
 80048f8:	6033      	strmi	r3, [r6, #0]
 80048fa:	6825      	ldr	r5, [r4, #0]
 80048fc:	f015 0506 	ands.w	r5, r5, #6
 8004900:	d106      	bne.n	8004910 <_printf_common+0x48>
 8004902:	f104 0a19 	add.w	sl, r4, #25
 8004906:	68e3      	ldr	r3, [r4, #12]
 8004908:	6832      	ldr	r2, [r6, #0]
 800490a:	1a9b      	subs	r3, r3, r2
 800490c:	42ab      	cmp	r3, r5
 800490e:	dc26      	bgt.n	800495e <_printf_common+0x96>
 8004910:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004914:	1e13      	subs	r3, r2, #0
 8004916:	6822      	ldr	r2, [r4, #0]
 8004918:	bf18      	it	ne
 800491a:	2301      	movne	r3, #1
 800491c:	0692      	lsls	r2, r2, #26
 800491e:	d42b      	bmi.n	8004978 <_printf_common+0xb0>
 8004920:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004924:	4649      	mov	r1, r9
 8004926:	4638      	mov	r0, r7
 8004928:	47c0      	blx	r8
 800492a:	3001      	adds	r0, #1
 800492c:	d01e      	beq.n	800496c <_printf_common+0xa4>
 800492e:	6823      	ldr	r3, [r4, #0]
 8004930:	6922      	ldr	r2, [r4, #16]
 8004932:	f003 0306 	and.w	r3, r3, #6
 8004936:	2b04      	cmp	r3, #4
 8004938:	bf02      	ittt	eq
 800493a:	68e5      	ldreq	r5, [r4, #12]
 800493c:	6833      	ldreq	r3, [r6, #0]
 800493e:	1aed      	subeq	r5, r5, r3
 8004940:	68a3      	ldr	r3, [r4, #8]
 8004942:	bf0c      	ite	eq
 8004944:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004948:	2500      	movne	r5, #0
 800494a:	4293      	cmp	r3, r2
 800494c:	bfc4      	itt	gt
 800494e:	1a9b      	subgt	r3, r3, r2
 8004950:	18ed      	addgt	r5, r5, r3
 8004952:	2600      	movs	r6, #0
 8004954:	341a      	adds	r4, #26
 8004956:	42b5      	cmp	r5, r6
 8004958:	d11a      	bne.n	8004990 <_printf_common+0xc8>
 800495a:	2000      	movs	r0, #0
 800495c:	e008      	b.n	8004970 <_printf_common+0xa8>
 800495e:	2301      	movs	r3, #1
 8004960:	4652      	mov	r2, sl
 8004962:	4649      	mov	r1, r9
 8004964:	4638      	mov	r0, r7
 8004966:	47c0      	blx	r8
 8004968:	3001      	adds	r0, #1
 800496a:	d103      	bne.n	8004974 <_printf_common+0xac>
 800496c:	f04f 30ff 	mov.w	r0, #4294967295
 8004970:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004974:	3501      	adds	r5, #1
 8004976:	e7c6      	b.n	8004906 <_printf_common+0x3e>
 8004978:	18e1      	adds	r1, r4, r3
 800497a:	1c5a      	adds	r2, r3, #1
 800497c:	2030      	movs	r0, #48	; 0x30
 800497e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004982:	4422      	add	r2, r4
 8004984:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004988:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800498c:	3302      	adds	r3, #2
 800498e:	e7c7      	b.n	8004920 <_printf_common+0x58>
 8004990:	2301      	movs	r3, #1
 8004992:	4622      	mov	r2, r4
 8004994:	4649      	mov	r1, r9
 8004996:	4638      	mov	r0, r7
 8004998:	47c0      	blx	r8
 800499a:	3001      	adds	r0, #1
 800499c:	d0e6      	beq.n	800496c <_printf_common+0xa4>
 800499e:	3601      	adds	r6, #1
 80049a0:	e7d9      	b.n	8004956 <_printf_common+0x8e>
	...

080049a4 <_printf_i>:
 80049a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80049a8:	7e0f      	ldrb	r7, [r1, #24]
 80049aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80049ac:	2f78      	cmp	r7, #120	; 0x78
 80049ae:	4691      	mov	r9, r2
 80049b0:	4680      	mov	r8, r0
 80049b2:	460c      	mov	r4, r1
 80049b4:	469a      	mov	sl, r3
 80049b6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80049ba:	d807      	bhi.n	80049cc <_printf_i+0x28>
 80049bc:	2f62      	cmp	r7, #98	; 0x62
 80049be:	d80a      	bhi.n	80049d6 <_printf_i+0x32>
 80049c0:	2f00      	cmp	r7, #0
 80049c2:	f000 80d4 	beq.w	8004b6e <_printf_i+0x1ca>
 80049c6:	2f58      	cmp	r7, #88	; 0x58
 80049c8:	f000 80c0 	beq.w	8004b4c <_printf_i+0x1a8>
 80049cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80049d0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80049d4:	e03a      	b.n	8004a4c <_printf_i+0xa8>
 80049d6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80049da:	2b15      	cmp	r3, #21
 80049dc:	d8f6      	bhi.n	80049cc <_printf_i+0x28>
 80049de:	a101      	add	r1, pc, #4	; (adr r1, 80049e4 <_printf_i+0x40>)
 80049e0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80049e4:	08004a3d 	.word	0x08004a3d
 80049e8:	08004a51 	.word	0x08004a51
 80049ec:	080049cd 	.word	0x080049cd
 80049f0:	080049cd 	.word	0x080049cd
 80049f4:	080049cd 	.word	0x080049cd
 80049f8:	080049cd 	.word	0x080049cd
 80049fc:	08004a51 	.word	0x08004a51
 8004a00:	080049cd 	.word	0x080049cd
 8004a04:	080049cd 	.word	0x080049cd
 8004a08:	080049cd 	.word	0x080049cd
 8004a0c:	080049cd 	.word	0x080049cd
 8004a10:	08004b55 	.word	0x08004b55
 8004a14:	08004a7d 	.word	0x08004a7d
 8004a18:	08004b0f 	.word	0x08004b0f
 8004a1c:	080049cd 	.word	0x080049cd
 8004a20:	080049cd 	.word	0x080049cd
 8004a24:	08004b77 	.word	0x08004b77
 8004a28:	080049cd 	.word	0x080049cd
 8004a2c:	08004a7d 	.word	0x08004a7d
 8004a30:	080049cd 	.word	0x080049cd
 8004a34:	080049cd 	.word	0x080049cd
 8004a38:	08004b17 	.word	0x08004b17
 8004a3c:	682b      	ldr	r3, [r5, #0]
 8004a3e:	1d1a      	adds	r2, r3, #4
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	602a      	str	r2, [r5, #0]
 8004a44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004a48:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004a4c:	2301      	movs	r3, #1
 8004a4e:	e09f      	b.n	8004b90 <_printf_i+0x1ec>
 8004a50:	6820      	ldr	r0, [r4, #0]
 8004a52:	682b      	ldr	r3, [r5, #0]
 8004a54:	0607      	lsls	r7, r0, #24
 8004a56:	f103 0104 	add.w	r1, r3, #4
 8004a5a:	6029      	str	r1, [r5, #0]
 8004a5c:	d501      	bpl.n	8004a62 <_printf_i+0xbe>
 8004a5e:	681e      	ldr	r6, [r3, #0]
 8004a60:	e003      	b.n	8004a6a <_printf_i+0xc6>
 8004a62:	0646      	lsls	r6, r0, #25
 8004a64:	d5fb      	bpl.n	8004a5e <_printf_i+0xba>
 8004a66:	f9b3 6000 	ldrsh.w	r6, [r3]
 8004a6a:	2e00      	cmp	r6, #0
 8004a6c:	da03      	bge.n	8004a76 <_printf_i+0xd2>
 8004a6e:	232d      	movs	r3, #45	; 0x2d
 8004a70:	4276      	negs	r6, r6
 8004a72:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004a76:	485a      	ldr	r0, [pc, #360]	; (8004be0 <_printf_i+0x23c>)
 8004a78:	230a      	movs	r3, #10
 8004a7a:	e012      	b.n	8004aa2 <_printf_i+0xfe>
 8004a7c:	682b      	ldr	r3, [r5, #0]
 8004a7e:	6820      	ldr	r0, [r4, #0]
 8004a80:	1d19      	adds	r1, r3, #4
 8004a82:	6029      	str	r1, [r5, #0]
 8004a84:	0605      	lsls	r5, r0, #24
 8004a86:	d501      	bpl.n	8004a8c <_printf_i+0xe8>
 8004a88:	681e      	ldr	r6, [r3, #0]
 8004a8a:	e002      	b.n	8004a92 <_printf_i+0xee>
 8004a8c:	0641      	lsls	r1, r0, #25
 8004a8e:	d5fb      	bpl.n	8004a88 <_printf_i+0xe4>
 8004a90:	881e      	ldrh	r6, [r3, #0]
 8004a92:	4853      	ldr	r0, [pc, #332]	; (8004be0 <_printf_i+0x23c>)
 8004a94:	2f6f      	cmp	r7, #111	; 0x6f
 8004a96:	bf0c      	ite	eq
 8004a98:	2308      	moveq	r3, #8
 8004a9a:	230a      	movne	r3, #10
 8004a9c:	2100      	movs	r1, #0
 8004a9e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004aa2:	6865      	ldr	r5, [r4, #4]
 8004aa4:	60a5      	str	r5, [r4, #8]
 8004aa6:	2d00      	cmp	r5, #0
 8004aa8:	bfa2      	ittt	ge
 8004aaa:	6821      	ldrge	r1, [r4, #0]
 8004aac:	f021 0104 	bicge.w	r1, r1, #4
 8004ab0:	6021      	strge	r1, [r4, #0]
 8004ab2:	b90e      	cbnz	r6, 8004ab8 <_printf_i+0x114>
 8004ab4:	2d00      	cmp	r5, #0
 8004ab6:	d04b      	beq.n	8004b50 <_printf_i+0x1ac>
 8004ab8:	4615      	mov	r5, r2
 8004aba:	fbb6 f1f3 	udiv	r1, r6, r3
 8004abe:	fb03 6711 	mls	r7, r3, r1, r6
 8004ac2:	5dc7      	ldrb	r7, [r0, r7]
 8004ac4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004ac8:	4637      	mov	r7, r6
 8004aca:	42bb      	cmp	r3, r7
 8004acc:	460e      	mov	r6, r1
 8004ace:	d9f4      	bls.n	8004aba <_printf_i+0x116>
 8004ad0:	2b08      	cmp	r3, #8
 8004ad2:	d10b      	bne.n	8004aec <_printf_i+0x148>
 8004ad4:	6823      	ldr	r3, [r4, #0]
 8004ad6:	07de      	lsls	r6, r3, #31
 8004ad8:	d508      	bpl.n	8004aec <_printf_i+0x148>
 8004ada:	6923      	ldr	r3, [r4, #16]
 8004adc:	6861      	ldr	r1, [r4, #4]
 8004ade:	4299      	cmp	r1, r3
 8004ae0:	bfde      	ittt	le
 8004ae2:	2330      	movle	r3, #48	; 0x30
 8004ae4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004ae8:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004aec:	1b52      	subs	r2, r2, r5
 8004aee:	6122      	str	r2, [r4, #16]
 8004af0:	f8cd a000 	str.w	sl, [sp]
 8004af4:	464b      	mov	r3, r9
 8004af6:	aa03      	add	r2, sp, #12
 8004af8:	4621      	mov	r1, r4
 8004afa:	4640      	mov	r0, r8
 8004afc:	f7ff fee4 	bl	80048c8 <_printf_common>
 8004b00:	3001      	adds	r0, #1
 8004b02:	d14a      	bne.n	8004b9a <_printf_i+0x1f6>
 8004b04:	f04f 30ff 	mov.w	r0, #4294967295
 8004b08:	b004      	add	sp, #16
 8004b0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b0e:	6823      	ldr	r3, [r4, #0]
 8004b10:	f043 0320 	orr.w	r3, r3, #32
 8004b14:	6023      	str	r3, [r4, #0]
 8004b16:	4833      	ldr	r0, [pc, #204]	; (8004be4 <_printf_i+0x240>)
 8004b18:	2778      	movs	r7, #120	; 0x78
 8004b1a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004b1e:	6823      	ldr	r3, [r4, #0]
 8004b20:	6829      	ldr	r1, [r5, #0]
 8004b22:	061f      	lsls	r7, r3, #24
 8004b24:	f851 6b04 	ldr.w	r6, [r1], #4
 8004b28:	d402      	bmi.n	8004b30 <_printf_i+0x18c>
 8004b2a:	065f      	lsls	r7, r3, #25
 8004b2c:	bf48      	it	mi
 8004b2e:	b2b6      	uxthmi	r6, r6
 8004b30:	07df      	lsls	r7, r3, #31
 8004b32:	bf48      	it	mi
 8004b34:	f043 0320 	orrmi.w	r3, r3, #32
 8004b38:	6029      	str	r1, [r5, #0]
 8004b3a:	bf48      	it	mi
 8004b3c:	6023      	strmi	r3, [r4, #0]
 8004b3e:	b91e      	cbnz	r6, 8004b48 <_printf_i+0x1a4>
 8004b40:	6823      	ldr	r3, [r4, #0]
 8004b42:	f023 0320 	bic.w	r3, r3, #32
 8004b46:	6023      	str	r3, [r4, #0]
 8004b48:	2310      	movs	r3, #16
 8004b4a:	e7a7      	b.n	8004a9c <_printf_i+0xf8>
 8004b4c:	4824      	ldr	r0, [pc, #144]	; (8004be0 <_printf_i+0x23c>)
 8004b4e:	e7e4      	b.n	8004b1a <_printf_i+0x176>
 8004b50:	4615      	mov	r5, r2
 8004b52:	e7bd      	b.n	8004ad0 <_printf_i+0x12c>
 8004b54:	682b      	ldr	r3, [r5, #0]
 8004b56:	6826      	ldr	r6, [r4, #0]
 8004b58:	6961      	ldr	r1, [r4, #20]
 8004b5a:	1d18      	adds	r0, r3, #4
 8004b5c:	6028      	str	r0, [r5, #0]
 8004b5e:	0635      	lsls	r5, r6, #24
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	d501      	bpl.n	8004b68 <_printf_i+0x1c4>
 8004b64:	6019      	str	r1, [r3, #0]
 8004b66:	e002      	b.n	8004b6e <_printf_i+0x1ca>
 8004b68:	0670      	lsls	r0, r6, #25
 8004b6a:	d5fb      	bpl.n	8004b64 <_printf_i+0x1c0>
 8004b6c:	8019      	strh	r1, [r3, #0]
 8004b6e:	2300      	movs	r3, #0
 8004b70:	6123      	str	r3, [r4, #16]
 8004b72:	4615      	mov	r5, r2
 8004b74:	e7bc      	b.n	8004af0 <_printf_i+0x14c>
 8004b76:	682b      	ldr	r3, [r5, #0]
 8004b78:	1d1a      	adds	r2, r3, #4
 8004b7a:	602a      	str	r2, [r5, #0]
 8004b7c:	681d      	ldr	r5, [r3, #0]
 8004b7e:	6862      	ldr	r2, [r4, #4]
 8004b80:	2100      	movs	r1, #0
 8004b82:	4628      	mov	r0, r5
 8004b84:	f7fb fb2c 	bl	80001e0 <memchr>
 8004b88:	b108      	cbz	r0, 8004b8e <_printf_i+0x1ea>
 8004b8a:	1b40      	subs	r0, r0, r5
 8004b8c:	6060      	str	r0, [r4, #4]
 8004b8e:	6863      	ldr	r3, [r4, #4]
 8004b90:	6123      	str	r3, [r4, #16]
 8004b92:	2300      	movs	r3, #0
 8004b94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004b98:	e7aa      	b.n	8004af0 <_printf_i+0x14c>
 8004b9a:	6923      	ldr	r3, [r4, #16]
 8004b9c:	462a      	mov	r2, r5
 8004b9e:	4649      	mov	r1, r9
 8004ba0:	4640      	mov	r0, r8
 8004ba2:	47d0      	blx	sl
 8004ba4:	3001      	adds	r0, #1
 8004ba6:	d0ad      	beq.n	8004b04 <_printf_i+0x160>
 8004ba8:	6823      	ldr	r3, [r4, #0]
 8004baa:	079b      	lsls	r3, r3, #30
 8004bac:	d413      	bmi.n	8004bd6 <_printf_i+0x232>
 8004bae:	68e0      	ldr	r0, [r4, #12]
 8004bb0:	9b03      	ldr	r3, [sp, #12]
 8004bb2:	4298      	cmp	r0, r3
 8004bb4:	bfb8      	it	lt
 8004bb6:	4618      	movlt	r0, r3
 8004bb8:	e7a6      	b.n	8004b08 <_printf_i+0x164>
 8004bba:	2301      	movs	r3, #1
 8004bbc:	4632      	mov	r2, r6
 8004bbe:	4649      	mov	r1, r9
 8004bc0:	4640      	mov	r0, r8
 8004bc2:	47d0      	blx	sl
 8004bc4:	3001      	adds	r0, #1
 8004bc6:	d09d      	beq.n	8004b04 <_printf_i+0x160>
 8004bc8:	3501      	adds	r5, #1
 8004bca:	68e3      	ldr	r3, [r4, #12]
 8004bcc:	9903      	ldr	r1, [sp, #12]
 8004bce:	1a5b      	subs	r3, r3, r1
 8004bd0:	42ab      	cmp	r3, r5
 8004bd2:	dcf2      	bgt.n	8004bba <_printf_i+0x216>
 8004bd4:	e7eb      	b.n	8004bae <_printf_i+0x20a>
 8004bd6:	2500      	movs	r5, #0
 8004bd8:	f104 0619 	add.w	r6, r4, #25
 8004bdc:	e7f5      	b.n	8004bca <_printf_i+0x226>
 8004bde:	bf00      	nop
 8004be0:	08005611 	.word	0x08005611
 8004be4:	08005622 	.word	0x08005622

08004be8 <memmove>:
 8004be8:	4288      	cmp	r0, r1
 8004bea:	b510      	push	{r4, lr}
 8004bec:	eb01 0402 	add.w	r4, r1, r2
 8004bf0:	d902      	bls.n	8004bf8 <memmove+0x10>
 8004bf2:	4284      	cmp	r4, r0
 8004bf4:	4623      	mov	r3, r4
 8004bf6:	d807      	bhi.n	8004c08 <memmove+0x20>
 8004bf8:	1e43      	subs	r3, r0, #1
 8004bfa:	42a1      	cmp	r1, r4
 8004bfc:	d008      	beq.n	8004c10 <memmove+0x28>
 8004bfe:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004c02:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004c06:	e7f8      	b.n	8004bfa <memmove+0x12>
 8004c08:	4402      	add	r2, r0
 8004c0a:	4601      	mov	r1, r0
 8004c0c:	428a      	cmp	r2, r1
 8004c0e:	d100      	bne.n	8004c12 <memmove+0x2a>
 8004c10:	bd10      	pop	{r4, pc}
 8004c12:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004c16:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004c1a:	e7f7      	b.n	8004c0c <memmove+0x24>

08004c1c <_sbrk_r>:
 8004c1c:	b538      	push	{r3, r4, r5, lr}
 8004c1e:	4d06      	ldr	r5, [pc, #24]	; (8004c38 <_sbrk_r+0x1c>)
 8004c20:	2300      	movs	r3, #0
 8004c22:	4604      	mov	r4, r0
 8004c24:	4608      	mov	r0, r1
 8004c26:	602b      	str	r3, [r5, #0]
 8004c28:	f7fc fa7a 	bl	8001120 <_sbrk>
 8004c2c:	1c43      	adds	r3, r0, #1
 8004c2e:	d102      	bne.n	8004c36 <_sbrk_r+0x1a>
 8004c30:	682b      	ldr	r3, [r5, #0]
 8004c32:	b103      	cbz	r3, 8004c36 <_sbrk_r+0x1a>
 8004c34:	6023      	str	r3, [r4, #0]
 8004c36:	bd38      	pop	{r3, r4, r5, pc}
 8004c38:	20001488 	.word	0x20001488

08004c3c <memcpy>:
 8004c3c:	440a      	add	r2, r1
 8004c3e:	4291      	cmp	r1, r2
 8004c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8004c44:	d100      	bne.n	8004c48 <memcpy+0xc>
 8004c46:	4770      	bx	lr
 8004c48:	b510      	push	{r4, lr}
 8004c4a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004c4e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004c52:	4291      	cmp	r1, r2
 8004c54:	d1f9      	bne.n	8004c4a <memcpy+0xe>
 8004c56:	bd10      	pop	{r4, pc}

08004c58 <_realloc_r>:
 8004c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c5c:	4680      	mov	r8, r0
 8004c5e:	4614      	mov	r4, r2
 8004c60:	460e      	mov	r6, r1
 8004c62:	b921      	cbnz	r1, 8004c6e <_realloc_r+0x16>
 8004c64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004c68:	4611      	mov	r1, r2
 8004c6a:	f7ff bc49 	b.w	8004500 <_malloc_r>
 8004c6e:	b92a      	cbnz	r2, 8004c7c <_realloc_r+0x24>
 8004c70:	f7ff fbda 	bl	8004428 <_free_r>
 8004c74:	4625      	mov	r5, r4
 8004c76:	4628      	mov	r0, r5
 8004c78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c7c:	f000 f81b 	bl	8004cb6 <_malloc_usable_size_r>
 8004c80:	4284      	cmp	r4, r0
 8004c82:	4607      	mov	r7, r0
 8004c84:	d802      	bhi.n	8004c8c <_realloc_r+0x34>
 8004c86:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004c8a:	d812      	bhi.n	8004cb2 <_realloc_r+0x5a>
 8004c8c:	4621      	mov	r1, r4
 8004c8e:	4640      	mov	r0, r8
 8004c90:	f7ff fc36 	bl	8004500 <_malloc_r>
 8004c94:	4605      	mov	r5, r0
 8004c96:	2800      	cmp	r0, #0
 8004c98:	d0ed      	beq.n	8004c76 <_realloc_r+0x1e>
 8004c9a:	42bc      	cmp	r4, r7
 8004c9c:	4622      	mov	r2, r4
 8004c9e:	4631      	mov	r1, r6
 8004ca0:	bf28      	it	cs
 8004ca2:	463a      	movcs	r2, r7
 8004ca4:	f7ff ffca 	bl	8004c3c <memcpy>
 8004ca8:	4631      	mov	r1, r6
 8004caa:	4640      	mov	r0, r8
 8004cac:	f7ff fbbc 	bl	8004428 <_free_r>
 8004cb0:	e7e1      	b.n	8004c76 <_realloc_r+0x1e>
 8004cb2:	4635      	mov	r5, r6
 8004cb4:	e7df      	b.n	8004c76 <_realloc_r+0x1e>

08004cb6 <_malloc_usable_size_r>:
 8004cb6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004cba:	1f18      	subs	r0, r3, #4
 8004cbc:	2b00      	cmp	r3, #0
 8004cbe:	bfbc      	itt	lt
 8004cc0:	580b      	ldrlt	r3, [r1, r0]
 8004cc2:	18c0      	addlt	r0, r0, r3
 8004cc4:	4770      	bx	lr
	...

08004cc8 <_init>:
 8004cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cca:	bf00      	nop
 8004ccc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004cce:	bc08      	pop	{r3}
 8004cd0:	469e      	mov	lr, r3
 8004cd2:	4770      	bx	lr

08004cd4 <_fini>:
 8004cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cd6:	bf00      	nop
 8004cd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004cda:	bc08      	pop	{r3}
 8004cdc:	469e      	mov	lr, r3
 8004cde:	4770      	bx	lr
